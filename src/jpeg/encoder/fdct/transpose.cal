package jpeg.encoder.fdct;

actor transpose() 
	int(size=32) In 
		==> 
			int(size=32) Out :
			
	
	int transpose[64] =[0,8,16,24,32,40,48,56,
					    1,9,17,25,33,41,49,57,
				     	2,10,18,26,34,42,50,58,
				    	3,11,19,27,35,43,51,59,
					    4,12,20,28,36,44,52,60,
					    5,13,21,29,37,45,53,61,
					    6,14,22,30,38,46,54,62,
					    7,15,23,31,39,47,55,63];	
	
	int(size=10) Counter := 0;
	
	int data[64];
	
	read: action In:[x] ==>
	do
		data[Counter] := x;
		Counter := Counter + 1;
	end
	
	
	
	sent: action ==> Out:[token]
	var
		int token
	do
		token := data[transpose[Counter]];
		Counter := Counter + 1;
	end
	
	finish: action ==>
	guard
		Counter = 64
	do
		Counter := 0;
	end
	
	schedule fsm s0:
		s0	(read)		--> s0;
		s0	(finish)	--> s1;
		
		s1	(sent)		--> s1;
		s1	(finish)	--> s0;
	end
	
	priority
		finish > read;
		finish > sent;
	end
	
end