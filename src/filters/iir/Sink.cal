package filters.iir;

actor Sink () int In ==> :

	int values [ 128 ] := [ 55, 88, 132, 155, 164, 144, 180, 173, 145, 112, 101,
	89, 138, 167, 194, 209, 213, 155, 115, 131, 154, 108, 92, 62, 61, 61, 117,
	109, 75, 104, 138, 99, 66, 74, 84, 91, 99, 105, 116, 122, 124, 148, 123, 128,
	133, 105, 116, 95, 109, 78, 124, 100, 86, 89, 83, 118, 105, 79, 120, 101,
	109, 76, 103, 101, 93, 90, 138, 131, 87, 119, 113, 77, 105, 107, 121, 132,
	126, 88, 119, 141, 128, 89, 139, 166, 180, 158, 180, 192, 183, 165, 116, 108,
	91, 133, 142, 156, 117, 158, 139, 144, 163, 166, 110, 115, 160, 107, 74, 58,
	89, 63, 77, 81, 112, 105, 97, 121, 129, 106, 102, 85, 78, 123, 118, 134, 134,
	168, 140, 124 ];

	int Counter := 0;

	int Result := 0;

	ReadAndCompare: action In:[ token ] ==> 
	do
		if token != values[Counter] then
			Result := Result + 1;
		end
		Counter := Counter + 1;
	end

	Stop: action ==>
	guard
		Counter = 128
	do
		Counter := 0;
		println("Result: " + Result);
	end

	schedule fsm s0 :
		s0 ( ReadAndCompare ) --> s0;
		s0 ( Stop ) --> s0;
	end 
	
	priority
		Stop > ReadAndCompare;
	end

end