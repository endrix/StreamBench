// fir.cal -- part of 'DigitalFiltering' project
//
// Author: 
// Jani Boutellier (jani.boutellier@ee.oulu.fi)
// Department of Computer Science and Engineering
// University of Oulu, Finland
//
// Description:
// Monolithic implementation of FIR filter.
//
// Changelog:
// - initial version 08/03/2012
// - H0, H1 and SCALING moved as parameters 16/05/2012
// - simplification 24/04/2014 (jboutell)

package filters.common;

import filters.common.constants.*;

actor fir(int(size=SAMPLE_SZ) H0, int(size=SAMPLE_SZ) H1, int(size=SAMPLE_SZ) SCALING) int(size=SAMPLE_SZ) operand_1 ==> int(size=SAMPLE_SZ) result :

	int(size=SAMPLE_SZ) d1;
	int(size=SAMPLE_SZ) d2;
	int(size=SAMPLE_SZ) d3;
	int(size=SAMPLE_SZ) d4;

	initialize ==>
	do
		d1 := 0;
		d2 := 0;
		d3 := 0;
		d4 := 0;
	end

	action operand_1:[ x ] ==> result:[ y ]
	var
		int(size=SAMPLE_SZ) y,
		int(size=32) accum
	do
		d1 := d2;
		d2 := d3;
		d3 := d4;
		d4 := x;

		accum := ((d1 + d4) * H0 + (d2 + d3) * H1);
		y := accum >> SCALING;
	end

end
