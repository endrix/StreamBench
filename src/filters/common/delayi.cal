// delayi.cal -- part of 'DigitalFiltering' project
//
// Author: 
// Jani Boutellier (jani.boutellier@ee.oulu.fi)
// Department of Computer Science and Engineering
// University of Oulu, Finland
//
// Description:
// Initial sample actor. Produces 'delay' number
// of initial samples that have the value 'value'.
//
// Changelog:
// - initial version 08/03/2012
// - updated version 27/09/2013: simplification
// - updated version 27/09/2013: generalization 
//   to any delay

package filters.common;

import filters.common.constants.*;

actor delayi(int value, int delay) int(size=SAMPLE_SZ) operand_1 ==> int(size=SAMPLE_SZ) result :

	int count;

	init: action ==>
	do
		count := 0;
	end

	token: action ==> result:[ value ]
	guard
		count < delay
	do
		count := count + 1;
	end

	run: action operand_1:[ x ] ==> result:[ x ]
	end

	schedule fsm s_init:
		s_init	( init ) 	--> s_delay;
		s_delay	( token ) 	--> s_delay;
		s_delay	( run ) 	--> s_run;
		s_run	( run ) 	--> s_run;
	end
	
	priority 
		token > run;
	end

end
