<?xml version="1.0" encoding="UTF-8"?>
<net.sf.orcc.df:Actor xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:net.sf.orcc.df="http://orcc.sf.net/model/2011/Df" xmlns:net.sf.orcc.ir="http://orcc.sf.net/model/2011/Ir"
    label="mpeg4sp.iDCT.Clip" actionsOutsideFsm="#//@actions.0 #//@actions.1"
    fileName="/StreamBench/src/mpeg4sp/iDCT/Clip.cal" lineNumber="46">
  <actions>
    <body lineNumber="52" name="read_signed">
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.0/@target"
          lineNumber="52" name="s" uses="#//@actions.0/@body/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="52">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.0/@inputPattern/@variables.0"/>
          <target variable="#//@actions.0/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="56">
          <target variable="#//@stateVars.1"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@body/@locals.0"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="57">
          <target variable="#//@stateVars.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="63">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="6"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.1">
      <numTokensMap key="#//@inputs.1" value="1"/>
      <portToVarMap key="#//@inputs.1" value="#//@actions.0/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="52" name="SIGNED" uses="#//@actions.0/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.0/@inputPattern/@variables.0" value="#//@inputs.1"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="52" name="isSchedulable_read_signed">
      <locals assignable="true" defs="#//@actions.0/@scheduler/@blocks.0/@instructions.1/@target"
          name="result" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@scheduler/@blocks.0/@instructions.0/@target"
          name="local_count" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="7"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@actions.0/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.0/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@scheduler/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>read_signed</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="60" name="limit">
      <locals assignable="true" defs="#//@actions.1/@body/@blocks.0/@instructions.0/@target"
          lineNumber="60" name="i" uses="#//@actions.1/@body/@blocks.3/@condition/@e1/@use #//@actions.1/@body/@blocks.3/@elseBlocks.0/@condition/@e1/@use #//@actions.1/@body/@blocks.3/@elseBlocks.0/@elseBlocks.0/@instructions.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
      </locals>
      <locals assignable="true" defs="#//@actions.1/@body/@blocks.0/@instructions.1/@target"
          name="local_sflag" uses="#//@actions.1/@body/@blocks.1/@condition/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals defs="#//@actions.1/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target #//@actions.1/@body/@blocks.1/@elseBlocks.0/@instructions.0/@target"
          lineNumber="72" name="min" uses="#//@actions.1/@body/@blocks.3/@elseBlocks.0/@condition/@e2/@use #//@actions.1/@body/@blocks.3/@elseBlocks.0/@thenBlocks.0/@instructions.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.1/@body/@blocks.2/@instructions.0/@target"
          name="local_count" uses="#//@actions.1/@body/@blocks.2/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="7"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="60">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.1/@inputPattern/@variables.0"/>
          <target variable="#//@actions.1/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.1"/>
          <target variable="#//@actions.1/@body/@locals.1"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="72">
        <condition xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@actions.1/@body/@locals.1"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="75">
            <target variable="#//@actions.1/@body/@locals.2"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="73">
            <target variable="#//@actions.1/@body/@locals.2"/>
            <value xsi:type="net.sf.orcc.ir:ExprUnary" op="MINUS">
              <expr xsi:type="net.sf.orcc.ir:ExprInt" value="255">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="8"/>
              </expr>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@actions.1/@body/@locals.3"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="78">
          <target variable="#//@stateVars.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.1/@body/@locals.3"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="7"/>
          </value>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="60">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="GT">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.1/@body/@locals.0"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="255">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="8"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="63">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.1/@body/@locals.0"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.1/@body/@locals.2"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="66">
              <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </indexes>
              <target variable="#//@actions.1/@outputPattern/@variables.0"/>
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.1/@body/@locals.0"/>
              </value>
            </instructions>
          </elseBlocks>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="64">
              <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </indexes>
              <target variable="#//@actions.1/@outputPattern/@variables.0"/>
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.1/@body/@locals.2"/>
              </value>
            </instructions>
          </thenBlocks>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="61">
            <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </indexes>
            <target variable="#//@actions.1/@outputPattern/@variables.0"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="255">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="8"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.0">
      <numTokensMap key="#//@inputs.0" value="1"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.1/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="60" name="I" uses="#//@actions.1/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.1/@inputPattern/@variables.0" value="#//@inputs.0"/>
    </inputPattern>
    <outputPattern ports="#//@outputs.0">
      <numTokensMap key="#//@outputs.0" value="1"/>
      <portToVarMap key="#//@outputs.0" value="#//@actions.1/@outputPattern/@variables.0"/>
      <variables assignable="true" defs="#//@actions.1/@body/@blocks.3/@thenBlocks.0/@instructions.0/@target #//@actions.1/@body/@blocks.3/@elseBlocks.0/@thenBlocks.0/@instructions.0/@target #//@actions.1/@body/@blocks.3/@elseBlocks.0/@elseBlocks.0/@instructions.0/@target"
          lineNumber="60" name="O">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.1/@outputPattern/@variables.0" value="#//@outputs.0"/>
    </outputPattern>
    <peekPattern/>
    <scheduler lineNumber="60" name="isSchedulable_limit">
      <locals assignable="true" defs="#//@actions.1/@scheduler/@blocks.0/@instructions.1/@target"
          name="result" uses="#//@actions.1/@scheduler/@blocks.0/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.1/@scheduler/@blocks.0/@instructions.0/@target"
          name="local_count" uses="#//@actions.1/@scheduler/@blocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="7"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@actions.1/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.1/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="GE">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.1/@scheduler/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.1/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>limit</identifiers>
    </tag>
  </actions>
  <inputs label="I">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
  </inputs>
  <inputs label="SIGNED">
    <type xsi:type="net.sf.orcc.ir:TypeBool"/>
  </inputs>
  <outputs label="O">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
  </outputs>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.2/@target #//@actions.1/@body/@blocks.2/@instructions.1/@target"
      lineNumber="48" name="count" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.0/@source #//@actions.1/@body/@blocks.2/@instructions.0/@source #//@actions.1/@scheduler/@blocks.0/@instructions.0/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="-1">
      <type xsi:type="net.sf.orcc.ir:TypeInt" size="1"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="7"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.1/@target"
      lineNumber="50" name="sflag" uses="#//@actions.1/@body/@blocks.0/@instructions.1/@source">
    <type xsi:type="net.sf.orcc.ir:TypeBool"/>
  </stateVars>
</net.sf.orcc.df:Actor>
