<?xml version="1.0" encoding="UTF-8"?>
<net.sf.orcc.df:Actor xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:net.sf.orcc.df="http://orcc.sf.net/model/2011/Df" xmlns:net.sf.orcc.ir="http://orcc.sf.net/model/2011/Ir"
    label="mpeg4sp.Sequence" fileName="/StreamBench/src/mpeg4sp/Sequence.cal"
    lineNumber="47">
  <actions>
    <body lineNumber="106" name="start">
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.0/@target"
          lineNumber="106" name="cmd">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="106">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.0/@inputPattern/@variables.0"/>
          <target variable="#//@actions.0/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="110">
          <target variable="#//@stateVars.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="111">
          <target variable="#//@stateVars.1"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="112">
          <target variable="#//@stateVars.2"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="113">
          <target variable="#//@stateVars.3"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.0">
      <numTokensMap key="#//@inputs.0" value="1"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.0/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="106" name="BTYPE" uses="#//@actions.0/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.0/@inputPattern/@variables.0" value="#//@inputs.0"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern ports="#//@inputs.0">
      <numTokensMap key="#//@inputs.0" value="1"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.0/@peekPattern/@variables.0"/>
      <variables assignable="true" lineNumber="106" name="BTYPE" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.0/@peekPattern/@variables.0" value="#//@inputs.0"/>
    </peekPattern>
    <scheduler lineNumber="106" name="isSchedulable_start">
      <locals assignable="true" defs="#//@actions.0/@scheduler/@blocks.0/@instructions.2/@target"
          name="result" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.3/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@scheduler/@blocks.0/@instructions.0/@target"
          lineNumber="106" name="cmd" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.2/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@scheduler/@blocks.0/@instructions.1/@target"
          name="local_NEWVOP" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.2/@value/@e1/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="106">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.0/@peekPattern/@variables.0"/>
          <target variable="#//@actions.0/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.23"/>
          <target variable="#//@actions.0/@scheduler/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.0/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@scheduler/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@scheduler/@locals.2"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>start</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="116" name="getw">
      <locals assignable="true" defs="#//@actions.1/@body/@blocks.0/@instructions.0/@target"
          lineNumber="116" name="w" uses="#//@actions.1/@body/@blocks.0/@instructions.1/@value/@use #//@actions.1/@body/@blocks.0/@instructions.4/@value/@e2/@use #//@actions.1/@body/@blocks.0/@instructions.5/@value/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="116">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.1/@inputPattern/@variables.0"/>
          <target variable="#//@actions.1/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="118">
          <target variable="#//@stateVars.4"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.1/@body/@locals.0"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="119">
          <target variable="#//@stateVars.7"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="120">
          <target variable="#//@stateVars.8"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="2">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="121">
          <target variable="#//@stateVars.9"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.1/@body/@locals.0"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="122">
          <target variable="#//@stateVars.10"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.1/@body/@locals.0"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.0">
      <numTokensMap key="#//@inputs.0" value="1"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.1/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="116" name="BTYPE" uses="#//@actions.1/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.1/@inputPattern/@variables.0" value="#//@inputs.0"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="116" name="isSchedulable_getw">
      <locals assignable="true" defs="#//@actions.1/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.1/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.1/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.1/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>getw</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="125" name="geth">
      <locals assignable="true" defs="#//@actions.2/@body/@blocks.0/@instructions.0/@target"
          lineNumber="125" name="h">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="125">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.2/@inputPattern/@variables.0"/>
          <target variable="#//@actions.2/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.0">
      <numTokensMap key="#//@inputs.0" value="1"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.2/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="125" name="BTYPE" uses="#//@actions.2/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.2/@inputPattern/@variables.0" value="#//@inputs.0"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="125" name="isSchedulable_geth">
      <locals assignable="true" defs="#//@actions.2/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.2/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.2/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.2/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>geth</identifiers>
    </tag>
  </actions>
  <actions>
    <attributes name="IsPrecededBy" stringValue="start"/>
    <body lineNumber="128" name="read_intra">
      <locals assignable="true" defs="#//@actions.3/@body/@blocks.0/@instructions.0/@target"
          lineNumber="128" name="btype">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <locals assignable="true" defs="#//@actions.3/@body/@blocks.0/@instructions.1/@target"
          name="local_ptr" uses="#//@actions.3/@body/@blocks.0/@instructions.3/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.3/@body/@blocks.0/@instructions.2/@target"
          name="local_comp" uses="#//@actions.3/@body/@blocks.0/@instructions.3/@arguments.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <locals assignable="true" defs="#//@actions.3/@body/@blocks.0/@instructions.3/@target"
          name="tmp_access" uses="#//@actions.3/@body/@blocks.0/@instructions.4/@indexes.0/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="128">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.3/@inputPattern/@variables.0"/>
          <target variable="#//@actions.3/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.7"/>
          <target variable="#//@actions.3/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.3/@body/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="132" procedure="#//@procs.1">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.3/@body/@locals.1"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.3/@body/@locals.2"/>
            </value>
          </arguments>
          <target variable="#//@actions.3/@body/@locals.3"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="132">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.3/@body/@locals.3"/>
          </indexes>
          <target variable="#//@stateVars.6"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.0">
      <numTokensMap key="#//@inputs.0" value="1"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.3/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="128" name="BTYPE" uses="#//@actions.3/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.3/@inputPattern/@variables.0" value="#//@inputs.0"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern ports="#//@inputs.0">
      <numTokensMap key="#//@inputs.0" value="1"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.3/@peekPattern/@variables.0"/>
      <variables assignable="true" lineNumber="128" name="BTYPE" uses="#//@actions.3/@scheduler/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.3/@peekPattern/@variables.0" value="#//@inputs.0"/>
    </peekPattern>
    <scheduler lineNumber="128" name="isSchedulable_read_intra">
      <locals assignable="true" defs="#//@actions.3/@scheduler/@blocks.0/@instructions.2/@target"
          name="result" uses="#//@actions.3/@scheduler/@blocks.0/@instructions.3/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.3/@scheduler/@blocks.0/@instructions.0/@target"
          lineNumber="128" name="btype" uses="#//@actions.3/@scheduler/@blocks.0/@instructions.2/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <locals assignable="true" defs="#//@actions.3/@scheduler/@blocks.0/@instructions.1/@target"
          name="local_INTRA" uses="#//@actions.3/@scheduler/@blocks.0/@instructions.2/@value/@e1/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="128">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.3/@peekPattern/@variables.0"/>
          <target variable="#//@actions.3/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.24"/>
          <target variable="#//@actions.3/@scheduler/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.3/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.3/@scheduler/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.3/@scheduler/@locals.2"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.3/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>read</identifiers>
      <identifiers>intra</identifiers>
    </tag>
  </actions>
  <actions>
    <attributes name="IsPrecededBy" stringValue="start-read_intra"/>
    <body lineNumber="135" name="read_other">
      <locals assignable="true" defs="#//@actions.4/@body/@blocks.0/@instructions.0/@target"
          lineNumber="135" name="btype">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <locals assignable="true" defs="#//@actions.4/@body/@blocks.0/@instructions.1/@target"
          name="local_ptr" uses="#//@actions.4/@body/@blocks.0/@instructions.3/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.4/@body/@blocks.0/@instructions.2/@target"
          name="local_comp" uses="#//@actions.4/@body/@blocks.0/@instructions.3/@arguments.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <locals assignable="true" defs="#//@actions.4/@body/@blocks.0/@instructions.3/@target"
          name="tmp_access" uses="#//@actions.4/@body/@blocks.0/@instructions.4/@indexes.0/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="135">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.4/@inputPattern/@variables.0"/>
          <target variable="#//@actions.4/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.7"/>
          <target variable="#//@actions.4/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.4/@body/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="137" procedure="#//@procs.1">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.4/@body/@locals.1"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.4/@body/@locals.2"/>
            </value>
          </arguments>
          <target variable="#//@actions.4/@body/@locals.3"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="137">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.4/@body/@locals.3"/>
          </indexes>
          <target variable="#//@stateVars.6"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.0">
      <numTokensMap key="#//@inputs.0" value="1"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.4/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="135" name="BTYPE" uses="#//@actions.4/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.4/@inputPattern/@variables.0" value="#//@inputs.0"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="135" name="isSchedulable_read_other">
      <locals assignable="true" defs="#//@actions.4/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.4/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.4/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.4/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>read</identifiers>
      <identifiers>other</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="140" name="advance">
      <locals assignable="true" defs="#//@actions.5/@body/@blocks.0/@instructions.0/@target #//@actions.5/@body/@blocks.0/@instructions.2/@target"
          name="local_comp" uses="#//@actions.5/@body/@blocks.0/@instructions.1/@value/@e1/@use #//@actions.5/@body/@blocks.1/@condition/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <locals assignable="true" defs="#//@actions.5/@body/@blocks.1/@thenBlocks.0/@instructions.1/@target #//@actions.5/@body/@blocks.1/@thenBlocks.0/@instructions.4/@target"
          name="local_mbx" uses="#//@actions.5/@body/@blocks.1/@thenBlocks.0/@instructions.2/@value/@e1/@use #//@actions.5/@body/@blocks.1/@thenBlocks.1/@condition/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.5/@body/@blocks.1/@thenBlocks.0/@instructions.5/@target"
          name="local_mbwidth" uses="#//@actions.5/@body/@blocks.1/@thenBlocks.1/@condition/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.0/@target"
          name="local_ptr" uses="#//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.1/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.1/@target"
          name="tmp_decrement" uses="#//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.3/@target"
          name="local_ptr_left" uses="#//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.4/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.4/@target"
          name="tmp_decrement0" uses="#//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.5/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.6/@target"
          name="local_ptr_above" uses="#//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.7/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.7/@target"
          name="tmp_decrement1" uses="#//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.8/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.9/@target"
          name="local_ptr_above_left" uses="#//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.10/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.10/@target"
          name="tmp_decrement2" uses="#//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.11/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.5/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="142">
          <target variable="#//@stateVars.3"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.5/@body/@locals.0"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="5"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.5/@body/@locals.0"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="143">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.5/@body/@locals.0"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="6">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="144">
            <target variable="#//@stateVars.3"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.0"/>
            <target variable="#//@actions.5/@body/@locals.1"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="145">
            <target variable="#//@stateVars.0"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.5/@body/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="146">
            <target variable="#//@stateVars.2"/>
            <value xsi:type="net.sf.orcc.ir:ExprBool"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.0"/>
            <target variable="#//@actions.5/@body/@locals.1"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.4"/>
            <target variable="#//@actions.5/@body/@locals.2"/>
          </instructions>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="147">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.5/@body/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.5/@body/@locals.2"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="148">
              <target variable="#//@stateVars.0"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="149">
              <target variable="#//@stateVars.1"/>
              <value xsi:type="net.sf.orcc.ir:ExprBool"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="150">
              <target variable="#//@stateVars.2"/>
              <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
            </instructions>
          </thenBlocks>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.7"/>
            <target variable="#//@actions.5/@body/@locals.3"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="152" procedure="#//@procs.0">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.5/@body/@locals.3"/>
              </value>
            </arguments>
            <target variable="#//@actions.5/@body/@locals.4"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="152">
            <target variable="#//@stateVars.7"/>
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.5/@body/@locals.4"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.8"/>
            <target variable="#//@actions.5/@body/@locals.5"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="153" procedure="#//@procs.0">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.5/@body/@locals.5"/>
              </value>
            </arguments>
            <target variable="#//@actions.5/@body/@locals.6"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="153">
            <target variable="#//@stateVars.8"/>
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.5/@body/@locals.6"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.9"/>
            <target variable="#//@actions.5/@body/@locals.7"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="154" procedure="#//@procs.0">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.5/@body/@locals.7"/>
              </value>
            </arguments>
            <target variable="#//@actions.5/@body/@locals.8"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="154">
            <target variable="#//@stateVars.9"/>
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.5/@body/@locals.8"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.10"/>
            <target variable="#//@actions.5/@body/@locals.9"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="155" procedure="#//@procs.0">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.5/@body/@locals.9"/>
              </value>
            </arguments>
            <target variable="#//@actions.5/@body/@locals.10"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="155">
            <target variable="#//@stateVars.10"/>
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.5/@body/@locals.10"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="140" name="isSchedulable_advance">
      <locals assignable="true" defs="#//@actions.5/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.5/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.5/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.5/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>advance</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="160" name="predict_b0">
      <locals assignable="true" defs="#//@actions.6/@body/@blocks.0/@instructions.0/@target #//@actions.6/@body/@blocks.1/@thenBlocks.0/@instructions.1/@target #//@actions.6/@body/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.0/@target"
          lineNumber="164" name="a" uses="#//@actions.6/@body/@blocks.1/@thenBlocks.0/@instructions.2/@indexes.0/@use #//@actions.6/@body/@blocks.4/@instructions.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
      </locals>
      <locals assignable="true" defs="#//@actions.6/@body/@blocks.0/@instructions.1/@target #//@actions.6/@body/@blocks.1/@thenBlocks.3/@thenBlocks.0/@instructions.1/@target #//@actions.6/@body/@blocks.1/@thenBlocks.3/@thenBlocks.1/@thenBlocks.0/@instructions.0/@target"
          lineNumber="165" name="b" uses="#//@actions.6/@body/@blocks.1/@thenBlocks.3/@thenBlocks.0/@instructions.2/@indexes.0/@use #//@actions.6/@body/@blocks.4/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
      </locals>
      <locals assignable="true" defs="#//@actions.6/@body/@blocks.0/@instructions.2/@target #//@actions.6/@body/@blocks.3/@thenBlocks.0/@instructions.1/@target #//@actions.6/@body/@blocks.3/@thenBlocks.1/@thenBlocks.0/@instructions.0/@target"
          lineNumber="166" name="c" uses="#//@actions.6/@body/@blocks.3/@thenBlocks.0/@instructions.2/@indexes.0/@use #//@actions.6/@body/@blocks.4/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
      </locals>
      <locals assignable="true" defs="#//@actions.6/@body/@blocks.0/@instructions.3/@target"
          name="local_left_edge" uses="#//@actions.6/@body/@blocks.1/@condition/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.6/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target"
          name="local_ptr_left" uses="#//@actions.6/@body/@blocks.1/@thenBlocks.0/@instructions.1/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.6/@body/@blocks.1/@thenBlocks.0/@instructions.2/@target"
          name="tmp_coded" uses="#//@actions.6/@body/@blocks.1/@thenBlocks.1/@condition/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.6/@body/@blocks.1/@thenBlocks.2/@instructions.0/@target #//@actions.6/@body/@blocks.2/@instructions.0/@target"
          name="local_top_edge" uses="#//@actions.6/@body/@blocks.1/@thenBlocks.3/@condition/@expr/@use #//@actions.6/@body/@blocks.3/@condition/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.6/@body/@blocks.1/@thenBlocks.3/@thenBlocks.0/@instructions.0/@target"
          name="local_ptr_above_left" uses="#//@actions.6/@body/@blocks.1/@thenBlocks.3/@thenBlocks.0/@instructions.1/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.6/@body/@blocks.1/@thenBlocks.3/@thenBlocks.0/@instructions.2/@target"
          name="tmp_coded0" uses="#//@actions.6/@body/@blocks.1/@thenBlocks.3/@thenBlocks.1/@condition/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.6/@body/@blocks.3/@thenBlocks.0/@instructions.0/@target"
          name="local_ptr_above" uses="#//@actions.6/@body/@blocks.3/@thenBlocks.0/@instructions.1/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.6/@body/@blocks.3/@thenBlocks.0/@instructions.2/@target"
          name="tmp_coded1" uses="#//@actions.6/@body/@blocks.3/@thenBlocks.1/@condition/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="164">
          <target variable="#//@actions.6/@body/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="165">
          <target variable="#//@actions.6/@body/@locals.1"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="166">
          <target variable="#//@actions.6/@body/@locals.2"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.2"/>
          <target variable="#//@actions.6/@body/@locals.3"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="168">
        <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
          <expr xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.6/@body/@locals.3"/>
          </expr>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.8"/>
            <target variable="#//@actions.6/@body/@locals.4"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="170" procedure="#//@procs.1">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.6/@body/@locals.4"/>
              </value>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </arguments>
            <target variable="#//@actions.6/@body/@locals.0"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="171">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.6/@body/@locals.0"/>
            </indexes>
            <source variable="#//@stateVars.6"/>
            <target variable="#//@actions.6/@body/@locals.5"/>
          </instructions>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="171">
          <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
            <expr xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.6/@body/@locals.5"/>
            </expr>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="172">
              <target variable="#//@actions.6/@body/@locals.0"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </instructions>
          </thenBlocks>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.1"/>
            <target variable="#//@actions.6/@body/@locals.6"/>
          </instructions>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="174">
          <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
            <expr xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.6/@body/@locals.6"/>
            </expr>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.10"/>
              <target variable="#//@actions.6/@body/@locals.7"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="176" procedure="#//@procs.1">
              <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
                <value xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.6/@body/@locals.7"/>
                </value>
              </arguments>
              <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
                <value xsi:type="net.sf.orcc.ir:ExprInt" value="3">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
                </value>
              </arguments>
              <target variable="#//@actions.6/@body/@locals.1"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="177">
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.6/@body/@locals.1"/>
              </indexes>
              <source variable="#//@stateVars.6"/>
              <target variable="#//@actions.6/@body/@locals.8"/>
            </instructions>
          </thenBlocks>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="177">
            <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
              <expr xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.6/@body/@locals.8"/>
              </expr>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </condition>
            <joinBlock/>
            <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="178">
                <target variable="#//@actions.6/@body/@locals.1"/>
                <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </value>
              </instructions>
            </thenBlocks>
          </thenBlocks>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.1"/>
          <target variable="#//@actions.6/@body/@locals.6"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="183">
        <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
          <expr xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.6/@body/@locals.6"/>
          </expr>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.9"/>
            <target variable="#//@actions.6/@body/@locals.9"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="184" procedure="#//@procs.1">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.6/@body/@locals.9"/>
              </value>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="2">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
              </value>
            </arguments>
            <target variable="#//@actions.6/@body/@locals.2"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="185">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.6/@body/@locals.2"/>
            </indexes>
            <source variable="#//@stateVars.6"/>
            <target variable="#//@actions.6/@body/@locals.10"/>
          </instructions>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="185">
          <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
            <expr xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.6/@body/@locals.10"/>
            </expr>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="186">
              <target variable="#//@actions.6/@body/@locals.2"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </instructions>
          </thenBlocks>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="160">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.6/@outputPattern/@variables.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.6/@body/@locals.0"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="160">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.6/@outputPattern/@variables.1"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.6/@body/@locals.1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="160">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.6/@outputPattern/@variables.2"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.6/@body/@locals.2"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern ports="#//@outputs.0 #//@outputs.1 #//@outputs.2">
      <numTokensMap key="#//@outputs.0" value="1"/>
      <numTokensMap key="#//@outputs.1" value="1"/>
      <numTokensMap key="#//@outputs.2" value="1"/>
      <portToVarMap key="#//@outputs.0" value="#//@actions.6/@outputPattern/@variables.0"/>
      <portToVarMap key="#//@outputs.1" value="#//@actions.6/@outputPattern/@variables.1"/>
      <portToVarMap key="#//@outputs.2" value="#//@actions.6/@outputPattern/@variables.2"/>
      <variables assignable="true" defs="#//@actions.6/@body/@blocks.4/@instructions.0/@target"
          lineNumber="160" name="A">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
        </type>
      </variables>
      <variables assignable="true" defs="#//@actions.6/@body/@blocks.4/@instructions.1/@target"
          lineNumber="160" name="B">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
        </type>
      </variables>
      <variables assignable="true" defs="#//@actions.6/@body/@blocks.4/@instructions.2/@target"
          lineNumber="160" name="C">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.6/@outputPattern/@variables.0" value="#//@outputs.0"/>
      <varToPortMap key="#//@actions.6/@outputPattern/@variables.1" value="#//@outputs.1"/>
      <varToPortMap key="#//@actions.6/@outputPattern/@variables.2" value="#//@outputs.2"/>
    </outputPattern>
    <peekPattern/>
    <scheduler lineNumber="160" name="isSchedulable_predict_b0">
      <locals assignable="true" defs="#//@actions.6/@scheduler/@blocks.0/@instructions.1/@target"
          name="result" uses="#//@actions.6/@scheduler/@blocks.0/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.6/@scheduler/@blocks.0/@instructions.0/@target"
          name="local_comp" uses="#//@actions.6/@scheduler/@blocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.6/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.6/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.6/@scheduler/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.6/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>predict</identifiers>
      <identifiers>b0</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="192" name="predict_b1">
      <locals assignable="true" defs="#//@actions.7/@body/@blocks.0/@instructions.0/@target"
          name="local_ptr" uses="#//@actions.7/@body/@blocks.0/@instructions.1/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.7/@body/@blocks.0/@instructions.1/@target #//@actions.7/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target"
          lineNumber="196" name="a" uses="#//@actions.7/@body/@blocks.0/@instructions.4/@indexes.0/@use #//@actions.7/@body/@blocks.4/@instructions.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
      </locals>
      <locals assignable="true" defs="#//@actions.7/@body/@blocks.0/@instructions.2/@target #//@actions.7/@body/@blocks.3/@thenBlocks.0/@instructions.1/@target #//@actions.7/@body/@blocks.3/@thenBlocks.1/@thenBlocks.0/@instructions.0/@target"
          lineNumber="197" name="b" uses="#//@actions.7/@body/@blocks.3/@thenBlocks.0/@instructions.2/@indexes.0/@use #//@actions.7/@body/@blocks.4/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
      </locals>
      <locals assignable="true" defs="#//@actions.7/@body/@blocks.0/@instructions.3/@target #//@actions.7/@body/@blocks.3/@thenBlocks.2/@instructions.1/@target #//@actions.7/@body/@blocks.3/@thenBlocks.3/@thenBlocks.0/@instructions.0/@target"
          lineNumber="198" name="c" uses="#//@actions.7/@body/@blocks.3/@thenBlocks.2/@instructions.2/@indexes.0/@use #//@actions.7/@body/@blocks.4/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
      </locals>
      <locals assignable="true" defs="#//@actions.7/@body/@blocks.0/@instructions.4/@target"
          name="tmp_coded" uses="#//@actions.7/@body/@blocks.1/@condition/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.7/@body/@blocks.2/@instructions.0/@target"
          name="local_top_edge" uses="#//@actions.7/@body/@blocks.3/@condition/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.7/@body/@blocks.3/@thenBlocks.0/@instructions.0/@target #//@actions.7/@body/@blocks.3/@thenBlocks.2/@instructions.0/@target"
          name="local_ptr_above" uses="#//@actions.7/@body/@blocks.3/@thenBlocks.0/@instructions.1/@arguments.0/@value/@use #//@actions.7/@body/@blocks.3/@thenBlocks.2/@instructions.1/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.7/@body/@blocks.3/@thenBlocks.0/@instructions.2/@target"
          name="tmp_coded0" uses="#//@actions.7/@body/@blocks.3/@thenBlocks.1/@condition/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.7/@body/@blocks.3/@thenBlocks.2/@instructions.2/@target"
          name="tmp_coded1" uses="#//@actions.7/@body/@blocks.3/@thenBlocks.3/@condition/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.7"/>
          <target variable="#//@actions.7/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="196" procedure="#//@procs.1">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.7/@body/@locals.0"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
          <target variable="#//@actions.7/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="197">
          <target variable="#//@actions.7/@body/@locals.2"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="198">
          <target variable="#//@actions.7/@body/@locals.3"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="200">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.7/@body/@locals.1"/>
          </indexes>
          <source variable="#//@stateVars.6"/>
          <target variable="#//@actions.7/@body/@locals.4"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="200">
        <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
          <expr xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.7/@body/@locals.4"/>
          </expr>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="201">
            <target variable="#//@actions.7/@body/@locals.1"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.1"/>
          <target variable="#//@actions.7/@body/@locals.5"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="203">
        <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
          <expr xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.7/@body/@locals.5"/>
          </expr>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.9"/>
            <target variable="#//@actions.7/@body/@locals.6"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="205" procedure="#//@procs.1">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.7/@body/@locals.6"/>
              </value>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="2">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
              </value>
            </arguments>
            <target variable="#//@actions.7/@body/@locals.2"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="206">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.7/@body/@locals.2"/>
            </indexes>
            <source variable="#//@stateVars.6"/>
            <target variable="#//@actions.7/@body/@locals.7"/>
          </instructions>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="206">
          <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
            <expr xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.7/@body/@locals.7"/>
            </expr>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="207">
              <target variable="#//@actions.7/@body/@locals.2"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </instructions>
          </thenBlocks>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.9"/>
            <target variable="#//@actions.7/@body/@locals.6"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="210" procedure="#//@procs.1">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.7/@body/@locals.6"/>
              </value>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="3">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
              </value>
            </arguments>
            <target variable="#//@actions.7/@body/@locals.3"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="211">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.7/@body/@locals.3"/>
            </indexes>
            <source variable="#//@stateVars.6"/>
            <target variable="#//@actions.7/@body/@locals.8"/>
          </instructions>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="211">
          <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
            <expr xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.7/@body/@locals.8"/>
            </expr>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="212">
              <target variable="#//@actions.7/@body/@locals.3"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </instructions>
          </thenBlocks>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="192">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.7/@outputPattern/@variables.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.7/@body/@locals.1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="192">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.7/@outputPattern/@variables.1"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.7/@body/@locals.2"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="192">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.7/@outputPattern/@variables.2"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.7/@body/@locals.3"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern ports="#//@outputs.0 #//@outputs.1 #//@outputs.2">
      <numTokensMap key="#//@outputs.0" value="1"/>
      <numTokensMap key="#//@outputs.1" value="1"/>
      <numTokensMap key="#//@outputs.2" value="1"/>
      <portToVarMap key="#//@outputs.0" value="#//@actions.7/@outputPattern/@variables.0"/>
      <portToVarMap key="#//@outputs.1" value="#//@actions.7/@outputPattern/@variables.1"/>
      <portToVarMap key="#//@outputs.2" value="#//@actions.7/@outputPattern/@variables.2"/>
      <variables assignable="true" defs="#//@actions.7/@body/@blocks.4/@instructions.0/@target"
          lineNumber="192" name="A">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
        </type>
      </variables>
      <variables assignable="true" defs="#//@actions.7/@body/@blocks.4/@instructions.1/@target"
          lineNumber="192" name="B">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
        </type>
      </variables>
      <variables assignable="true" defs="#//@actions.7/@body/@blocks.4/@instructions.2/@target"
          lineNumber="192" name="C">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.7/@outputPattern/@variables.0" value="#//@outputs.0"/>
      <varToPortMap key="#//@actions.7/@outputPattern/@variables.1" value="#//@outputs.1"/>
      <varToPortMap key="#//@actions.7/@outputPattern/@variables.2" value="#//@outputs.2"/>
    </outputPattern>
    <peekPattern/>
    <scheduler lineNumber="192" name="isSchedulable_predict_b1">
      <locals assignable="true" defs="#//@actions.7/@scheduler/@blocks.0/@instructions.1/@target"
          name="result" uses="#//@actions.7/@scheduler/@blocks.0/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.7/@scheduler/@blocks.0/@instructions.0/@target"
          name="local_comp" uses="#//@actions.7/@scheduler/@blocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.7/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.7/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.7/@scheduler/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.7/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>predict</identifiers>
      <identifiers>b1</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="218" name="predict_b2">
      <locals assignable="true" defs="#//@actions.8/@body/@blocks.0/@instructions.0/@target #//@actions.8/@body/@blocks.1/@thenBlocks.0/@instructions.1/@target #//@actions.8/@body/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.0/@target"
          lineNumber="222" name="a" uses="#//@actions.8/@body/@blocks.1/@thenBlocks.0/@instructions.2/@indexes.0/@use #//@actions.8/@body/@blocks.4/@instructions.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
      </locals>
      <locals assignable="true" defs="#//@actions.8/@body/@blocks.0/@instructions.1/@target #//@actions.8/@body/@blocks.1/@thenBlocks.2/@instructions.1/@target #//@actions.8/@body/@blocks.1/@thenBlocks.3/@thenBlocks.0/@instructions.0/@target"
          lineNumber="223" name="b" uses="#//@actions.8/@body/@blocks.1/@thenBlocks.2/@instructions.2/@indexes.0/@use #//@actions.8/@body/@blocks.4/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
      </locals>
      <locals assignable="true" defs="#//@actions.8/@body/@blocks.0/@instructions.2/@target"
          name="local_ptr" uses="#//@actions.8/@body/@blocks.0/@instructions.3/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.8/@body/@blocks.0/@instructions.3/@target #//@actions.8/@body/@blocks.3/@thenBlocks.0/@instructions.0/@target"
          lineNumber="224" name="c" uses="#//@actions.8/@body/@blocks.2/@instructions.0/@indexes.0/@use #//@actions.8/@body/@blocks.4/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
      </locals>
      <locals assignable="true" defs="#//@actions.8/@body/@blocks.0/@instructions.4/@target"
          name="local_left_edge" uses="#//@actions.8/@body/@blocks.1/@condition/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.8/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target #//@actions.8/@body/@blocks.1/@thenBlocks.2/@instructions.0/@target"
          name="local_ptr_left" uses="#//@actions.8/@body/@blocks.1/@thenBlocks.0/@instructions.1/@arguments.0/@value/@use #//@actions.8/@body/@blocks.1/@thenBlocks.2/@instructions.1/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.8/@body/@blocks.1/@thenBlocks.0/@instructions.2/@target"
          name="tmp_coded" uses="#//@actions.8/@body/@blocks.1/@thenBlocks.1/@condition/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.8/@body/@blocks.1/@thenBlocks.2/@instructions.2/@target"
          name="tmp_coded0" uses="#//@actions.8/@body/@blocks.1/@thenBlocks.3/@condition/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.8/@body/@blocks.2/@instructions.0/@target"
          name="tmp_coded1" uses="#//@actions.8/@body/@blocks.3/@condition/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="222">
          <target variable="#//@actions.8/@body/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="223">
          <target variable="#//@actions.8/@body/@locals.1"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.7"/>
          <target variable="#//@actions.8/@body/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="224" procedure="#//@procs.1">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.8/@body/@locals.2"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
          <target variable="#//@actions.8/@body/@locals.3"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.2"/>
          <target variable="#//@actions.8/@body/@locals.4"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="226">
        <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
          <expr xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.8/@body/@locals.4"/>
          </expr>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.8"/>
            <target variable="#//@actions.8/@body/@locals.5"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="228" procedure="#//@procs.1">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.8/@body/@locals.5"/>
              </value>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="3">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
              </value>
            </arguments>
            <target variable="#//@actions.8/@body/@locals.0"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="229">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.8/@body/@locals.0"/>
            </indexes>
            <source variable="#//@stateVars.6"/>
            <target variable="#//@actions.8/@body/@locals.6"/>
          </instructions>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="229">
          <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
            <expr xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.8/@body/@locals.6"/>
            </expr>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="230">
              <target variable="#//@actions.8/@body/@locals.0"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </instructions>
          </thenBlocks>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.8"/>
            <target variable="#//@actions.8/@body/@locals.5"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="233" procedure="#//@procs.1">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.8/@body/@locals.5"/>
              </value>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </arguments>
            <target variable="#//@actions.8/@body/@locals.1"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="234">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.8/@body/@locals.1"/>
            </indexes>
            <source variable="#//@stateVars.6"/>
            <target variable="#//@actions.8/@body/@locals.7"/>
          </instructions>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="234">
          <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
            <expr xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.8/@body/@locals.7"/>
            </expr>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="235">
              <target variable="#//@actions.8/@body/@locals.1"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </instructions>
          </thenBlocks>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="238">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.8/@body/@locals.3"/>
          </indexes>
          <source variable="#//@stateVars.6"/>
          <target variable="#//@actions.8/@body/@locals.8"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="238">
        <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
          <expr xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.8/@body/@locals.8"/>
          </expr>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="239">
            <target variable="#//@actions.8/@body/@locals.3"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="218">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.8/@outputPattern/@variables.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.8/@body/@locals.0"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="218">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.8/@outputPattern/@variables.1"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.8/@body/@locals.1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="218">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.8/@outputPattern/@variables.2"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.8/@body/@locals.3"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern ports="#//@outputs.0 #//@outputs.1 #//@outputs.2">
      <numTokensMap key="#//@outputs.0" value="1"/>
      <numTokensMap key="#//@outputs.1" value="1"/>
      <numTokensMap key="#//@outputs.2" value="1"/>
      <portToVarMap key="#//@outputs.0" value="#//@actions.8/@outputPattern/@variables.0"/>
      <portToVarMap key="#//@outputs.1" value="#//@actions.8/@outputPattern/@variables.1"/>
      <portToVarMap key="#//@outputs.2" value="#//@actions.8/@outputPattern/@variables.2"/>
      <variables assignable="true" defs="#//@actions.8/@body/@blocks.4/@instructions.0/@target"
          lineNumber="218" name="A">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
        </type>
      </variables>
      <variables assignable="true" defs="#//@actions.8/@body/@blocks.4/@instructions.1/@target"
          lineNumber="218" name="B">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
        </type>
      </variables>
      <variables assignable="true" defs="#//@actions.8/@body/@blocks.4/@instructions.2/@target"
          lineNumber="218" name="C">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.8/@outputPattern/@variables.0" value="#//@outputs.0"/>
      <varToPortMap key="#//@actions.8/@outputPattern/@variables.1" value="#//@outputs.1"/>
      <varToPortMap key="#//@actions.8/@outputPattern/@variables.2" value="#//@outputs.2"/>
    </outputPattern>
    <peekPattern/>
    <scheduler lineNumber="218" name="isSchedulable_predict_b2">
      <locals assignable="true" defs="#//@actions.8/@scheduler/@blocks.0/@instructions.1/@target"
          name="result" uses="#//@actions.8/@scheduler/@blocks.0/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.8/@scheduler/@blocks.0/@instructions.0/@target"
          name="local_comp" uses="#//@actions.8/@scheduler/@blocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.8/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.8/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.8/@scheduler/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.8/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>predict</identifiers>
      <identifiers>b2</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="244" name="predict_b3">
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.0/@instructions.0/@target #//@actions.9/@body/@blocks.0/@instructions.2/@target #//@actions.9/@body/@blocks.0/@instructions.4/@target"
          name="local_ptr" uses="#//@actions.9/@body/@blocks.0/@instructions.1/@arguments.0/@value/@use #//@actions.9/@body/@blocks.0/@instructions.3/@arguments.0/@value/@use #//@actions.9/@body/@blocks.0/@instructions.5/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.0/@instructions.1/@target #//@actions.9/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target"
          lineNumber="248" name="a" uses="#//@actions.9/@body/@blocks.0/@instructions.6/@indexes.0/@use #//@actions.9/@body/@blocks.6/@instructions.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.0/@instructions.3/@target #//@actions.9/@body/@blocks.3/@thenBlocks.0/@instructions.0/@target"
          lineNumber="249" name="b" uses="#//@actions.9/@body/@blocks.2/@instructions.0/@indexes.0/@use #//@actions.9/@body/@blocks.6/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.0/@instructions.5/@target #//@actions.9/@body/@blocks.5/@thenBlocks.0/@instructions.0/@target"
          lineNumber="250" name="c" uses="#//@actions.9/@body/@blocks.4/@instructions.0/@indexes.0/@use #//@actions.9/@body/@blocks.6/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.0/@instructions.6/@target"
          name="tmp_coded" uses="#//@actions.9/@body/@blocks.1/@condition/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.2/@instructions.0/@target"
          name="tmp_coded0" uses="#//@actions.9/@body/@blocks.3/@condition/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.4/@instructions.0/@target"
          name="tmp_coded1" uses="#//@actions.9/@body/@blocks.5/@condition/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.7"/>
          <target variable="#//@actions.9/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="248" procedure="#//@procs.1">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.9/@body/@locals.0"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="2">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </value>
          </arguments>
          <target variable="#//@actions.9/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.7"/>
          <target variable="#//@actions.9/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="249" procedure="#//@procs.1">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.9/@body/@locals.0"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
          <target variable="#//@actions.9/@body/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.7"/>
          <target variable="#//@actions.9/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="250" procedure="#//@procs.1">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.9/@body/@locals.0"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
          <target variable="#//@actions.9/@body/@locals.3"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="252">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.9/@body/@locals.1"/>
          </indexes>
          <source variable="#//@stateVars.6"/>
          <target variable="#//@actions.9/@body/@locals.4"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="252">
        <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
          <expr xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.9/@body/@locals.4"/>
          </expr>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="253">
            <target variable="#//@actions.9/@body/@locals.1"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="255">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.9/@body/@locals.2"/>
          </indexes>
          <source variable="#//@stateVars.6"/>
          <target variable="#//@actions.9/@body/@locals.5"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="255">
        <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
          <expr xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.9/@body/@locals.5"/>
          </expr>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="256">
            <target variable="#//@actions.9/@body/@locals.2"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="258">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.9/@body/@locals.3"/>
          </indexes>
          <source variable="#//@stateVars.6"/>
          <target variable="#//@actions.9/@body/@locals.6"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="258">
        <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
          <expr xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.9/@body/@locals.6"/>
          </expr>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="259">
            <target variable="#//@actions.9/@body/@locals.3"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="244">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.9/@outputPattern/@variables.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.9/@body/@locals.1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="244">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.9/@outputPattern/@variables.1"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.9/@body/@locals.2"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="244">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.9/@outputPattern/@variables.2"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.9/@body/@locals.3"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern ports="#//@outputs.0 #//@outputs.1 #//@outputs.2">
      <numTokensMap key="#//@outputs.0" value="1"/>
      <numTokensMap key="#//@outputs.1" value="1"/>
      <numTokensMap key="#//@outputs.2" value="1"/>
      <portToVarMap key="#//@outputs.0" value="#//@actions.9/@outputPattern/@variables.0"/>
      <portToVarMap key="#//@outputs.1" value="#//@actions.9/@outputPattern/@variables.1"/>
      <portToVarMap key="#//@outputs.2" value="#//@actions.9/@outputPattern/@variables.2"/>
      <variables assignable="true" defs="#//@actions.9/@body/@blocks.6/@instructions.0/@target"
          lineNumber="244" name="A">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
        </type>
      </variables>
      <variables assignable="true" defs="#//@actions.9/@body/@blocks.6/@instructions.1/@target"
          lineNumber="244" name="B">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
        </type>
      </variables>
      <variables assignable="true" defs="#//@actions.9/@body/@blocks.6/@instructions.2/@target"
          lineNumber="244" name="C">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.9/@outputPattern/@variables.0" value="#//@outputs.0"/>
      <varToPortMap key="#//@actions.9/@outputPattern/@variables.1" value="#//@outputs.1"/>
      <varToPortMap key="#//@actions.9/@outputPattern/@variables.2" value="#//@outputs.2"/>
    </outputPattern>
    <peekPattern/>
    <scheduler lineNumber="244" name="isSchedulable_predict_b3">
      <locals assignable="true" defs="#//@actions.9/@scheduler/@blocks.0/@instructions.1/@target"
          name="result" uses="#//@actions.9/@scheduler/@blocks.0/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@scheduler/@blocks.0/@instructions.0/@target"
          name="local_comp" uses="#//@actions.9/@scheduler/@blocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.9/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.9/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.9/@scheduler/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="3">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.9/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>predict</identifiers>
      <identifiers>b3</identifiers>
    </tag>
  </actions>
  <actions>
    <attributes name="IsPrecededBy" stringValue="predict_b0-predict_b1-predict_b2-predict_b3"/>
    <body lineNumber="264" name="predict_b45">
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.0/@instructions.0/@target #//@actions.10/@body/@blocks.1/@thenBlocks.0/@instructions.2/@target #//@actions.10/@body/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.0/@target"
          lineNumber="266" name="a" uses="#//@actions.10/@body/@blocks.1/@thenBlocks.0/@instructions.3/@indexes.0/@use #//@actions.10/@body/@blocks.4/@instructions.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.0/@instructions.1/@target #//@actions.10/@body/@blocks.1/@thenBlocks.3/@thenBlocks.0/@instructions.2/@target #//@actions.10/@body/@blocks.1/@thenBlocks.3/@thenBlocks.1/@thenBlocks.0/@instructions.0/@target"
          lineNumber="267" name="b" uses="#//@actions.10/@body/@blocks.1/@thenBlocks.3/@thenBlocks.0/@instructions.3/@indexes.0/@use #//@actions.10/@body/@blocks.4/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.0/@instructions.2/@target #//@actions.10/@body/@blocks.3/@thenBlocks.0/@instructions.2/@target #//@actions.10/@body/@blocks.3/@thenBlocks.1/@thenBlocks.0/@instructions.0/@target"
          lineNumber="268" name="c" uses="#//@actions.10/@body/@blocks.3/@thenBlocks.0/@instructions.3/@indexes.0/@use #//@actions.10/@body/@blocks.4/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.0/@instructions.3/@target"
          name="local_left_edge" uses="#//@actions.10/@body/@blocks.1/@condition/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target"
          name="local_ptr_left" uses="#//@actions.10/@body/@blocks.1/@thenBlocks.0/@instructions.2/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.1/@thenBlocks.0/@instructions.1/@target #//@actions.10/@body/@blocks.1/@thenBlocks.3/@thenBlocks.0/@instructions.1/@target #//@actions.10/@body/@blocks.3/@thenBlocks.0/@instructions.1/@target"
          name="local_comp" uses="#//@actions.10/@body/@blocks.1/@thenBlocks.0/@instructions.2/@arguments.1/@value/@use #//@actions.10/@body/@blocks.1/@thenBlocks.3/@thenBlocks.0/@instructions.2/@arguments.1/@value/@use #//@actions.10/@body/@blocks.3/@thenBlocks.0/@instructions.2/@arguments.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.1/@thenBlocks.0/@instructions.3/@target"
          name="tmp_coded" uses="#//@actions.10/@body/@blocks.1/@thenBlocks.1/@condition/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.1/@thenBlocks.2/@instructions.0/@target #//@actions.10/@body/@blocks.2/@instructions.0/@target"
          name="local_top_edge" uses="#//@actions.10/@body/@blocks.1/@thenBlocks.3/@condition/@expr/@use #//@actions.10/@body/@blocks.3/@condition/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.1/@thenBlocks.3/@thenBlocks.0/@instructions.0/@target"
          name="local_ptr_above_left" uses="#//@actions.10/@body/@blocks.1/@thenBlocks.3/@thenBlocks.0/@instructions.2/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.1/@thenBlocks.3/@thenBlocks.0/@instructions.3/@target"
          name="tmp_coded0" uses="#//@actions.10/@body/@blocks.1/@thenBlocks.3/@thenBlocks.1/@condition/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.3/@thenBlocks.0/@instructions.0/@target"
          name="local_ptr_above" uses="#//@actions.10/@body/@blocks.3/@thenBlocks.0/@instructions.2/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.3/@thenBlocks.0/@instructions.3/@target"
          name="tmp_coded1" uses="#//@actions.10/@body/@blocks.3/@thenBlocks.1/@condition/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="266">
          <target variable="#//@actions.10/@body/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="267">
          <target variable="#//@actions.10/@body/@locals.1"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="268">
          <target variable="#//@actions.10/@body/@locals.2"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.2"/>
          <target variable="#//@actions.10/@body/@locals.3"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="270">
        <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
          <expr xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.10/@body/@locals.3"/>
          </expr>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.8"/>
            <target variable="#//@actions.10/@body/@locals.4"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.3"/>
            <target variable="#//@actions.10/@body/@locals.5"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="273" procedure="#//@procs.1">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.10/@body/@locals.4"/>
              </value>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.10/@body/@locals.5"/>
              </value>
            </arguments>
            <target variable="#//@actions.10/@body/@locals.0"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="274">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.10/@body/@locals.0"/>
            </indexes>
            <source variable="#//@stateVars.6"/>
            <target variable="#//@actions.10/@body/@locals.6"/>
          </instructions>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="274">
          <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
            <expr xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.10/@body/@locals.6"/>
            </expr>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="275">
              <target variable="#//@actions.10/@body/@locals.0"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </instructions>
          </thenBlocks>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.1"/>
            <target variable="#//@actions.10/@body/@locals.7"/>
          </instructions>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="277">
          <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
            <expr xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.10/@body/@locals.7"/>
            </expr>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.10"/>
              <target variable="#//@actions.10/@body/@locals.8"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.3"/>
              <target variable="#//@actions.10/@body/@locals.5"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="280" procedure="#//@procs.1">
              <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
                <value xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.10/@body/@locals.8"/>
                </value>
              </arguments>
              <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
                <value xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.10/@body/@locals.5"/>
                </value>
              </arguments>
              <target variable="#//@actions.10/@body/@locals.1"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="281">
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.10/@body/@locals.1"/>
              </indexes>
              <source variable="#//@stateVars.6"/>
              <target variable="#//@actions.10/@body/@locals.9"/>
            </instructions>
          </thenBlocks>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="281">
            <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
              <expr xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.10/@body/@locals.9"/>
              </expr>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </condition>
            <joinBlock/>
            <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="282">
                <target variable="#//@actions.10/@body/@locals.1"/>
                <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </value>
              </instructions>
            </thenBlocks>
          </thenBlocks>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.1"/>
          <target variable="#//@actions.10/@body/@locals.7"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="288">
        <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
          <expr xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.10/@body/@locals.7"/>
          </expr>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.9"/>
            <target variable="#//@actions.10/@body/@locals.10"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.3"/>
            <target variable="#//@actions.10/@body/@locals.5"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="289" procedure="#//@procs.1">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.10/@body/@locals.10"/>
              </value>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.10/@body/@locals.5"/>
              </value>
            </arguments>
            <target variable="#//@actions.10/@body/@locals.2"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="290">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.10/@body/@locals.2"/>
            </indexes>
            <source variable="#//@stateVars.6"/>
            <target variable="#//@actions.10/@body/@locals.11"/>
          </instructions>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="290">
          <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
            <expr xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.10/@body/@locals.11"/>
            </expr>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="291">
              <target variable="#//@actions.10/@body/@locals.2"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </instructions>
          </thenBlocks>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="264">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.10/@outputPattern/@variables.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.10/@body/@locals.0"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="264">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.10/@outputPattern/@variables.1"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.10/@body/@locals.1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="264">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.10/@outputPattern/@variables.2"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.10/@body/@locals.2"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern ports="#//@outputs.0 #//@outputs.1 #//@outputs.2">
      <numTokensMap key="#//@outputs.0" value="1"/>
      <numTokensMap key="#//@outputs.1" value="1"/>
      <numTokensMap key="#//@outputs.2" value="1"/>
      <portToVarMap key="#//@outputs.0" value="#//@actions.10/@outputPattern/@variables.0"/>
      <portToVarMap key="#//@outputs.1" value="#//@actions.10/@outputPattern/@variables.1"/>
      <portToVarMap key="#//@outputs.2" value="#//@actions.10/@outputPattern/@variables.2"/>
      <variables assignable="true" defs="#//@actions.10/@body/@blocks.4/@instructions.0/@target"
          lineNumber="264" name="A">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
        </type>
      </variables>
      <variables assignable="true" defs="#//@actions.10/@body/@blocks.4/@instructions.1/@target"
          lineNumber="264" name="B">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
        </type>
      </variables>
      <variables assignable="true" defs="#//@actions.10/@body/@blocks.4/@instructions.2/@target"
          lineNumber="264" name="C">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.10/@outputPattern/@variables.0" value="#//@outputs.0"/>
      <varToPortMap key="#//@actions.10/@outputPattern/@variables.1" value="#//@outputs.1"/>
      <varToPortMap key="#//@actions.10/@outputPattern/@variables.2" value="#//@outputs.2"/>
    </outputPattern>
    <peekPattern/>
    <scheduler lineNumber="264" name="isSchedulable_predict_b45">
      <locals assignable="true" defs="#//@actions.10/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.10/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.10/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.10/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>predict</identifiers>
      <identifiers>b45</identifiers>
    </tag>
  </actions>
  <fsm initialState="#//@fsm/@vertices.4">
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.4" target="#//@fsm/@vertices.2"
        actions="#//@actions.0"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.4" target="#//@fsm/@vertices.3"
        actions="#//@actions.3"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.4" target="#//@fsm/@vertices.0"
        actions="#//@actions.4"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.2" target="#//@fsm/@vertices.1"
        actions="#//@actions.1"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.1" target="#//@fsm/@vertices.4"
        actions="#//@actions.2"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.3" target="#//@fsm/@vertices.0"
        actions="#//@actions.6"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.3" target="#//@fsm/@vertices.0"
        actions="#//@actions.7"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.3" target="#//@fsm/@vertices.0"
        actions="#//@actions.8"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.3" target="#//@fsm/@vertices.0"
        actions="#//@actions.9"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.3" target="#//@fsm/@vertices.0"
        actions="#//@actions.10"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.0" target="#//@fsm/@vertices.4"
        actions="#//@actions.5"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="advance" incoming="#//@fsm/@edges.2 #//@fsm/@edges.5 #//@fsm/@edges.6 #//@fsm/@edges.7 #//@fsm/@edges.8 #//@fsm/@edges.9"
        outgoing="#//@fsm/@edges.10"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="geth" incoming="#//@fsm/@edges.3"
        outgoing="#//@fsm/@edges.4"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="getw" incoming="#//@fsm/@edges.0"
        outgoing="#//@fsm/@edges.3"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="predict" incoming="#//@fsm/@edges.1"
        outgoing="#//@fsm/@edges.5 #//@fsm/@edges.6 #//@fsm/@edges.7 #//@fsm/@edges.8 #//@fsm/@edges.9"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="read" incoming="#//@fsm/@edges.4 #//@fsm/@edges.10"
        outgoing="#//@fsm/@edges.0 #//@fsm/@edges.1 #//@fsm/@edges.2"/>
  </fsm>
  <inputs label="BTYPE">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
  </inputs>
  <outputs label="A">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
  </outputs>
  <outputs label="B">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
  </outputs>
  <outputs label="C">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
  </outputs>
  <procs lineNumber="93" name="decrement">
    <locals assignable="true" defs="#//@procs.0/@blocks.0/@thenBlocks.0/@instructions.1/@target #//@procs.0/@blocks.0/@elseBlocks.0/@instructions.0/@target"
        name="tmp_if" uses="#//@procs.0/@blocks.1/@instructions.0/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.0/@blocks.0/@thenBlocks.0/@instructions.0/@target"
        name="local_BUF_SIZE" uses="#//@procs.0/@blocks.0/@thenBlocks.0/@instructions.1/@value/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="94">
      <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
        <e1 xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.0/@parameters.0/@variable"/>
        </e1>
        <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
        </e2>
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </condition>
      <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="97">
          <target variable="#//@procs.0/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.0/@parameters.0/@variable"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
          </value>
        </instructions>
      </elseBlocks>
      <joinBlock/>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.5"/>
          <target variable="#//@procs.0/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="95">
          <target variable="#//@procs.0/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.0/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt"/>
          </value>
        </instructions>
      </thenBlocks>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstReturn">
        <value xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.0/@locals.0"/>
        </value>
      </instructions>
    </blocks>
    <parameters>
      <variable assignable="true" lineNumber="93" name="p" uses="#//@procs.0/@blocks.0/@condition/@e1/@use #//@procs.0/@blocks.0/@elseBlocks.0/@instructions.0/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </variable>
    </parameters>
    <returnType xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
  </procs>
  <procs lineNumber="101" name="access">
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstReturn">
        <value xsi:type="net.sf.orcc.ir:ExprBinary" op="BITOR">
          <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.1/@parameters.0/@variable"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="3">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.1/@parameters.1/@variable"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
        </value>
      </instructions>
    </blocks>
    <parameters>
      <variable assignable="true" lineNumber="101" name="p" uses="#//@procs.1/@blocks.0/@instructions.0/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </variable>
    </parameters>
    <parameters>
      <variable assignable="true" lineNumber="101" name="c" uses="#//@procs.1/@blocks.0/@instructions.0/@value/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </variable>
    </parameters>
    <returnType xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
  </procs>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.1/@target #//@actions.5/@body/@blocks.1/@thenBlocks.0/@instructions.2/@target #//@actions.5/@body/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.0/@target"
      lineNumber="63" name="mbx" uses="#//@actions.5/@body/@blocks.1/@thenBlocks.0/@instructions.1/@source #//@actions.5/@body/@blocks.1/@thenBlocks.0/@instructions.4/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="0">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.2/@target #//@actions.5/@body/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.1/@target"
      lineNumber="66" name="top_edge" uses="#//@actions.6/@body/@blocks.1/@thenBlocks.2/@instructions.0/@source #//@actions.6/@body/@blocks.2/@instructions.0/@source #//@actions.7/@body/@blocks.2/@instructions.0/@source #//@actions.10/@body/@blocks.1/@thenBlocks.2/@instructions.0/@source #//@actions.10/@body/@blocks.2/@instructions.0/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
    <type xsi:type="net.sf.orcc.ir:TypeBool"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.3/@target #//@actions.5/@body/@blocks.1/@thenBlocks.0/@instructions.3/@target #//@actions.5/@body/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.2/@target"
      lineNumber="69" name="left_edge" uses="#//@actions.6/@body/@blocks.0/@instructions.3/@source #//@actions.8/@body/@blocks.0/@instructions.4/@source #//@actions.10/@body/@blocks.0/@instructions.3/@source">
    <type xsi:type="net.sf.orcc.ir:TypeBool"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.4/@target #//@actions.5/@body/@blocks.0/@instructions.1/@target #//@actions.5/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target"
      lineNumber="71" name="comp" uses="#//@actions.3/@body/@blocks.0/@instructions.2/@source #//@actions.4/@body/@blocks.0/@instructions.2/@source #//@actions.5/@body/@blocks.0/@instructions.0/@source #//@actions.5/@body/@blocks.0/@instructions.2/@source #//@actions.6/@scheduler/@blocks.0/@instructions.0/@source #//@actions.7/@scheduler/@blocks.0/@instructions.0/@source #//@actions.8/@scheduler/@blocks.0/@instructions.0/@source #//@actions.9/@scheduler/@blocks.0/@instructions.0/@source #//@actions.10/@body/@blocks.1/@thenBlocks.0/@instructions.1/@source #//@actions.10/@body/@blocks.1/@thenBlocks.3/@thenBlocks.0/@instructions.1/@source #//@actions.10/@body/@blocks.3/@thenBlocks.0/@instructions.1/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="0">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.1/@body/@blocks.0/@instructions.1/@target"
      lineNumber="73" name="mbwidth" uses="#//@actions.5/@body/@blocks.1/@thenBlocks.0/@instructions.5/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="0">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
  </stateVars>
  <stateVars lineNumber="80" name="BUF_SIZE" uses="#//@procs.0/@blocks.0/@thenBlocks.0/@instructions.0/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="14">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.3/@body/@blocks.0/@instructions.4/@target #//@actions.4/@body/@blocks.0/@instructions.4/@target"
      lineNumber="82" name="coded" uses="#//@actions.6/@body/@blocks.1/@thenBlocks.0/@instructions.2/@source #//@actions.6/@body/@blocks.1/@thenBlocks.3/@thenBlocks.0/@instructions.2/@source #//@actions.6/@body/@blocks.3/@thenBlocks.0/@instructions.2/@source #//@actions.7/@body/@blocks.0/@instructions.4/@source #//@actions.7/@body/@blocks.3/@thenBlocks.0/@instructions.2/@source #//@actions.7/@body/@blocks.3/@thenBlocks.2/@instructions.2/@source #//@actions.8/@body/@blocks.1/@thenBlocks.0/@instructions.2/@source #//@actions.8/@body/@blocks.1/@thenBlocks.2/@instructions.2/@source #//@actions.8/@body/@blocks.2/@instructions.0/@source #//@actions.9/@body/@blocks.0/@instructions.6/@source #//@actions.9/@body/@blocks.2/@instructions.0/@source #//@actions.9/@body/@blocks.4/@instructions.0/@source #//@actions.10/@body/@blocks.1/@thenBlocks.0/@instructions.3/@source #//@actions.10/@body/@blocks.1/@thenBlocks.3/@thenBlocks.0/@instructions.3/@source #//@actions.10/@body/@blocks.3/@thenBlocks.0/@instructions.3/@source">
    <type xsi:type="net.sf.orcc.ir:TypeList">
      <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="112">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="7"/>
      </sizeExpr>
      <type xsi:type="net.sf.orcc.ir:TypeBool"/>
    </type>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.1/@body/@blocks.0/@instructions.2/@target #//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.2/@target"
      lineNumber="84" name="ptr" uses="#//@actions.3/@body/@blocks.0/@instructions.1/@source #//@actions.4/@body/@blocks.0/@instructions.1/@source #//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.0/@source #//@actions.7/@body/@blocks.0/@instructions.0/@source #//@actions.8/@body/@blocks.0/@instructions.2/@source #//@actions.9/@body/@blocks.0/@instructions.0/@source #//@actions.9/@body/@blocks.0/@instructions.2/@source #//@actions.9/@body/@blocks.0/@instructions.4/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.1/@body/@blocks.0/@instructions.3/@target #//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.5/@target"
      lineNumber="86" name="ptr_left" uses="#//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.3/@source #//@actions.6/@body/@blocks.1/@thenBlocks.0/@instructions.0/@source #//@actions.8/@body/@blocks.1/@thenBlocks.0/@instructions.0/@source #//@actions.8/@body/@blocks.1/@thenBlocks.2/@instructions.0/@source #//@actions.10/@body/@blocks.1/@thenBlocks.0/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.1/@body/@blocks.0/@instructions.4/@target #//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.8/@target"
      lineNumber="88" name="ptr_above" uses="#//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.6/@source #//@actions.6/@body/@blocks.3/@thenBlocks.0/@instructions.0/@source #//@actions.7/@body/@blocks.3/@thenBlocks.0/@instructions.0/@source #//@actions.7/@body/@blocks.3/@thenBlocks.2/@instructions.0/@source #//@actions.10/@body/@blocks.3/@thenBlocks.0/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.1/@body/@blocks.0/@instructions.5/@target #//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.11/@target"
      lineNumber="90" name="ptr_above_left" uses="#//@actions.5/@body/@blocks.1/@thenBlocks.2/@instructions.9/@source #//@actions.6/@body/@blocks.1/@thenBlocks.3/@thenBlocks.0/@instructions.0/@source #//@actions.10/@body/@blocks.1/@thenBlocks.3/@thenBlocks.0/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
  </stateVars>
</net.sf.orcc.df:Actor>
