<?xml version="1.0" encoding="UTF-8"?>
<net.sf.orcc.df:Actor xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:net.sf.orcc.df="http://orcc.sf.net/model/2011/Df" xmlns:net.sf.orcc.ir="http://orcc.sf.net/model/2011/Ir"
    label="mpeg4sp.Unpack" fileName="/StreamBench/src/mpeg4sp/Unpack.cal"
    lineNumber="49">
  <actions>
    <body lineNumber="60" name="cmd_newVop">
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.0/@target"
          lineNumber="60" name="cmd">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="60">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.0/@inputPattern/@variables.0"/>
          <target variable="#//@actions.0/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="64">
          <target variable="#//@stateVars.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="65">
          <target variable="#//@stateVars.2"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.1">
      <numTokensMap key="#//@inputs.1" value="1"/>
      <portToVarMap key="#//@inputs.1" value="#//@actions.0/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="60" name="BTYPE" uses="#//@actions.0/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.0/@inputPattern/@variables.0" value="#//@inputs.1"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern ports="#//@inputs.1">
      <numTokensMap key="#//@inputs.1" value="1"/>
      <portToVarMap key="#//@inputs.1" value="#//@actions.0/@peekPattern/@variables.0"/>
      <variables assignable="true" lineNumber="60" name="BTYPE" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.0/@peekPattern/@variables.0" value="#//@inputs.1"/>
    </peekPattern>
    <scheduler lineNumber="60" name="isSchedulable_cmd_newVop">
      <locals assignable="true" defs="#//@actions.0/@scheduler/@blocks.0/@instructions.2/@target"
          name="result" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.3/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@scheduler/@blocks.0/@instructions.0/@target"
          lineNumber="60" name="cmd" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.2/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@scheduler/@blocks.0/@instructions.1/@target"
          name="local_NEWVOP" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.2/@value/@e1/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="60">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.0/@peekPattern/@variables.0"/>
          <target variable="#//@actions.0/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.23"/>
          <target variable="#//@actions.0/@scheduler/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.0/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@scheduler/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@scheduler/@locals.2"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>cmd</identifiers>
      <identifiers>newVop</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="72" name="getw">
      <locals assignable="true" defs="#//@actions.1/@body/@blocks.0/@instructions.0/@target"
          lineNumber="72" name="w" uses="#//@actions.1/@body/@blocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="72">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.1/@inputPattern/@variables.0"/>
          <target variable="#//@actions.1/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="74">
          <target variable="#//@stateVars.1"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.1/@body/@locals.0"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.1">
      <numTokensMap key="#//@inputs.1" value="1"/>
      <portToVarMap key="#//@inputs.1" value="#//@actions.1/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="72" name="BTYPE" uses="#//@actions.1/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.1/@inputPattern/@variables.0" value="#//@inputs.1"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="72" name="isSchedulable_getw">
      <locals assignable="true" defs="#//@actions.1/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.1/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.1/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.1/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>getw</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="77" name="geth">
      <locals assignable="true" defs="#//@actions.2/@body/@blocks.0/@instructions.0/@target"
          lineNumber="77" name="h">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="77">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.2/@inputPattern/@variables.0"/>
          <target variable="#//@actions.2/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.1">
      <numTokensMap key="#//@inputs.1" value="1"/>
      <portToVarMap key="#//@inputs.1" value="#//@actions.2/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="77" name="BTYPE" uses="#//@actions.2/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.2/@inputPattern/@variables.0" value="#//@inputs.1"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="77" name="isSchedulable_geth">
      <locals assignable="true" defs="#//@actions.2/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.2/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.2/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.2/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>geth</identifiers>
    </tag>
  </actions>
  <actions>
    <attributes name="IsPrecededBy" stringValue="cmd_newVop"/>
    <body lineNumber="86" name="cmd_motion">
      <locals assignable="true" defs="#//@actions.3/@body/@blocks.0/@instructions.0/@target"
          lineNumber="86" name="cmd">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="86">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.3/@inputPattern/@variables.0"/>
          <target variable="#//@actions.3/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.1">
      <numTokensMap key="#//@inputs.1" value="1"/>
      <portToVarMap key="#//@inputs.1" value="#//@actions.3/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="86" name="BTYPE" uses="#//@actions.3/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.3/@inputPattern/@variables.0" value="#//@inputs.1"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern ports="#//@inputs.1">
      <numTokensMap key="#//@inputs.1" value="1"/>
      <portToVarMap key="#//@inputs.1" value="#//@actions.3/@peekPattern/@variables.0"/>
      <variables assignable="true" lineNumber="86" name="BTYPE" uses="#//@actions.3/@scheduler/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.3/@peekPattern/@variables.0" value="#//@inputs.1"/>
    </peekPattern>
    <scheduler lineNumber="86" name="isSchedulable_cmd_motion">
      <locals assignable="true" defs="#//@actions.3/@scheduler/@blocks.0/@instructions.5/@target"
          name="result" uses="#//@actions.3/@scheduler/@blocks.0/@instructions.6/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.3/@scheduler/@blocks.0/@instructions.0/@target"
          lineNumber="86" name="cmd" uses="#//@actions.3/@scheduler/@blocks.0/@instructions.5/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <locals assignable="true" defs="#//@actions.3/@scheduler/@blocks.0/@instructions.1/@target #//@actions.3/@scheduler/@blocks.0/@instructions.3/@target"
          name="local_INTER" uses="#//@actions.3/@scheduler/@blocks.0/@instructions.5/@value/@e1/@e2/@e1/@use #//@actions.3/@scheduler/@blocks.0/@instructions.5/@value/@e2/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.3/@scheduler/@blocks.0/@instructions.2/@target #//@actions.3/@scheduler/@blocks.0/@instructions.4/@target"
          name="local_MOTION" uses="#//@actions.3/@scheduler/@blocks.0/@instructions.5/@value/@e1/@e2/@e2/@use #//@actions.3/@scheduler/@blocks.0/@instructions.5/@value/@e2/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="86">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.3/@peekPattern/@variables.0"/>
          <target variable="#//@actions.3/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.25"/>
          <target variable="#//@actions.3/@scheduler/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.26"/>
          <target variable="#//@actions.3/@scheduler/@locals.3"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.25"/>
          <target variable="#//@actions.3/@scheduler/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.26"/>
          <target variable="#//@actions.3/@scheduler/@locals.3"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.3/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.3/@scheduler/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="BITOR">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.3/@scheduler/@locals.2"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.3/@scheduler/@locals.3"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="BITOR">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.3/@scheduler/@locals.2"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.3/@scheduler/@locals.3"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.3/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>cmd</identifiers>
      <identifiers>motion</identifiers>
    </tag>
  </actions>
  <actions>
    <attributes name="IsPrecededBy" stringValue="cmd_motion"/>
    <body lineNumber="91" name="cmd_noMotion">
      <locals assignable="true" defs="#//@actions.4/@body/@blocks.0/@instructions.0/@target"
          lineNumber="91" name="cmd">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <locals assignable="true" defs="#//@actions.4/@body/@blocks.0/@instructions.3/@target #//@actions.4/@body/@blocks.1/@thenBlocks.0/@instructions.1/@target"
          name="local_comp" uses="#//@actions.4/@body/@blocks.1/@condition/@e1/@use #//@actions.4/@body/@blocks.1/@thenBlocks.1/@condition/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <locals assignable="true" defs="#//@actions.4/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target #//@actions.4/@body/@blocks.1/@elseBlocks.0/@instructions.0/@target"
          name="local_mbx" uses="#//@actions.4/@body/@blocks.1/@thenBlocks.2/@instructions.0/@value/@e1/@e1/@use #//@actions.4/@body/@blocks.1/@elseBlocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.4/@body/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.0/@target #//@actions.4/@body/@blocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.0/@target"
          name="tmp_if" uses="#//@actions.4/@body/@blocks.1/@thenBlocks.2/@instructions.0/@value/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="91">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.4/@inputPattern/@variables.0"/>
          <target variable="#//@actions.4/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="95">
          <target variable="#//@stateVars.3"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="96">
          <target variable="#//@stateVars.4"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@actions.4/@body/@locals.1"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="97">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.4/@body/@locals.1"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="4">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.2"/>
            <target variable="#//@actions.4/@body/@locals.2"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="104">
            <target variable="#//@stateVars.5"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.4/@body/@locals.2"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="3">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
            </value>
          </instructions>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.2"/>
            <target variable="#//@actions.4/@body/@locals.2"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.0"/>
            <target variable="#//@actions.4/@body/@locals.1"/>
          </instructions>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="98">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.4/@body/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="2"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="101">
              <target variable="#//@actions.4/@body/@locals.3"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </instructions>
          </elseBlocks>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="99">
              <target variable="#//@actions.4/@body/@locals.3"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="8">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
              </value>
            </instructions>
          </thenBlocks>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="98">
            <target variable="#//@stateVars.5"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.4/@body/@locals.2"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="4">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="15"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.4/@body/@locals.3"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="16"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.1">
      <numTokensMap key="#//@inputs.1" value="1"/>
      <portToVarMap key="#//@inputs.1" value="#//@actions.4/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="91" name="BTYPE" uses="#//@actions.4/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.4/@inputPattern/@variables.0" value="#//@inputs.1"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern ports="#//@inputs.1">
      <numTokensMap key="#//@inputs.1" value="1"/>
      <portToVarMap key="#//@inputs.1" value="#//@actions.4/@peekPattern/@variables.0"/>
      <variables assignable="true" lineNumber="91" name="BTYPE" uses="#//@actions.4/@scheduler/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.4/@peekPattern/@variables.0" value="#//@inputs.1"/>
    </peekPattern>
    <scheduler lineNumber="91" name="isSchedulable_cmd_noMotion">
      <locals assignable="true" defs="#//@actions.4/@scheduler/@blocks.0/@instructions.3/@target"
          name="result" uses="#//@actions.4/@scheduler/@blocks.0/@instructions.4/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.4/@scheduler/@blocks.0/@instructions.0/@target"
          lineNumber="91" name="cmd" uses="#//@actions.4/@scheduler/@blocks.0/@instructions.3/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <locals assignable="true" defs="#//@actions.4/@scheduler/@blocks.0/@instructions.1/@target #//@actions.4/@scheduler/@blocks.0/@instructions.2/@target"
          name="local_INTER" uses="#//@actions.4/@scheduler/@blocks.0/@instructions.3/@value/@e1/@e2/@use #//@actions.4/@scheduler/@blocks.0/@instructions.3/@value/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="91">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.4/@peekPattern/@variables.0"/>
          <target variable="#//@actions.4/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.25"/>
          <target variable="#//@actions.4/@scheduler/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.25"/>
          <target variable="#//@actions.4/@scheduler/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.4/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.4/@scheduler/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.4/@scheduler/@locals.2"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.4/@scheduler/@locals.2"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.4/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>cmd</identifiers>
      <identifiers>noMotion</identifiers>
    </tag>
  </actions>
  <actions>
    <attributes name="IsPrecededBy" stringValue="cmd_noMotion"/>
    <body lineNumber="108" name="cmd_other">
      <locals assignable="true" defs="#//@actions.5/@body/@blocks.0/@instructions.0/@target"
          lineNumber="108" name="cmd">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="108">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.5/@inputPattern/@variables.0"/>
          <target variable="#//@actions.5/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="111">
          <target variable="#//@stateVars.4"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="9">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.1">
      <numTokensMap key="#//@inputs.1" value="1"/>
      <portToVarMap key="#//@inputs.1" value="#//@actions.5/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="108" name="BTYPE" uses="#//@actions.5/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.5/@inputPattern/@variables.0" value="#//@inputs.1"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="108" name="isSchedulable_cmd_other">
      <locals assignable="true" defs="#//@actions.5/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.5/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.5/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.5/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>cmd</identifiers>
      <identifiers>other</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="117" name="getmvx">
      <locals assignable="true" defs="#//@actions.6/@body/@blocks.0/@instructions.0/@target"
          lineNumber="117" name="v" uses="#//@actions.6/@body/@blocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
      </locals>
      <locals defs="#//@actions.6/@body/@blocks.0/@instructions.1/@target" lineNumber="119"
          name="vv" uses="#//@actions.6/@body/@blocks.1/@thenBlocks.2/@instructions.0/@value/@e1/@e1/@use #//@actions.6/@body/@blocks.1/@elseBlocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
      </locals>
      <locals assignable="true" defs="#//@actions.6/@body/@blocks.0/@instructions.4/@target #//@actions.6/@body/@blocks.1/@thenBlocks.0/@instructions.1/@target"
          name="local_comp" uses="#//@actions.6/@body/@blocks.1/@condition/@e1/@use #//@actions.6/@body/@blocks.1/@thenBlocks.1/@condition/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <locals assignable="true" defs="#//@actions.6/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target #//@actions.6/@body/@blocks.1/@elseBlocks.0/@instructions.0/@target"
          name="local_mbx" uses="#//@actions.6/@body/@blocks.1/@thenBlocks.2/@instructions.0/@value/@e1/@e2/@e1/@use #//@actions.6/@body/@blocks.1/@elseBlocks.0/@instructions.1/@value/@e2/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.6/@body/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.0/@target #//@actions.6/@body/@blocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.0/@target"
          name="tmp_if" uses="#//@actions.6/@body/@blocks.1/@thenBlocks.2/@instructions.0/@value/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="117">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.6/@inputPattern/@variables.0"/>
          <target variable="#//@actions.6/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="119">
          <target variable="#//@actions.6/@body/@locals.1"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.6/@body/@locals.0"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="121">
          <target variable="#//@stateVars.3"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="122">
          <target variable="#//@stateVars.4"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@actions.6/@body/@locals.2"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="123">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.6/@body/@locals.2"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="4">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.2"/>
            <target variable="#//@actions.6/@body/@locals.3"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="130">
            <target variable="#//@stateVars.5"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.6/@body/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.6/@body/@locals.3"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="3">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
            </value>
          </instructions>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.2"/>
            <target variable="#//@actions.6/@body/@locals.3"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.0"/>
            <target variable="#//@actions.6/@body/@locals.2"/>
          </instructions>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="124">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.6/@body/@locals.2"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="2"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="127">
              <target variable="#//@actions.6/@body/@locals.4"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </instructions>
          </elseBlocks>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="125">
              <target variable="#//@actions.6/@body/@locals.4"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="8">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
              </value>
            </instructions>
          </thenBlocks>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="124">
            <target variable="#//@stateVars.5"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.6/@body/@locals.1"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.6/@body/@locals.3"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="4">
                    <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="15"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="16"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.6/@body/@locals.4"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="17"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.0">
      <numTokensMap key="#//@inputs.0" value="1"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.6/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="117" name="MV" uses="#//@actions.6/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.6/@inputPattern/@variables.0" value="#//@inputs.0"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="117" name="isSchedulable_getmvx">
      <locals assignable="true" defs="#//@actions.6/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.6/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.6/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.6/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>getmvx</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="134" name="getmvy">
      <locals assignable="true" defs="#//@actions.7/@body/@blocks.0/@instructions.0/@target"
          lineNumber="134" name="v">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="134">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.7/@inputPattern/@variables.0"/>
          <target variable="#//@actions.7/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.0">
      <numTokensMap key="#//@inputs.0" value="1"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.7/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="134" name="MV" uses="#//@actions.7/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.7/@inputPattern/@variables.0" value="#//@inputs.0"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="134" name="isSchedulable_getmvy">
      <locals assignable="true" defs="#//@actions.7/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.7/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.7/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.7/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>getmvy</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="139" name="done">
      <locals assignable="true" defs="#//@actions.8/@body/@blocks.0/@instructions.0/@target #//@actions.8/@body/@blocks.1/@elseBlocks.0/@instructions.0/@target"
          name="local_comp" uses="#//@actions.8/@body/@blocks.1/@condition/@e1/@use #//@actions.8/@body/@blocks.1/@elseBlocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <locals assignable="true" defs="#//@actions.8/@body/@blocks.1/@thenBlocks.0/@instructions.1/@target #//@actions.8/@body/@blocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.0/@target"
          name="local_mbx" uses="#//@actions.8/@body/@blocks.1/@thenBlocks.1/@condition/@e1/@use #//@actions.8/@body/@blocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.8/@body/@blocks.1/@thenBlocks.0/@instructions.2/@target"
          name="local_mbw_max" uses="#//@actions.8/@body/@blocks.1/@thenBlocks.1/@condition/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@actions.8/@body/@locals.0"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="143">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.8/@body/@locals.0"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="5">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.0"/>
            <target variable="#//@actions.8/@body/@locals.0"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="151">
            <target variable="#//@stateVars.0"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.8/@body/@locals.0"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="5"/>
            </value>
          </instructions>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="144">
            <target variable="#//@stateVars.0"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.2"/>
            <target variable="#//@actions.8/@body/@locals.1"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.1"/>
            <target variable="#//@actions.8/@body/@locals.2"/>
          </instructions>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="145">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.8/@body/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.8/@body/@locals.2"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.2"/>
              <target variable="#//@actions.8/@body/@locals.1"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="148">
              <target variable="#//@stateVars.2"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.8/@body/@locals.1"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
              </value>
            </instructions>
          </elseBlocks>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="146">
              <target variable="#//@stateVars.2"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </instructions>
          </thenBlocks>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="139" name="isSchedulable_done">
      <locals assignable="true" defs="#//@actions.8/@scheduler/@blocks.0/@instructions.1/@target"
          name="result" uses="#//@actions.8/@scheduler/@blocks.0/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.8/@scheduler/@blocks.0/@instructions.0/@target"
          name="local_row" uses="#//@actions.8/@scheduler/@blocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="5"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.4"/>
          <target variable="#//@actions.8/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.8/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.8/@scheduler/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="9">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.8/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>done</identifiers>
    </tag>
  </actions>
  <actions>
    <attributes name="IsPrecededBy" stringValue="done"/>
    <body lineNumber="155" name="extract_noRead">
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.0/@instructions.0/@target"
          name="local_xstart" uses="#//@actions.9/@body/@blocks.0/@instructions.2/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.0/@instructions.1/@target #//@actions.9/@body/@blocks.2/@instructions.0/@target #//@actions.9/@body/@blocks.3/@elseBlocks.0/@instructions.0/@target"
          name="local_count" uses="#//@actions.9/@body/@blocks.0/@instructions.2/@value/@e2/@use #//@actions.9/@body/@blocks.3/@condition/@e1/@use #//@actions.9/@body/@blocks.3/@elseBlocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="5"/>
      </locals>
      <locals defs="#//@actions.9/@body/@blocks.0/@instructions.2/@target" lineNumber="161"
          name="x" uses="#//@actions.9/@body/@blocks.0/@instructions.3/@value/@e1/@use #//@actions.9/@body/@blocks.0/@instructions.6/@value/@e2/@e1/@e1/@use #//@actions.9/@body/@blocks.0/@instructions.9/@value/@e2/@e1/@e1/@use #//@actions.9/@body/@blocks.1/@elseBlocks.0/@elseBlocks.0/@instructions.0/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <locals defs="#//@actions.9/@body/@blocks.0/@instructions.3/@target" lineNumber="162"
          name="left_clip" uses="#//@actions.9/@body/@blocks.1/@condition/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.0/@instructions.4/@target #//@actions.9/@body/@blocks.0/@instructions.7/@target"
          name="local_comp" uses="#//@actions.9/@body/@blocks.0/@instructions.6/@value/@e1/@e1/@e1/@use #//@actions.9/@body/@blocks.0/@instructions.9/@value/@e1/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.0/@instructions.5/@target #//@actions.9/@body/@blocks.0/@instructions.8/@target"
          name="local_mbw_max" uses="#//@actions.9/@body/@blocks.0/@instructions.6/@value/@e2/@e2/@use #//@actions.9/@body/@blocks.0/@instructions.9/@value/@e2/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals defs="#//@actions.9/@body/@blocks.0/@instructions.6/@target" lineNumber="163"
          name="right_clip_luma" uses="#//@actions.9/@body/@blocks.1/@elseBlocks.0/@condition/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals defs="#//@actions.9/@body/@blocks.0/@instructions.9/@target" lineNumber="164"
          name="right_clip_chroma" uses="#//@actions.9/@body/@blocks.1/@elseBlocks.0/@condition/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals defs="#//@actions.9/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target #//@actions.9/@body/@blocks.1/@elseBlocks.0/@thenBlocks.0/@instructions.0/@target #//@actions.9/@body/@blocks.1/@elseBlocks.0/@elseBlocks.0/@instructions.0/@target"
          lineNumber="165" name="shift" uses="#//@actions.9/@body/@blocks.4/@instructions.1/@arguments.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="3"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.3/@thenBlocks.0/@instructions.1/@target"
          name="local_row" uses="#//@actions.9/@body/@blocks.3/@thenBlocks.0/@instructions.2/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="5"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.4/@instructions.0/@target"
          name="local_data" uses="#//@actions.9/@body/@blocks.4/@instructions.1/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.4/@instructions.1/@target"
          name="tmp_extractByte" uses="#//@actions.9/@body/@blocks.4/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.5"/>
          <target variable="#//@actions.9/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.9/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="161">
          <target variable="#//@actions.9/@body/@locals.2"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.9/@body/@locals.0"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.9/@body/@locals.1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="162">
          <target variable="#//@actions.9/@body/@locals.3"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.9/@body/@locals.2"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@actions.9/@body/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.1"/>
          <target variable="#//@actions.9/@body/@locals.5"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="163">
          <target variable="#//@actions.9/@body/@locals.6"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="LOGIC_AND">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.9/@body/@locals.4"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="4">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="GT">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.9/@body/@locals.2"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="4">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.9/@body/@locals.5"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@actions.9/@body/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.1"/>
          <target variable="#//@actions.9/@body/@locals.5"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="164">
          <target variable="#//@actions.9/@body/@locals.7"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="LOGIC_AND">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.9/@body/@locals.4"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="4">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="GT">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.9/@body/@locals.2"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="3">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.9/@body/@locals.5"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="165">
        <condition xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@actions.9/@body/@locals.3"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="168">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LOGIC_OR">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.9/@body/@locals.6"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.9/@body/@locals.7"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="171">
              <target variable="#//@actions.9/@body/@locals.8"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.9/@body/@locals.2"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="3">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="3"/>
              </value>
            </instructions>
          </elseBlocks>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="169">
              <target variable="#//@actions.9/@body/@locals.8"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="3">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
              </value>
            </instructions>
          </thenBlocks>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="166">
            <target variable="#//@actions.9/@body/@locals.8"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.9/@body/@locals.1"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="176">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.9/@body/@locals.1"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="8">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.3"/>
            <target variable="#//@actions.9/@body/@locals.1"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="180">
            <target variable="#//@stateVars.3"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.9/@body/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
            </value>
          </instructions>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="177">
            <target variable="#//@stateVars.3"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.4"/>
            <target variable="#//@actions.9/@body/@locals.9"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="178">
            <target variable="#//@stateVars.4"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.9/@body/@locals.9"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.6"/>
          <target variable="#//@actions.9/@body/@locals.10"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="155" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.9/@body/@locals.10"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.9/@body/@locals.8"/>
            </value>
          </arguments>
          <target variable="#//@actions.9/@body/@locals.11"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="155">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.9/@outputPattern/@variables.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.9/@body/@locals.11"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern ports="#//@outputs.0">
      <numTokensMap key="#//@outputs.0" value="1"/>
      <portToVarMap key="#//@outputs.0" value="#//@actions.9/@outputPattern/@variables.0"/>
      <variables assignable="true" defs="#//@actions.9/@body/@blocks.4/@instructions.2/@target"
          lineNumber="155" name="DO">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.9/@outputPattern/@variables.0" value="#//@outputs.0"/>
    </outputPattern>
    <peekPattern/>
    <scheduler lineNumber="155" name="isSchedulable_extract_noRead">
      <locals assignable="true" defs="#//@actions.9/@scheduler/@blocks.0/@instructions.3/@target"
          name="result" uses="#//@actions.9/@scheduler/@blocks.0/@instructions.4/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@scheduler/@blocks.0/@instructions.0/@target"
          name="local_xstart" uses="#//@actions.9/@scheduler/@blocks.0/@instructions.3/@value/@e1/@e1/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@scheduler/@blocks.0/@instructions.1/@target #//@actions.9/@scheduler/@blocks.0/@instructions.2/@target"
          name="local_count" uses="#//@actions.9/@scheduler/@blocks.0/@instructions.3/@value/@e1/@e1/@e1/@e2/@use #//@actions.9/@scheduler/@blocks.0/@instructions.3/@value/@e2/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="5"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.5"/>
          <target variable="#//@actions.9/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.9/@scheduler/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.9/@scheduler/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.9/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="LOGIC_AND">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
                <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.9/@scheduler/@locals.1"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.9/@scheduler/@locals.2"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="3">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="3"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.9/@scheduler/@locals.2"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.9/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>extract</identifiers>
      <identifiers>noRead</identifiers>
    </tag>
  </actions>
  <actions>
    <attributes name="IsPrecededBy" stringValue="extract_noRead"/>
    <body lineNumber="184" name="extract_read">
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.0/@instructions.0/@target"
          lineNumber="184" name="d" uses="#//@actions.10/@body/@blocks.2/@instructions.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.0/@instructions.1/@target"
          name="local_xstart" uses="#//@actions.10/@body/@blocks.0/@instructions.3/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.0/@instructions.2/@target #//@actions.10/@body/@blocks.2/@instructions.1/@target #//@actions.10/@body/@blocks.3/@elseBlocks.0/@instructions.0/@target"
          name="local_count" uses="#//@actions.10/@body/@blocks.0/@instructions.3/@value/@e2/@use #//@actions.10/@body/@blocks.3/@condition/@e1/@use #//@actions.10/@body/@blocks.3/@elseBlocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="5"/>
      </locals>
      <locals defs="#//@actions.10/@body/@blocks.0/@instructions.3/@target" lineNumber="186"
          name="x" uses="#//@actions.10/@body/@blocks.0/@instructions.4/@value/@e1/@use #//@actions.10/@body/@blocks.0/@instructions.7/@value/@e2/@e1/@e1/@use #//@actions.10/@body/@blocks.0/@instructions.10/@value/@e2/@e1/@e1/@use #//@actions.10/@body/@blocks.1/@elseBlocks.0/@elseBlocks.0/@instructions.0/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <locals defs="#//@actions.10/@body/@blocks.0/@instructions.4/@target" lineNumber="187"
          name="left_clip" uses="#//@actions.10/@body/@blocks.1/@condition/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.0/@instructions.5/@target #//@actions.10/@body/@blocks.0/@instructions.8/@target"
          name="local_comp" uses="#//@actions.10/@body/@blocks.0/@instructions.7/@value/@e1/@e1/@e1/@use #//@actions.10/@body/@blocks.0/@instructions.10/@value/@e1/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.0/@instructions.6/@target #//@actions.10/@body/@blocks.0/@instructions.9/@target"
          name="local_mbw_max" uses="#//@actions.10/@body/@blocks.0/@instructions.7/@value/@e2/@e2/@use #//@actions.10/@body/@blocks.0/@instructions.10/@value/@e2/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals defs="#//@actions.10/@body/@blocks.0/@instructions.7/@target" lineNumber="188"
          name="right_clip_luma" uses="#//@actions.10/@body/@blocks.1/@elseBlocks.0/@condition/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals defs="#//@actions.10/@body/@blocks.0/@instructions.10/@target" lineNumber="189"
          name="right_clip_chroma" uses="#//@actions.10/@body/@blocks.1/@elseBlocks.0/@condition/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals defs="#//@actions.10/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target #//@actions.10/@body/@blocks.1/@elseBlocks.0/@thenBlocks.0/@instructions.0/@target #//@actions.10/@body/@blocks.1/@elseBlocks.0/@elseBlocks.0/@instructions.0/@target"
          lineNumber="190" name="shift" uses="#//@actions.10/@body/@blocks.4/@instructions.1/@arguments.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="3"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.3/@thenBlocks.0/@instructions.1/@target"
          name="local_row" uses="#//@actions.10/@body/@blocks.3/@thenBlocks.0/@instructions.2/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="5"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.4/@instructions.0/@target"
          name="local_data" uses="#//@actions.10/@body/@blocks.4/@instructions.1/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.4/@instructions.1/@target"
          name="tmp_extractByte" uses="#//@actions.10/@body/@blocks.4/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="184">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.10/@inputPattern/@variables.0"/>
          <target variable="#//@actions.10/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.5"/>
          <target variable="#//@actions.10/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.10/@body/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="186">
          <target variable="#//@actions.10/@body/@locals.3"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.10/@body/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.10/@body/@locals.2"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="187">
          <target variable="#//@actions.10/@body/@locals.4"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.10/@body/@locals.3"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@actions.10/@body/@locals.5"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.1"/>
          <target variable="#//@actions.10/@body/@locals.6"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="188">
          <target variable="#//@actions.10/@body/@locals.7"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="LOGIC_AND">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.10/@body/@locals.5"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="4">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="GT">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.10/@body/@locals.3"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="4">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.10/@body/@locals.6"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@actions.10/@body/@locals.5"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.1"/>
          <target variable="#//@actions.10/@body/@locals.6"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="189">
          <target variable="#//@actions.10/@body/@locals.8"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="LOGIC_AND">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.10/@body/@locals.5"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="4">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="GT">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.10/@body/@locals.3"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="3">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.10/@body/@locals.6"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="190">
        <condition xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@actions.10/@body/@locals.4"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="193">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LOGIC_OR">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.10/@body/@locals.7"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.10/@body/@locals.8"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="196">
              <target variable="#//@actions.10/@body/@locals.9"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.10/@body/@locals.3"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="3">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="3"/>
              </value>
            </instructions>
          </elseBlocks>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="194">
              <target variable="#//@actions.10/@body/@locals.9"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="3">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
              </value>
            </instructions>
          </thenBlocks>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="191">
            <target variable="#//@actions.10/@body/@locals.9"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="202">
          <target variable="#//@stateVars.6"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.10/@body/@locals.0"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.10/@body/@locals.2"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="203">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.10/@body/@locals.2"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="8">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.3"/>
            <target variable="#//@actions.10/@body/@locals.2"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="207">
            <target variable="#//@stateVars.3"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.10/@body/@locals.2"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
            </value>
          </instructions>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="204">
            <target variable="#//@stateVars.3"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.4"/>
            <target variable="#//@actions.10/@body/@locals.10"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="205">
            <target variable="#//@stateVars.4"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.10/@body/@locals.10"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.6"/>
          <target variable="#//@actions.10/@body/@locals.11"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="184" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.10/@body/@locals.11"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.10/@body/@locals.9"/>
            </value>
          </arguments>
          <target variable="#//@actions.10/@body/@locals.12"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="184">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.10/@outputPattern/@variables.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.10/@body/@locals.12"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.2">
      <numTokensMap key="#//@inputs.2" value="1"/>
      <portToVarMap key="#//@inputs.2" value="#//@actions.10/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="184" name="DI" uses="#//@actions.10/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeUint"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.10/@inputPattern/@variables.0" value="#//@inputs.2"/>
    </inputPattern>
    <outputPattern ports="#//@outputs.0">
      <numTokensMap key="#//@outputs.0" value="1"/>
      <portToVarMap key="#//@outputs.0" value="#//@actions.10/@outputPattern/@variables.0"/>
      <variables assignable="true" defs="#//@actions.10/@body/@blocks.4/@instructions.2/@target"
          lineNumber="184" name="DO">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.10/@outputPattern/@variables.0" value="#//@outputs.0"/>
    </outputPattern>
    <peekPattern/>
    <scheduler lineNumber="184" name="isSchedulable_extract_read">
      <locals assignable="true" defs="#//@actions.10/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.10/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.10/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.10/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>extract</identifiers>
      <identifiers>read</identifiers>
    </tag>
  </actions>
  <fsm initialState="#//@fsm/@vertices.0">
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.0" target="#//@fsm/@vertices.5"
        actions="#//@actions.0"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.0" target="#//@fsm/@vertices.3"
        actions="#//@actions.3"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.0" target="#//@fsm/@vertices.1"
        actions="#//@actions.4"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.0" target="#//@fsm/@vertices.1"
        actions="#//@actions.5"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.5" target="#//@fsm/@vertices.2"
        actions="#//@actions.1"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.2" target="#//@fsm/@vertices.0"
        actions="#//@actions.2"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.3" target="#//@fsm/@vertices.4"
        actions="#//@actions.6"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.4" target="#//@fsm/@vertices.1"
        actions="#//@actions.7"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.1" target="#//@fsm/@vertices.0"
        actions="#//@actions.8"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.1" target="#//@fsm/@vertices.1"
        actions="#//@actions.9"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.1" target="#//@fsm/@vertices.1"
        actions="#//@actions.10"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="cmd" incoming="#//@fsm/@edges.5 #//@fsm/@edges.8"
        outgoing="#//@fsm/@edges.0 #//@fsm/@edges.1 #//@fsm/@edges.2 #//@fsm/@edges.3"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="extract" incoming="#//@fsm/@edges.2 #//@fsm/@edges.3 #//@fsm/@edges.7 #//@fsm/@edges.9 #//@fsm/@edges.10"
        outgoing="#//@fsm/@edges.8 #//@fsm/@edges.9 #//@fsm/@edges.10"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="geth" incoming="#//@fsm/@edges.4"
        outgoing="#//@fsm/@edges.5"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="getmvx" incoming="#//@fsm/@edges.1"
        outgoing="#//@fsm/@edges.6"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="getmvy" incoming="#//@fsm/@edges.6"
        outgoing="#//@fsm/@edges.7"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="getw" incoming="#//@fsm/@edges.0"
        outgoing="#//@fsm/@edges.4"/>
  </fsm>
  <inputs label="MV">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
  </inputs>
  <inputs label="BTYPE">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
  </inputs>
  <inputs label="DI">
    <type xsi:type="net.sf.orcc.ir:TypeUint"/>
  </inputs>
  <outputs label="DO">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
  </outputs>
  <procs lineNumber="54" name="extractByte">
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstReturn">
        <value xsi:type="net.sf.orcc.ir:ExprBinary">
          <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.0/@parameters.0/@variable"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="TIMES">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprInt" value="3">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.0/@parameters.1/@variable"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="8">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="36"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="255">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="8"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
        </value>
      </instructions>
    </blocks>
    <parameters>
      <variable assignable="true" lineNumber="54" name="v" uses="#//@procs.0/@blocks.0/@instructions.0/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </variable>
    </parameters>
    <parameters>
      <variable assignable="true" lineNumber="54" name="n" uses="#//@procs.0/@blocks.0/@instructions.0/@value/@e1/@e2/@e1/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </variable>
    </parameters>
    <returnType xsi:type="net.sf.orcc.ir:TypeInt"/>
  </procs>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.1/@target #//@actions.8/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target #//@actions.8/@body/@blocks.1/@elseBlocks.0/@instructions.1/@target"
      lineNumber="58" name="comp" uses="#//@actions.4/@body/@blocks.0/@instructions.3/@source #//@actions.4/@body/@blocks.1/@thenBlocks.0/@instructions.1/@source #//@actions.6/@body/@blocks.0/@instructions.4/@source #//@actions.6/@body/@blocks.1/@thenBlocks.0/@instructions.1/@source #//@actions.8/@body/@blocks.0/@instructions.0/@source #//@actions.8/@body/@blocks.1/@elseBlocks.0/@instructions.0/@source #//@actions.9/@body/@blocks.0/@instructions.4/@source #//@actions.9/@body/@blocks.0/@instructions.7/@source #//@actions.10/@body/@blocks.0/@instructions.5/@source #//@actions.10/@body/@blocks.0/@instructions.8/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.1/@body/@blocks.0/@instructions.1/@target"
      lineNumber="68" name="mbw_max" uses="#//@actions.8/@body/@blocks.1/@thenBlocks.0/@instructions.2/@source #//@actions.9/@body/@blocks.0/@instructions.5/@source #//@actions.9/@body/@blocks.0/@instructions.8/@source #//@actions.10/@body/@blocks.0/@instructions.6/@source #//@actions.10/@body/@blocks.0/@instructions.9/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.2/@target #//@actions.8/@body/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.0/@target #//@actions.8/@body/@blocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.1/@target"
      lineNumber="70" name="mbx" uses="#//@actions.4/@body/@blocks.1/@thenBlocks.0/@instructions.0/@source #//@actions.4/@body/@blocks.1/@elseBlocks.0/@instructions.0/@source #//@actions.6/@body/@blocks.1/@thenBlocks.0/@instructions.0/@source #//@actions.6/@body/@blocks.1/@elseBlocks.0/@instructions.0/@source #//@actions.8/@body/@blocks.1/@thenBlocks.0/@instructions.1/@source #//@actions.8/@body/@blocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.4/@body/@blocks.0/@instructions.1/@target #//@actions.6/@body/@blocks.0/@instructions.2/@target #//@actions.9/@body/@blocks.3/@thenBlocks.0/@instructions.0/@target #//@actions.9/@body/@blocks.3/@elseBlocks.0/@instructions.1/@target #//@actions.10/@body/@blocks.3/@thenBlocks.0/@instructions.0/@target #//@actions.10/@body/@blocks.3/@elseBlocks.0/@instructions.1/@target"
      lineNumber="80" name="count" uses="#//@actions.9/@body/@blocks.0/@instructions.1/@source #//@actions.9/@body/@blocks.2/@instructions.0/@source #//@actions.9/@body/@blocks.3/@elseBlocks.0/@instructions.0/@source #//@actions.9/@scheduler/@blocks.0/@instructions.1/@source #//@actions.9/@scheduler/@blocks.0/@instructions.2/@source #//@actions.10/@body/@blocks.0/@instructions.2/@source #//@actions.10/@body/@blocks.2/@instructions.1/@source #//@actions.10/@body/@blocks.3/@elseBlocks.0/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="5"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.4/@body/@blocks.0/@instructions.2/@target #//@actions.5/@body/@blocks.0/@instructions.1/@target #//@actions.6/@body/@blocks.0/@instructions.3/@target #//@actions.9/@body/@blocks.3/@thenBlocks.0/@instructions.2/@target #//@actions.10/@body/@blocks.3/@thenBlocks.0/@instructions.2/@target"
      lineNumber="82" name="row" uses="#//@actions.8/@scheduler/@blocks.0/@instructions.0/@source #//@actions.9/@body/@blocks.3/@thenBlocks.0/@instructions.1/@source #//@actions.10/@body/@blocks.3/@thenBlocks.0/@instructions.1/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="5"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.4/@body/@blocks.1/@thenBlocks.2/@instructions.0/@target #//@actions.4/@body/@blocks.1/@elseBlocks.0/@instructions.1/@target #//@actions.6/@body/@blocks.1/@thenBlocks.2/@instructions.0/@target #//@actions.6/@body/@blocks.1/@elseBlocks.0/@instructions.1/@target"
      lineNumber="84" name="xstart" uses="#//@actions.9/@body/@blocks.0/@instructions.0/@source #//@actions.9/@scheduler/@blocks.0/@instructions.0/@source #//@actions.10/@body/@blocks.0/@instructions.1/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.10/@body/@blocks.2/@instructions.0/@target"
      lineNumber="137" name="data" uses="#//@actions.9/@body/@blocks.4/@instructions.0/@source #//@actions.10/@body/@blocks.4/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeUint"/>
  </stateVars>
</net.sf.orcc.df:Actor>
