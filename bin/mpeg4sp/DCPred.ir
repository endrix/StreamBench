<?xml version="1.0" encoding="UTF-8"?>
<net.sf.orcc.df:Actor xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:net.sf.orcc.df="http://orcc.sf.net/model/2011/Df" xmlns:net.sf.orcc.ir="http://orcc.sf.net/model/2011/Ir"
    label="mpeg4sp.DCPred" fileName="/StreamBench/src/mpeg4sp/DCPred.cal"
    lineNumber="47">
  <actions>
    <body lineNumber="80" name="start">
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.0/@target"
          lineNumber="80" name="cmd">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="80">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.0/@inputPattern/@variables.0"/>
          <target variable="#//@actions.0/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="84">
          <target variable="#//@stateVars.5"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="85">
          <target variable="#//@stateVars.3"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="8">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="80">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.0/@outputPattern/@variables.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprUnary" op="MINUS">
            <expr xsi:type="net.sf.orcc.ir:ExprInt" value="2">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </expr>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="3"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.0">
      <numTokensMap key="#//@inputs.0" value="1"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.0/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="80" name="BTYPE" uses="#//@actions.0/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.0/@inputPattern/@variables.0" value="#//@inputs.0"/>
    </inputPattern>
    <outputPattern ports="#//@outputs.2">
      <numTokensMap key="#//@outputs.2" value="1"/>
      <portToVarMap key="#//@outputs.2" value="#//@actions.0/@outputPattern/@variables.0"/>
      <variables assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.3/@target"
          lineNumber="80" name="START">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="3"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.0/@outputPattern/@variables.0" value="#//@outputs.2"/>
    </outputPattern>
    <peekPattern ports="#//@inputs.0">
      <numTokensMap key="#//@inputs.0" value="1"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.0/@peekPattern/@variables.0"/>
      <variables assignable="true" lineNumber="80" name="BTYPE" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.0/@peekPattern/@variables.0" value="#//@inputs.0"/>
    </peekPattern>
    <scheduler lineNumber="80" name="isSchedulable_start">
      <locals assignable="true" defs="#//@actions.0/@scheduler/@blocks.0/@instructions.2/@target"
          name="result" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.3/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@scheduler/@blocks.0/@instructions.0/@target"
          lineNumber="80" name="cmd" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.2/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@scheduler/@blocks.0/@instructions.1/@target"
          name="local_NEWVOP" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.2/@value/@e1/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="80">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.0/@peekPattern/@variables.0"/>
          <target variable="#//@actions.0/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.23"/>
          <target variable="#//@actions.0/@scheduler/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.0/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@scheduler/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@scheduler/@locals.2"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>start</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="88" name="skip">
      <locals assignable="true" defs="#//@actions.1/@body/@blocks.0/@instructions.0/@target"
          lineNumber="88" name="x">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="88">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.1/@inputPattern/@variables.0"/>
          <target variable="#//@actions.1/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.0">
      <numTokensMap key="#//@inputs.0" value="1"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.1/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="88" name="BTYPE" uses="#//@actions.1/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.1/@inputPattern/@variables.0" value="#//@inputs.0"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="88" name="isSchedulable_skip">
      <locals assignable="true" defs="#//@actions.1/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.1/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.1/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.1/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>skip</identifiers>
    </tag>
  </actions>
  <actions>
    <attributes name="IsPrecededBy" stringValue="start"/>
    <body lineNumber="91" name="read_inter_ac">
      <locals assignable="true" defs="#//@actions.2/@body/@blocks.0/@instructions.0/@target"
          lineNumber="91" name="cmd">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <locals assignable="true" defs="#//@actions.2/@body/@blocks.0/@instructions.1/@target"
          lineNumber="91" name="qp" uses="#//@actions.2/@body/@blocks.0/@instructions.3/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
      </locals>
      <locals assignable="true" defs="#//@actions.2/@body/@blocks.0/@instructions.7/@target"
          name="local_s_QP" uses="#//@actions.2/@body/@blocks.0/@instructions.8/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="91">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.2/@inputPattern/@variables.0"/>
          <target variable="#//@actions.2/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="91">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.2/@inputPattern/@variables.1"/>
          <target variable="#//@actions.2/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="97">
          <target variable="#//@stateVars.8"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="98">
          <target variable="#//@stateVars.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.2/@body/@locals.1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="92">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.2/@outputPattern/@variables.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="92">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.2/@outputPattern/@variables.1"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="92">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.2/@outputPattern/@variables.2"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@actions.2/@body/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="92">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.2/@outputPattern/@variables.3"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.2/@body/@locals.2"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.0 #//@inputs.5">
      <numTokensMap key="#//@inputs.0" value="1"/>
      <numTokensMap key="#//@inputs.5" value="1"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.2/@inputPattern/@variables.0"/>
      <portToVarMap key="#//@inputs.5" value="#//@actions.2/@inputPattern/@variables.1"/>
      <variables assignable="true" lineNumber="91" name="BTYPE" uses="#//@actions.2/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <variables assignable="true" lineNumber="91" name="QP" uses="#//@actions.2/@body/@blocks.0/@instructions.1/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.2/@inputPattern/@variables.0" value="#//@inputs.0"/>
      <varToPortMap key="#//@actions.2/@inputPattern/@variables.1" value="#//@inputs.5"/>
    </inputPattern>
    <outputPattern ports="#//@outputs.2 #//@outputs.1 #//@outputs.3 #//@outputs.4">
      <numTokensMap key="#//@outputs.2" value="1"/>
      <numTokensMap key="#//@outputs.1" value="1"/>
      <numTokensMap key="#//@outputs.3" value="1"/>
      <numTokensMap key="#//@outputs.4" value="1"/>
      <portToVarMap key="#//@outputs.2" value="#//@actions.2/@outputPattern/@variables.0"/>
      <portToVarMap key="#//@outputs.1" value="#//@actions.2/@outputPattern/@variables.1"/>
      <portToVarMap key="#//@outputs.3" value="#//@actions.2/@outputPattern/@variables.2"/>
      <portToVarMap key="#//@outputs.4" value="#//@actions.2/@outputPattern/@variables.3"/>
      <variables assignable="true" defs="#//@actions.2/@body/@blocks.0/@instructions.4/@target"
          lineNumber="91" name="START">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="3"/>
        </type>
      </variables>
      <variables assignable="true" defs="#//@actions.2/@body/@blocks.0/@instructions.5/@target"
          lineNumber="91" name="PTR">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
        </type>
      </variables>
      <variables assignable="true" defs="#//@actions.2/@body/@blocks.0/@instructions.6/@target"
          lineNumber="91" name="SIGNED">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </type>
      </variables>
      <variables assignable="true" defs="#//@actions.2/@body/@blocks.0/@instructions.8/@target"
          lineNumber="91" name="QUANT">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.2/@outputPattern/@variables.0" value="#//@outputs.2"/>
      <varToPortMap key="#//@actions.2/@outputPattern/@variables.1" value="#//@outputs.1"/>
      <varToPortMap key="#//@actions.2/@outputPattern/@variables.2" value="#//@outputs.3"/>
      <varToPortMap key="#//@actions.2/@outputPattern/@variables.3" value="#//@outputs.4"/>
    </outputPattern>
    <peekPattern ports="#//@inputs.0">
      <numTokensMap key="#//@inputs.0" value="1"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.2/@peekPattern/@variables.0"/>
      <variables assignable="true" lineNumber="91" name="BTYPE" uses="#//@actions.2/@scheduler/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.2/@peekPattern/@variables.0" value="#//@inputs.0"/>
    </peekPattern>
    <scheduler lineNumber="91" name="isSchedulable_read_inter_ac">
      <locals assignable="true" defs="#//@actions.2/@scheduler/@blocks.0/@instructions.3/@target"
          name="result" uses="#//@actions.2/@scheduler/@blocks.0/@instructions.4/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.2/@scheduler/@blocks.0/@instructions.0/@target"
          lineNumber="91" name="cmd" uses="#//@actions.2/@scheduler/@blocks.0/@instructions.3/@value/@e1/@e1/@e1/@use #//@actions.2/@scheduler/@blocks.0/@instructions.3/@value/@e2/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <locals assignable="true" defs="#//@actions.2/@scheduler/@blocks.0/@instructions.1/@target"
          name="local_INTER" uses="#//@actions.2/@scheduler/@blocks.0/@instructions.3/@value/@e1/@e1/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.2/@scheduler/@blocks.0/@instructions.2/@target"
          name="local_ACCODED" uses="#//@actions.2/@scheduler/@blocks.0/@instructions.3/@value/@e2/@e1/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="91">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.2/@peekPattern/@variables.0"/>
          <target variable="#//@actions.2/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.25"/>
          <target variable="#//@actions.2/@scheduler/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.18"/>
          <target variable="#//@actions.2/@scheduler/@locals.3"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.2/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="LOGIC_AND">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.2/@scheduler/@locals.1"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.2/@scheduler/@locals.2"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.2/@scheduler/@locals.1"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.2/@scheduler/@locals.3"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.2/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>read</identifiers>
      <identifiers>inter_ac</identifiers>
    </tag>
  </actions>
  <actions>
    <attributes name="IsPrecededBy" stringValue="start-read_inter_ac"/>
    <body lineNumber="102" name="read_other">
      <locals assignable="true" defs="#//@actions.3/@body/@blocks.0/@instructions.0/@target"
          lineNumber="102" name="cmd">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <locals assignable="true" defs="#//@actions.3/@body/@blocks.0/@instructions.1/@target"
          lineNumber="102" name="qp" uses="#//@actions.3/@body/@blocks.0/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="102">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.3/@inputPattern/@variables.0"/>
          <target variable="#//@actions.3/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="102">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.3/@inputPattern/@variables.1"/>
          <target variable="#//@actions.3/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="106">
          <target variable="#//@stateVars.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.3/@body/@locals.1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="102">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.3/@outputPattern/@variables.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprUnary" op="MINUS">
            <expr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </expr>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="2"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.0 #//@inputs.5">
      <numTokensMap key="#//@inputs.0" value="1"/>
      <numTokensMap key="#//@inputs.5" value="1"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.3/@inputPattern/@variables.0"/>
      <portToVarMap key="#//@inputs.5" value="#//@actions.3/@inputPattern/@variables.1"/>
      <variables assignable="true" lineNumber="102" name="BTYPE" uses="#//@actions.3/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <variables assignable="true" lineNumber="102" name="QP" uses="#//@actions.3/@body/@blocks.0/@instructions.1/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.3/@inputPattern/@variables.0" value="#//@inputs.0"/>
      <varToPortMap key="#//@actions.3/@inputPattern/@variables.1" value="#//@inputs.5"/>
    </inputPattern>
    <outputPattern ports="#//@outputs.2">
      <numTokensMap key="#//@outputs.2" value="1"/>
      <portToVarMap key="#//@outputs.2" value="#//@actions.3/@outputPattern/@variables.0"/>
      <variables assignable="true" defs="#//@actions.3/@body/@blocks.0/@instructions.3/@target"
          lineNumber="102" name="START">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="3"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.3/@outputPattern/@variables.0" value="#//@outputs.2"/>
    </outputPattern>
    <peekPattern ports="#//@inputs.0">
      <numTokensMap key="#//@inputs.0" value="1"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.3/@peekPattern/@variables.0"/>
      <variables assignable="true" lineNumber="102" name="BTYPE" uses="#//@actions.3/@scheduler/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.3/@peekPattern/@variables.0" value="#//@inputs.0"/>
    </peekPattern>
    <scheduler lineNumber="102" name="isSchedulable_read_other">
      <locals assignable="true" defs="#//@actions.3/@scheduler/@blocks.0/@instructions.2/@target"
          name="result" uses="#//@actions.3/@scheduler/@blocks.0/@instructions.3/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.3/@scheduler/@blocks.0/@instructions.0/@target"
          lineNumber="102" name="cmd" uses="#//@actions.3/@scheduler/@blocks.0/@instructions.2/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <locals assignable="true" defs="#//@actions.3/@scheduler/@blocks.0/@instructions.1/@target"
          name="local_INTRA" uses="#//@actions.3/@scheduler/@blocks.0/@instructions.2/@value/@e1/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="102">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.3/@peekPattern/@variables.0"/>
          <target variable="#//@actions.3/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.24"/>
          <target variable="#//@actions.3/@scheduler/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.3/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.3/@scheduler/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.3/@scheduler/@locals.2"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.3/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>read</identifiers>
      <identifiers>other</identifiers>
    </tag>
  </actions>
  <actions>
    <attributes name="IsPrecededBy" stringValue="start-read_other"/>
    <body lineNumber="154" name="read_intra">
      <locals assignable="true" defs="#//@actions.4/@body/@blocks.0/@instructions.0/@target"
          lineNumber="154" name="cmd" uses="#//@actions.4/@body/@blocks.0/@instructions.12/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <locals assignable="true" defs="#//@actions.4/@body/@blocks.0/@instructions.1/@target"
          lineNumber="154" name="a" uses="#//@actions.4/@body/@blocks.0/@instructions.5/@indexes.0/@use #//@actions.4/@body/@blocks.5/@elseBlocks.0/@instructions.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
      </locals>
      <locals assignable="true" defs="#//@actions.4/@body/@blocks.0/@instructions.2/@target"
          lineNumber="154" name="b" uses="#//@actions.4/@body/@blocks.0/@instructions.6/@indexes.0/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
      </locals>
      <locals assignable="true" defs="#//@actions.4/@body/@blocks.0/@instructions.3/@target"
          lineNumber="154" name="c" uses="#//@actions.4/@body/@blocks.0/@instructions.7/@indexes.0/@use #//@actions.4/@body/@blocks.5/@thenBlocks.0/@instructions.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
      </locals>
      <locals assignable="true" defs="#//@actions.4/@body/@blocks.0/@instructions.4/@target"
          lineNumber="154" name="qp" uses="#//@actions.4/@body/@blocks.0/@instructions.13/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
      </locals>
      <locals defs="#//@actions.4/@body/@blocks.0/@instructions.5/@target" lineNumber="158"
          name="dca" uses="#//@actions.4/@body/@blocks.0/@instructions.9/@arguments.0/@value/@e1/@use #//@actions.4/@body/@blocks.1/@elseBlocks.0/@instructions.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
      </locals>
      <locals defs="#//@actions.4/@body/@blocks.0/@instructions.6/@target" lineNumber="159"
          name="dcb" uses="#//@actions.4/@body/@blocks.0/@instructions.8/@arguments.0/@value/@e1/@use #//@actions.4/@body/@blocks.0/@instructions.9/@arguments.0/@value/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
      </locals>
      <locals defs="#//@actions.4/@body/@blocks.0/@instructions.7/@target" lineNumber="160"
          name="dcc" uses="#//@actions.4/@body/@blocks.0/@instructions.8/@arguments.0/@value/@e2/@use #//@actions.4/@body/@blocks.1/@thenBlocks.0/@instructions.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
      </locals>
      <locals defs="#//@actions.4/@body/@blocks.0/@instructions.8/@target" lineNumber="161"
          name="horiz" uses="#//@actions.4/@body/@blocks.0/@instructions.10/@value/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
      </locals>
      <locals defs="#//@actions.4/@body/@blocks.0/@instructions.9/@target" lineNumber="162"
          name="vert" uses="#//@actions.4/@body/@blocks.0/@instructions.10/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
      </locals>
      <locals defs="#//@actions.4/@body/@blocks.0/@instructions.10/@target" lineNumber="163"
          name="top" uses="#//@actions.4/@body/@blocks.1/@condition/@use #//@actions.4/@body/@blocks.3/@elseBlocks.0/@condition/@use #//@actions.4/@body/@blocks.5/@condition/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.4/@body/@blocks.3/@thenBlocks.0/@instructions.0/@target #//@actions.4/@body/@blocks.3/@elseBlocks.0/@thenBlocks.0/@instructions.0/@target #//@actions.4/@body/@blocks.3/@elseBlocks.0/@elseBlocks.0/@instructions.0/@target"
          lineNumber="164" name="s" uses="#//@actions.4/@body/@blocks.6/@instructions.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="3"/>
      </locals>
      <locals assignable="true" defs="#//@actions.4/@body/@blocks.0/@instructions.11/@target"
          name="local_ACPRED" uses="#//@actions.4/@body/@blocks.0/@instructions.12/@value/@e1/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals defs="#//@actions.4/@body/@blocks.0/@instructions.12/@target" lineNumber="165"
          name="ac" uses="#//@actions.4/@body/@blocks.3/@condition/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.4/@body/@blocks.0/@instructions.14/@target"
          name="tmp_dc_scaler" uses="#//@actions.4/@body/@blocks.0/@instructions.15/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="7"/>
      </locals>
      <locals assignable="true" defs="#//@actions.4/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target #//@actions.4/@body/@blocks.1/@elseBlocks.0/@instructions.0/@target"
          name="tmp_if" uses="#//@actions.4/@body/@blocks.2/@instructions.2/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
      </locals>
      <locals assignable="true" defs="#//@actions.4/@body/@blocks.2/@instructions.0/@target #//@actions.4/@body/@blocks.2/@instructions.1/@target #//@actions.4/@body/@blocks.4/@instructions.0/@target"
          name="local_scaler" uses="#//@actions.4/@body/@blocks.2/@instructions.2/@value/@e1/@e2/@e1/@use #//@actions.4/@body/@blocks.2/@instructions.2/@value/@e2/@use #//@actions.4/@body/@blocks.4/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="7"/>
      </locals>
      <locals assignable="true" defs="#//@actions.4/@body/@blocks.6/@instructions.1/@target"
          name="local_is_signed" uses="#//@actions.4/@body/@blocks.6/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.4/@body/@blocks.6/@instructions.3/@target"
          name="local_s_QP" uses="#//@actions.4/@body/@blocks.6/@instructions.4/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="154">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.4/@inputPattern/@variables.0"/>
          <target variable="#//@actions.4/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="154">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.4/@inputPattern/@variables.1"/>
          <target variable="#//@actions.4/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="154">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.4/@inputPattern/@variables.2"/>
          <target variable="#//@actions.4/@body/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="154">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.4/@inputPattern/@variables.3"/>
          <target variable="#//@actions.4/@body/@locals.3"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="154">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.4/@inputPattern/@variables.4"/>
          <target variable="#//@actions.4/@body/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="158">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.4/@body/@locals.1"/>
          </indexes>
          <source variable="#//@stateVars.4"/>
          <target variable="#//@actions.4/@body/@locals.5"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="159">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.4/@body/@locals.2"/>
          </indexes>
          <source variable="#//@stateVars.4"/>
          <target variable="#//@actions.4/@body/@locals.6"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="160">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.4/@body/@locals.3"/>
          </indexes>
          <source variable="#//@stateVars.4"/>
          <target variable="#//@actions.4/@body/@locals.7"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="161" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.4/@body/@locals.6"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.4/@body/@locals.7"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
            </value>
          </arguments>
          <target variable="#//@actions.4/@body/@locals.8"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="162" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.4/@body/@locals.5"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.4/@body/@locals.6"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
            </value>
          </arguments>
          <target variable="#//@actions.4/@body/@locals.9"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="163">
          <target variable="#//@actions.4/@body/@locals.10"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.4/@body/@locals.9"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.4/@body/@locals.8"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.19"/>
          <target variable="#//@actions.4/@body/@locals.12"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="165">
          <target variable="#//@actions.4/@body/@locals.13"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.4/@body/@locals.0"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.4/@body/@locals.12"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="167">
          <target variable="#//@stateVars.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.4/@body/@locals.4"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="168" procedure="#//@procs.1">
          <target variable="#//@actions.4/@body/@locals.14"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="168">
          <target variable="#//@stateVars.7"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.4/@body/@locals.14"/>
          </value>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="169">
        <condition xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@actions.4/@body/@locals.10"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="172">
            <target variable="#//@actions.4/@body/@locals.15"/>
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.4/@body/@locals.5"/>
            </value>
          </instructions>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="170">
            <target variable="#//@actions.4/@body/@locals.15"/>
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.4/@body/@locals.7"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.7"/>
          <target variable="#//@actions.4/@body/@locals.16"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.7"/>
          <target variable="#//@actions.4/@body/@locals.16"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="169">
          <target variable="#//@stateVars.6"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="DIV">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.4/@body/@locals.15"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.4/@body/@locals.16"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="7"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="14"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.4/@body/@locals.16"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="14"/>
          </value>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="174">
        <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
          <expr xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.4/@body/@locals.13"/>
          </expr>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="177">
          <condition xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.4/@body/@locals.10"/>
          </condition>
          <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="180">
              <target variable="#//@actions.4/@body/@locals.11"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </instructions>
          </elseBlocks>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="178">
              <target variable="#//@actions.4/@body/@locals.11"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="2">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
              </value>
            </instructions>
          </thenBlocks>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="175">
            <target variable="#//@actions.4/@body/@locals.11"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.7"/>
          <target variable="#//@actions.4/@body/@locals.16"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="183">
          <target variable="#//@stateVars.8"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.4/@body/@locals.16"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="155">
        <condition xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@actions.4/@body/@locals.10"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="155">
            <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </indexes>
            <target variable="#//@actions.4/@outputPattern/@variables.0"/>
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.4/@body/@locals.1"/>
            </value>
          </instructions>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="155">
            <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </indexes>
            <target variable="#//@actions.4/@outputPattern/@variables.0"/>
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.4/@body/@locals.3"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="156">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.4/@outputPattern/@variables.1"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.4/@body/@locals.11"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.8"/>
          <target variable="#//@actions.4/@body/@locals.17"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="156">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.4/@outputPattern/@variables.2"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.4/@body/@locals.17"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@actions.4/@body/@locals.18"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="156">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.4/@outputPattern/@variables.3"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.4/@body/@locals.18"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.0 #//@inputs.1 #//@inputs.2 #//@inputs.3 #//@inputs.5">
      <numTokensMap key="#//@inputs.0" value="1"/>
      <numTokensMap key="#//@inputs.1" value="1"/>
      <numTokensMap key="#//@inputs.2" value="1"/>
      <numTokensMap key="#//@inputs.3" value="1"/>
      <numTokensMap key="#//@inputs.5" value="1"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.4/@inputPattern/@variables.0"/>
      <portToVarMap key="#//@inputs.1" value="#//@actions.4/@inputPattern/@variables.1"/>
      <portToVarMap key="#//@inputs.2" value="#//@actions.4/@inputPattern/@variables.2"/>
      <portToVarMap key="#//@inputs.3" value="#//@actions.4/@inputPattern/@variables.3"/>
      <portToVarMap key="#//@inputs.5" value="#//@actions.4/@inputPattern/@variables.4"/>
      <variables assignable="true" lineNumber="154" name="BTYPE" uses="#//@actions.4/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <variables assignable="true" lineNumber="154" name="A" uses="#//@actions.4/@body/@blocks.0/@instructions.1/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
        </type>
      </variables>
      <variables assignable="true" lineNumber="154" name="B" uses="#//@actions.4/@body/@blocks.0/@instructions.2/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
        </type>
      </variables>
      <variables assignable="true" lineNumber="154" name="C" uses="#//@actions.4/@body/@blocks.0/@instructions.3/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
        </type>
      </variables>
      <variables assignable="true" lineNumber="154" name="QP" uses="#//@actions.4/@body/@blocks.0/@instructions.4/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.4/@inputPattern/@variables.0" value="#//@inputs.0"/>
      <varToPortMap key="#//@actions.4/@inputPattern/@variables.1" value="#//@inputs.1"/>
      <varToPortMap key="#//@actions.4/@inputPattern/@variables.2" value="#//@inputs.2"/>
      <varToPortMap key="#//@actions.4/@inputPattern/@variables.3" value="#//@inputs.3"/>
      <varToPortMap key="#//@actions.4/@inputPattern/@variables.4" value="#//@inputs.5"/>
    </inputPattern>
    <outputPattern ports="#//@outputs.1 #//@outputs.2 #//@outputs.3 #//@outputs.4">
      <numTokensMap key="#//@outputs.1" value="1"/>
      <numTokensMap key="#//@outputs.2" value="1"/>
      <numTokensMap key="#//@outputs.3" value="1"/>
      <numTokensMap key="#//@outputs.4" value="1"/>
      <portToVarMap key="#//@outputs.1" value="#//@actions.4/@outputPattern/@variables.0"/>
      <portToVarMap key="#//@outputs.2" value="#//@actions.4/@outputPattern/@variables.1"/>
      <portToVarMap key="#//@outputs.3" value="#//@actions.4/@outputPattern/@variables.2"/>
      <portToVarMap key="#//@outputs.4" value="#//@actions.4/@outputPattern/@variables.3"/>
      <variables assignable="true" defs="#//@actions.4/@body/@blocks.5/@thenBlocks.0/@instructions.0/@target #//@actions.4/@body/@blocks.5/@elseBlocks.0/@instructions.0/@target"
          lineNumber="154" name="PTR">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
        </type>
      </variables>
      <variables assignable="true" defs="#//@actions.4/@body/@blocks.6/@instructions.0/@target"
          lineNumber="154" name="START">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="3"/>
        </type>
      </variables>
      <variables assignable="true" defs="#//@actions.4/@body/@blocks.6/@instructions.2/@target"
          lineNumber="154" name="SIGNED">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </type>
      </variables>
      <variables assignable="true" defs="#//@actions.4/@body/@blocks.6/@instructions.4/@target"
          lineNumber="154" name="QUANT">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.4/@outputPattern/@variables.0" value="#//@outputs.1"/>
      <varToPortMap key="#//@actions.4/@outputPattern/@variables.1" value="#//@outputs.2"/>
      <varToPortMap key="#//@actions.4/@outputPattern/@variables.2" value="#//@outputs.3"/>
      <varToPortMap key="#//@actions.4/@outputPattern/@variables.3" value="#//@outputs.4"/>
    </outputPattern>
    <peekPattern/>
    <scheduler lineNumber="154" name="isSchedulable_read_intra">
      <locals assignable="true" defs="#//@actions.4/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.4/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.4/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.4/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>read</identifiers>
      <identifiers>intra</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="189" name="getdc_inter">
      <locals assignable="true" defs="#//@actions.5/@body/@blocks.0/@instructions.0/@target"
          lineNumber="189" name="dc" uses="#//@actions.5/@body/@blocks.0/@instructions.2/@arguments.0/@value/@use #//@actions.5/@body/@blocks.1/@condition/@e1/@use #//@actions.5/@body/@blocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.0/@value/@use #//@actions.5/@body/@blocks.1/@elseBlocks.1/@elseBlocks.0/@condition/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
      </locals>
      <locals assignable="true" defs="#//@actions.5/@body/@blocks.0/@instructions.1/@target"
          name="local_s_QP" uses="#//@actions.5/@body/@blocks.0/@instructions.4/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
      </locals>
      <locals assignable="true" defs="#//@actions.5/@body/@blocks.0/@instructions.2/@target"
          name="tmp_abs" uses="#//@actions.5/@body/@blocks.0/@instructions.4/@value/@e1/@e2/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.5/@body/@blocks.0/@instructions.3/@target"
          name="local_round" uses="#//@actions.5/@body/@blocks.0/@instructions.4/@value/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="2"/>
      </locals>
      <locals defs="#//@actions.5/@body/@blocks.0/@instructions.4/@target" lineNumber="191"
          name="v" uses="#//@actions.5/@body/@blocks.1/@elseBlocks.1/@elseBlocks.0/@thenBlocks.0/@instructions.0/@value/@expr/@use #//@actions.5/@body/@blocks.1/@elseBlocks.1/@elseBlocks.0/@elseBlocks.0/@instructions.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
      </locals>
      <locals assignable="true" defs="#//@actions.5/@body/@blocks.1/@elseBlocks.0/@instructions.0/@target"
          name="local_is_signed" uses="#//@actions.5/@body/@blocks.1/@elseBlocks.1/@condition/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="189">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.5/@inputPattern/@variables.0"/>
          <target variable="#//@actions.5/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@actions.5/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="191" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.5/@body/@locals.0"/>
            </value>
          </arguments>
          <target variable="#//@actions.5/@body/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.1"/>
          <target variable="#//@actions.5/@body/@locals.3"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="191">
          <target variable="#//@actions.5/@body/@locals.4"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="TIMES">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.5/@body/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.5/@body/@locals.2"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                    <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="34"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="40"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.5/@body/@locals.3"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="40"/>
          </value>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="193">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.5/@body/@locals.0"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.8"/>
            <target variable="#//@actions.5/@body/@locals.5"/>
          </instructions>
        </elseBlocks>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="196">
          <condition xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
            <expr xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.5/@body/@locals.5"/>
            </expr>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <elseBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="199">
            <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.5/@body/@locals.0"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </condition>
            <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="202">
                <target variable="#//@stateVars.9"/>
                <value xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.5/@body/@locals.4"/>
                </value>
              </instructions>
            </elseBlocks>
            <joinBlock/>
            <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="200">
                <target variable="#//@stateVars.9"/>
                <value xsi:type="net.sf.orcc.ir:ExprUnary" op="MINUS">
                  <expr xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.5/@body/@locals.4"/>
                  </expr>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
                </value>
              </instructions>
            </thenBlocks>
          </elseBlocks>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="197">
              <target variable="#//@stateVars.9"/>
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.5/@body/@locals.0"/>
              </value>
            </instructions>
          </thenBlocks>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="194">
            <target variable="#//@stateVars.9"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.4">
      <numTokensMap key="#//@inputs.4" value="1"/>
      <portToVarMap key="#//@inputs.4" value="#//@actions.5/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="189" name="IN" uses="#//@actions.5/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.5/@inputPattern/@variables.0" value="#//@inputs.4"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="189" name="isSchedulable_getdc_inter">
      <locals assignable="true" defs="#//@actions.5/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.5/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.5/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.5/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>getdc</identifiers>
      <identifiers>inter</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="209" name="getdc_intra">
      <locals assignable="true" defs="#//@actions.6/@body/@blocks.0/@instructions.0/@target"
          lineNumber="209" name="dc" uses="#//@actions.6/@body/@blocks.0/@instructions.3/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
      </locals>
      <locals assignable="true" defs="#//@actions.6/@body/@blocks.0/@instructions.1/@target"
          name="local_dc_pred" uses="#//@actions.6/@body/@blocks.0/@instructions.3/@value/@e1/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
      </locals>
      <locals assignable="true" defs="#//@actions.6/@body/@blocks.0/@instructions.2/@target"
          name="local_scaler" uses="#//@actions.6/@body/@blocks.0/@instructions.3/@value/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="7"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="209">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.6/@inputPattern/@variables.0"/>
          <target variable="#//@actions.6/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.6"/>
          <target variable="#//@actions.6/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.7"/>
          <target variable="#//@actions.6/@body/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="211">
          <target variable="#//@stateVars.9"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="TIMES">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.6/@body/@locals.0"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.6/@body/@locals.1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="14"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.6/@body/@locals.2"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="21"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.4">
      <numTokensMap key="#//@inputs.4" value="1"/>
      <portToVarMap key="#//@inputs.4" value="#//@actions.6/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="209" name="IN" uses="#//@actions.6/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.6/@inputPattern/@variables.0" value="#//@inputs.4"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="209" name="isSchedulable_getdc_intra">
      <locals assignable="true" defs="#//@actions.6/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.6/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.6/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.6/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>getdc</identifiers>
      <identifiers>intra</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="230" name="sat">
      <locals assignable="true" defs="#//@actions.7/@body/@blocks.0/@instructions.0/@target"
          name="local_dc_val" uses="#//@actions.7/@body/@blocks.0/@instructions.1/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
      </locals>
      <locals defs="#//@actions.7/@body/@blocks.0/@instructions.1/@target" lineNumber="232"
          name="dc" uses="#//@actions.7/@body/@blocks.0/@instructions.4/@value/@use #//@actions.7/@body/@blocks.0/@instructions.5/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
      </locals>
      <locals assignable="true" defs="#//@actions.7/@body/@blocks.0/@instructions.2/@target"
          name="local_ptr" uses="#//@actions.7/@body/@blocks.0/@instructions.4/@indexes.0/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.7/@body/@blocks.0/@instructions.3/@target"
          name="local_comp" uses="#//@actions.7/@body/@blocks.0/@instructions.4/@indexes.0/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.9"/>
          <target variable="#//@actions.7/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="232" procedure="#//@procs.2">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.7/@body/@locals.0"/>
            </value>
          </arguments>
          <target variable="#//@actions.7/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.7/@body/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.5"/>
          <target variable="#//@actions.7/@body/@locals.3"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="234">
          <indexes xsi:type="net.sf.orcc.ir:ExprBinary" op="BITOR">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.7/@body/@locals.2"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.7/@body/@locals.3"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt"/>
          </indexes>
          <target variable="#//@stateVars.4"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.7/@body/@locals.1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="230">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.7/@outputPattern/@variables.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.7/@body/@locals.1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern ports="#//@outputs.0">
      <numTokensMap key="#//@outputs.0" value="1"/>
      <portToVarMap key="#//@outputs.0" value="#//@actions.7/@outputPattern/@variables.0"/>
      <variables assignable="true" defs="#//@actions.7/@body/@blocks.0/@instructions.5/@target"
          lineNumber="230" name="OUT">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.7/@outputPattern/@variables.0" value="#//@outputs.0"/>
    </outputPattern>
    <peekPattern/>
    <scheduler lineNumber="230" name="isSchedulable_sat">
      <locals assignable="true" defs="#//@actions.7/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.7/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.7/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.7/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>sat</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="237" name="advance">
      <locals assignable="true" defs="#//@actions.8/@body/@blocks.0/@instructions.0/@target #//@actions.8/@body/@blocks.0/@instructions.2/@target"
          name="local_comp" uses="#//@actions.8/@body/@blocks.0/@instructions.1/@value/@e1/@use #//@actions.8/@body/@blocks.1/@condition/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <locals assignable="true" defs="#//@actions.8/@body/@blocks.1/@thenBlocks.0/@instructions.1/@target #//@actions.8/@body/@blocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.0/@target"
          name="local_ptr" uses="#//@actions.8/@body/@blocks.1/@thenBlocks.1/@condition/@e1/@use #//@actions.8/@body/@blocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.8/@body/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.0/@target"
          name="local_BUF_SIZE" uses="#//@actions.8/@body/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.5"/>
          <target variable="#//@actions.8/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="239">
          <target variable="#//@stateVars.5"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.8/@body/@locals.0"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="5"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.5"/>
          <target variable="#//@actions.8/@body/@locals.0"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="240">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.8/@body/@locals.0"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="6">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="241">
            <target variable="#//@stateVars.5"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.3"/>
            <target variable="#//@actions.8/@body/@locals.1"/>
          </instructions>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="242">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.8/@body/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="8">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.3"/>
              <target variable="#//@actions.8/@body/@locals.1"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="245">
              <target variable="#//@stateVars.3"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.8/@body/@locals.1"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="8">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt"/>
              </value>
            </instructions>
          </elseBlocks>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.2"/>
              <target variable="#//@actions.8/@body/@locals.2"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="243">
              <target variable="#//@stateVars.3"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.8/@body/@locals.2"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="8">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt"/>
              </value>
            </instructions>
          </thenBlocks>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="237" name="isSchedulable_advance">
      <locals assignable="true" defs="#//@actions.8/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.8/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.8/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.8/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>advance</identifiers>
    </tag>
  </actions>
  <fsm initialState="#//@fsm/@vertices.5">
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.5" target="#//@fsm/@vertices.2"
        actions="#//@actions.0"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.5" target="#//@fsm/@vertices.3"
        actions="#//@actions.2"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.5" target="#//@fsm/@vertices.0"
        actions="#//@actions.3"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.5" target="#//@fsm/@vertices.4"
        actions="#//@actions.4"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.2" target="#//@fsm/@vertices.1"
        actions="#//@actions.1"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.1" target="#//@fsm/@vertices.5"
        actions="#//@actions.1"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.4" target="#//@fsm/@vertices.6"
        actions="#//@actions.6"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.3" target="#//@fsm/@vertices.6"
        actions="#//@actions.5"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.6" target="#//@fsm/@vertices.0"
        actions="#//@actions.7"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.0" target="#//@fsm/@vertices.5"
        actions="#//@actions.8"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="advance" incoming="#//@fsm/@edges.2 #//@fsm/@edges.8"
        outgoing="#//@fsm/@edges.9"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="geth" incoming="#//@fsm/@edges.4"
        outgoing="#//@fsm/@edges.5"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="getw" incoming="#//@fsm/@edges.0"
        outgoing="#//@fsm/@edges.4"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="inter" incoming="#//@fsm/@edges.1"
        outgoing="#//@fsm/@edges.7"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="intra" incoming="#//@fsm/@edges.3"
        outgoing="#//@fsm/@edges.6"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="read" incoming="#//@fsm/@edges.5 #//@fsm/@edges.9"
        outgoing="#//@fsm/@edges.0 #//@fsm/@edges.1 #//@fsm/@edges.2 #//@fsm/@edges.3"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="sat" incoming="#//@fsm/@edges.6 #//@fsm/@edges.7"
        outgoing="#//@fsm/@edges.8"/>
  </fsm>
  <inputs label="BTYPE">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
  </inputs>
  <inputs label="A">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
  </inputs>
  <inputs label="B">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
  </inputs>
  <inputs label="C">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
  </inputs>
  <inputs label="IN">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
  </inputs>
  <inputs label="QP">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
  </inputs>
  <outputs label="OUT">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
  </outputs>
  <outputs label="PTR">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
  </outputs>
  <outputs label="START">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="3"/>
  </outputs>
  <outputs label="SIGNED">
    <type xsi:type="net.sf.orcc.ir:TypeBool"/>
  </outputs>
  <outputs label="QUANT">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
  </outputs>
  <procs lineNumber="109" name="abs">
    <locals assignable="true" defs="#//@procs.0/@blocks.0/@thenBlocks.0/@instructions.0/@target #//@procs.0/@blocks.0/@elseBlocks.0/@instructions.0/@target"
        name="tmp_if" uses="#//@procs.0/@blocks.1/@instructions.0/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="110">
      <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
        <e1 xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.0/@parameters.0/@variable"/>
        </e1>
        <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
        </e2>
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </condition>
      <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="113">
          <target variable="#//@procs.0/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.0/@parameters.0/@variable"/>
          </value>
        </instructions>
      </elseBlocks>
      <joinBlock/>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="111">
          <target variable="#//@procs.0/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprUnary" op="MINUS">
            <expr xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.0/@parameters.0/@variable"/>
            </expr>
            <type xsi:type="net.sf.orcc.ir:TypeInt"/>
          </value>
        </instructions>
      </thenBlocks>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstReturn">
        <value xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.0/@locals.0"/>
        </value>
      </instructions>
    </blocks>
    <parameters>
      <variable assignable="true" lineNumber="109" name="x" uses="#//@procs.0/@blocks.0/@condition/@e1/@use #//@procs.0/@blocks.0/@thenBlocks.0/@instructions.0/@value/@expr/@use #//@procs.0/@blocks.0/@elseBlocks.0/@instructions.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </variable>
    </parameters>
    <returnType xsi:type="net.sf.orcc.ir:TypeInt"/>
  </procs>
  <procs lineNumber="118" name="dc_scaler">
    <locals assignable="true" defs="#//@procs.1/@blocks.0/@instructions.0/@target"
        name="local_comp" uses="#//@procs.1/@blocks.1/@condition/@e1/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
    </locals>
    <locals assignable="true" defs="#//@procs.1/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.0/@target #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.1/@target #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.1/@target #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.1/@target #//@procs.1/@blocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.0/@target #//@procs.1/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.1/@target #//@procs.1/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.1/@target"
        name="tmp_if" uses="#//@procs.1/@blocks.2/@instructions.0/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
    </locals>
    <locals assignable="true" defs="#//@procs.1/@blocks.1/@thenBlocks.0/@instructions.0/@target #//@procs.1/@blocks.1/@thenBlocks.0/@instructions.1/@target #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.0/@target #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.1/@target #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.0/@target #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.0/@target #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.1/@target #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.0/@target #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.0/@target #//@procs.1/@blocks.1/@elseBlocks.0/@instructions.0/@target #//@procs.1/@blocks.1/@elseBlocks.0/@instructions.1/@target #//@procs.1/@blocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.0/@target #//@procs.1/@blocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.1/@target #//@procs.1/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.0/@target #//@procs.1/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.0/@target"
        name="local_s_QP" uses="#//@procs.1/@blocks.1/@thenBlocks.1/@condition/@e1/@e1/@use #//@procs.1/@blocks.1/@thenBlocks.1/@condition/@e2/@e1/@use #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.1/@condition/@e1/@e1/@use #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.1/@condition/@e2/@e1/@use #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.1/@value/@e2/@use #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.1/@elseBlocks.1/@condition/@e1/@e1/@use #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.1/@elseBlocks.1/@condition/@e2/@e1/@use #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.1/@value/@e1/@use #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.1/@value/@e1/@e2/@use #//@procs.1/@blocks.1/@elseBlocks.1/@condition/@e1/@e1/@use #//@procs.1/@blocks.1/@elseBlocks.1/@condition/@e2/@e1/@use #//@procs.1/@blocks.1/@elseBlocks.1/@elseBlocks.1/@condition/@e1/@e1/@use #//@procs.1/@blocks.1/@elseBlocks.1/@elseBlocks.1/@condition/@e2/@e1/@use #//@procs.1/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.1/@value/@e1/@e1/@use #//@procs.1/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.1/@value/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
    </locals>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.5"/>
        <target variable="#//@procs.1/@locals.0"/>
      </instructions>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="119">
      <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
        <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.1/@locals.0"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="4">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
        </e1>
        <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
        </e2>
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </condition>
      <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@procs.1/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@procs.1/@locals.2"/>
        </instructions>
      </elseBlocks>
      <elseBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="136">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LOGIC_AND">
          <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="GT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.1/@locals.2"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.1/@locals.2"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="5">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.0"/>
            <target variable="#//@procs.1/@locals.2"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.0"/>
            <target variable="#//@procs.1/@locals.2"/>
          </instructions>
        </elseBlocks>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="139">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LOGIC_AND">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="GT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.1/@locals.2"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="4">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.1/@locals.2"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="25">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="5"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.0"/>
              <target variable="#//@procs.1/@locals.2"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="142">
              <target variable="#//@procs.1/@locals.1"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.1/@locals.2"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="6">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
              </value>
            </instructions>
          </elseBlocks>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.0"/>
              <target variable="#//@procs.1/@locals.2"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="140">
              <target variable="#//@procs.1/@locals.1"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
                <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@procs.1/@locals.2"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="13">
                    <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="7"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="7"/>
              </value>
            </instructions>
          </thenBlocks>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="137">
            <target variable="#//@procs.1/@locals.1"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="8">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
            </value>
          </instructions>
        </thenBlocks>
      </elseBlocks>
      <joinBlock/>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@procs.1/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@procs.1/@locals.2"/>
        </instructions>
      </thenBlocks>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="121">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LOGIC_AND">
          <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="GT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.1/@locals.2"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.1/@locals.2"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="5">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.0"/>
            <target variable="#//@procs.1/@locals.2"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.0"/>
            <target variable="#//@procs.1/@locals.2"/>
          </instructions>
        </elseBlocks>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="124">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LOGIC_AND">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="GT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.1/@locals.2"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="4">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.1/@locals.2"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="9">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.0"/>
              <target variable="#//@procs.1/@locals.2"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.0"/>
              <target variable="#//@procs.1/@locals.2"/>
            </instructions>
          </elseBlocks>
          <elseBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="127">
            <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LOGIC_AND">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="GT">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.1/@locals.2"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="8">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeBool"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.1/@locals.2"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="25">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="5"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeBool"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </condition>
            <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstLoad">
                <source variable="#//@stateVars.0"/>
                <target variable="#//@procs.1/@locals.2"/>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="130">
                <target variable="#//@procs.1/@locals.1"/>
                <value xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
                  <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="TIMES">
                    <e1 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
                      <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
                    </e1>
                    <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                      <use variable="#//@procs.1/@locals.2"/>
                    </e2>
                    <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="16">
                    <type xsi:type="net.sf.orcc.ir:TypeUint" size="5"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
                </value>
              </instructions>
            </elseBlocks>
            <joinBlock/>
            <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstLoad">
                <source variable="#//@stateVars.0"/>
                <target variable="#//@procs.1/@locals.2"/>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="128">
                <target variable="#//@procs.1/@locals.1"/>
                <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@procs.1/@locals.2"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="8">
                    <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="7"/>
                </value>
              </instructions>
            </thenBlocks>
          </elseBlocks>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.0"/>
              <target variable="#//@procs.1/@locals.2"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="125">
              <target variable="#//@procs.1/@locals.1"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="TIMES">
                <e1 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.1/@locals.2"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
              </value>
            </instructions>
          </thenBlocks>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="122">
            <target variable="#//@procs.1/@locals.1"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="8">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
            </value>
          </instructions>
        </thenBlocks>
      </thenBlocks>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstReturn">
        <value xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.1/@locals.1"/>
        </value>
      </instructions>
    </blocks>
    <returnType xsi:type="net.sf.orcc.ir:TypeInt" size="7"/>
  </procs>
  <procs lineNumber="214" name="saturate">
    <locals defs="#//@procs.2/@blocks.0/@instructions.0/@target" lineNumber="216"
        name="minus" uses="#//@procs.2/@blocks.1/@condition/@use">
      <type xsi:type="net.sf.orcc.ir:TypeBool"/>
    </locals>
    <locals defs="#//@procs.2/@blocks.0/@instructions.1/@target" lineNumber="217"
        name="plus" uses="#//@procs.2/@blocks.1/@elseBlocks.0/@condition/@use">
      <type xsi:type="net.sf.orcc.ir:TypeBool"/>
    </locals>
    <locals assignable="true" defs="#//@procs.2/@blocks.1/@thenBlocks.0/@instructions.0/@target #//@procs.2/@blocks.1/@elseBlocks.0/@thenBlocks.0/@instructions.0/@target #//@procs.2/@blocks.1/@elseBlocks.0/@elseBlocks.0/@instructions.0/@target"
        name="tmp_if" uses="#//@procs.2/@blocks.2/@instructions.0/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="216">
        <target variable="#//@procs.2/@locals.0"/>
        <value xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.2/@parameters.0/@variable"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprUnary" op="MINUS">
            <expr xsi:type="net.sf.orcc.ir:ExprInt" value="2048">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="12"/>
            </expr>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="217">
        <target variable="#//@procs.2/@locals.1"/>
        <value xsi:type="net.sf.orcc.ir:ExprBinary" op="GT">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.2/@parameters.0/@variable"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2047">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </value>
      </instructions>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="219">
      <condition xsi:type="net.sf.orcc.ir:ExprVar">
        <use variable="#//@procs.2/@locals.0"/>
      </condition>
      <elseBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="222">
        <condition xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.2/@locals.1"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="225">
            <target variable="#//@procs.2/@locals.2"/>
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.2/@parameters.0/@variable"/>
            </value>
          </instructions>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="223">
            <target variable="#//@procs.2/@locals.2"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="2047">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
            </value>
          </instructions>
        </thenBlocks>
      </elseBlocks>
      <joinBlock/>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="220">
          <target variable="#//@procs.2/@locals.2"/>
          <value xsi:type="net.sf.orcc.ir:ExprUnary" op="MINUS">
            <expr xsi:type="net.sf.orcc.ir:ExprInt" value="2048">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="12"/>
            </expr>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
          </value>
        </instructions>
      </thenBlocks>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstReturn">
        <value xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.2/@locals.2"/>
        </value>
      </instructions>
    </blocks>
    <parameters>
      <variable assignable="true" lineNumber="214" name="x" uses="#//@procs.2/@blocks.0/@instructions.0/@value/@e1/@use #//@procs.2/@blocks.0/@instructions.1/@value/@e1/@use #//@procs.2/@blocks.1/@elseBlocks.0/@elseBlocks.0/@instructions.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </variable>
    </parameters>
    <returnType xsi:type="net.sf.orcc.ir:TypeInt"/>
  </procs>
  <stateVars assignable="true" defs="#//@actions.2/@body/@blocks.0/@instructions.3/@target #//@actions.3/@body/@blocks.0/@instructions.2/@target #//@actions.4/@body/@blocks.0/@instructions.13/@target"
      lineNumber="61" name="s_QP" uses="#//@procs.1/@blocks.1/@thenBlocks.0/@instructions.0/@source #//@procs.1/@blocks.1/@thenBlocks.0/@instructions.1/@source #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.0/@source #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.1/@source #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.0/@source #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.0/@source #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.1/@source #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.0/@source #//@procs.1/@blocks.1/@thenBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.0/@source #//@procs.1/@blocks.1/@elseBlocks.0/@instructions.0/@source #//@procs.1/@blocks.1/@elseBlocks.0/@instructions.1/@source #//@procs.1/@blocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.0/@source #//@procs.1/@blocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.1/@source #//@procs.1/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.0/@source #//@procs.1/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.0/@source #//@actions.2/@body/@blocks.0/@instructions.7/@source #//@actions.4/@body/@blocks.6/@instructions.3/@source #//@actions.5/@body/@blocks.0/@instructions.1/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
  </stateVars>
  <stateVars lineNumber="63" name="round" uses="#//@actions.5/@body/@blocks.0/@instructions.3/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="0">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="2"/>
  </stateVars>
  <stateVars lineNumber="69" name="BUF_SIZE" uses="#//@actions.8/@body/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.0/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="112">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="7"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.2/@target #//@actions.8/@body/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.1/@target #//@actions.8/@body/@blocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.1/@target"
      lineNumber="71" name="ptr" uses="#//@actions.7/@body/@blocks.0/@instructions.2/@source #//@actions.8/@body/@blocks.1/@thenBlocks.0/@instructions.1/@source #//@actions.8/@body/@blocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.0/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="8">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.7/@body/@blocks.0/@instructions.4/@target"
      lineNumber="75" name="dc_buf" uses="#//@actions.4/@body/@blocks.0/@instructions.5/@source #//@actions.4/@body/@blocks.0/@instructions.6/@source #//@actions.4/@body/@blocks.0/@instructions.7/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprList">
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
      <value xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </value>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeList">
      <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="112">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="7"/>
      </sizeExpr>
      <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
    </type>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.1/@target #//@actions.8/@body/@blocks.0/@instructions.1/@target #//@actions.8/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target"
      lineNumber="77" name="comp" uses="#//@procs.1/@blocks.0/@instructions.0/@source #//@actions.7/@body/@blocks.0/@instructions.3/@source #//@actions.8/@body/@blocks.0/@instructions.0/@source #//@actions.8/@body/@blocks.0/@instructions.2/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="0">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.4/@body/@blocks.2/@instructions.2/@target"
      lineNumber="148" name="dc_pred" uses="#//@actions.6/@body/@blocks.0/@instructions.1/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.4/@body/@blocks.0/@instructions.15/@target"
      lineNumber="150" name="scaler" uses="#//@actions.4/@body/@blocks.2/@instructions.0/@source #//@actions.4/@body/@blocks.2/@instructions.1/@source #//@actions.4/@body/@blocks.4/@instructions.0/@source #//@actions.6/@body/@blocks.0/@instructions.2/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="7"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.2/@body/@blocks.0/@instructions.2/@target #//@actions.4/@body/@blocks.4/@instructions.1/@target"
      lineNumber="152" name="is_signed" uses="#//@actions.4/@body/@blocks.6/@instructions.1/@source #//@actions.5/@body/@blocks.1/@elseBlocks.0/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeBool"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.5/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target #//@actions.5/@body/@blocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.0/@target #//@actions.5/@body/@blocks.1/@elseBlocks.1/@elseBlocks.0/@thenBlocks.0/@instructions.0/@target #//@actions.5/@body/@blocks.1/@elseBlocks.1/@elseBlocks.0/@elseBlocks.0/@instructions.0/@target #//@actions.6/@body/@blocks.0/@instructions.3/@target"
      lineNumber="186" name="dc_val" uses="#//@actions.7/@body/@blocks.0/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="13"/>
  </stateVars>
</net.sf.orcc.df:Actor>
