<?xml version="1.0" encoding="UTF-8"?>
<net.sf.orcc.df:Actor xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:net.sf.orcc.df="http://orcc.sf.net/model/2011/Df" xmlns:net.sf.orcc.ir="http://orcc.sf.net/model/2011/Ir"
    label="mpeg4sp.SearchWindow" fileName="/StreamBench/src/mpeg4sp/SearchWindow.cal"
    lineNumber="47">
  <actions>
    <body lineNumber="99" name="cmd_newVop">
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.0/@target"
          lineNumber="99" name="cmd" uses="#//@actions.0/@body/@blocks.0/@instructions.2/@value/@e1/@e1/@use #//@actions.0/@body/@blocks.0/@instructions.4/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.1/@target"
          name="local_ROUND_TYPE" uses="#//@actions.0/@body/@blocks.0/@instructions.2/@value/@e1/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.3/@target"
          name="local_INTRA" uses="#//@actions.0/@body/@blocks.0/@instructions.4/@value/@e1/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="99">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.0/@inputPattern/@variables.0"/>
          <target variable="#//@actions.0/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@actions.0/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="103">
          <target variable="#//@stateVars.9"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.0"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.24"/>
          <target variable="#//@actions.0/@body/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="104">
          <target variable="#//@stateVars.7"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.0"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.2"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="105">
          <target variable="#//@stateVars.11"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="106">
          <target variable="#//@stateVars.8"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="108">
          <target variable="#//@stateVars.14"/>
          <value xsi:type="net.sf.orcc.ir:ExprUnary" op="MINUS">
            <expr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </expr>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="2"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="110">
          <target variable="#//@stateVars.15"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="111">
          <target variable="#//@stateVars.17"/>
          <value xsi:type="net.sf.orcc.ir:ExprUnary" op="MINUS">
            <expr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </expr>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="2"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="112">
          <target variable="#//@stateVars.10"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.1">
      <numTokensMap key="#//@inputs.1" value="1"/>
      <portToVarMap key="#//@inputs.1" value="#//@actions.0/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="99" name="BTYPE" uses="#//@actions.0/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.0/@inputPattern/@variables.0" value="#//@inputs.1"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern ports="#//@inputs.1">
      <numTokensMap key="#//@inputs.1" value="1"/>
      <portToVarMap key="#//@inputs.1" value="#//@actions.0/@peekPattern/@variables.0"/>
      <variables assignable="true" lineNumber="99" name="BTYPE" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.0/@peekPattern/@variables.0" value="#//@inputs.1"/>
    </peekPattern>
    <scheduler lineNumber="99" name="isSchedulable_cmd_newVop">
      <locals assignable="true" defs="#//@actions.0/@scheduler/@blocks.0/@instructions.2/@target"
          name="result" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.3/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@scheduler/@blocks.0/@instructions.0/@target"
          lineNumber="99" name="cmd" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.2/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@scheduler/@blocks.0/@instructions.1/@target"
          name="local_NEWVOP" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.2/@value/@e1/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="99">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.0/@peekPattern/@variables.0"/>
          <target variable="#//@actions.0/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.23"/>
          <target variable="#//@actions.0/@scheduler/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.0/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@scheduler/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@scheduler/@locals.2"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>cmd</identifiers>
      <identifiers>newVop</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="127" name="getw">
      <locals assignable="true" defs="#//@actions.1/@body/@blocks.0/@instructions.0/@target"
          lineNumber="127" name="w" uses="#//@actions.1/@body/@blocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="127">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.1/@inputPattern/@variables.0"/>
          <target variable="#//@actions.1/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="129">
          <target variable="#//@stateVars.12"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.1/@body/@locals.0"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.1">
      <numTokensMap key="#//@inputs.1" value="1"/>
      <portToVarMap key="#//@inputs.1" value="#//@actions.1/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="127" name="BTYPE" uses="#//@actions.1/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.1/@inputPattern/@variables.0" value="#//@inputs.1"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="127" name="isSchedulable_getw">
      <locals assignable="true" defs="#//@actions.1/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.1/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.1/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.1/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>getw</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="132" name="geth">
      <locals assignable="true" defs="#//@actions.2/@body/@blocks.0/@instructions.0/@target"
          lineNumber="132" name="h" uses="#//@actions.2/@body/@blocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="132">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.2/@inputPattern/@variables.0"/>
          <target variable="#//@actions.2/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="134">
          <target variable="#//@stateVars.13"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.2/@body/@locals.0"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.1">
      <numTokensMap key="#//@inputs.1" value="1"/>
      <portToVarMap key="#//@inputs.1" value="#//@actions.2/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="132" name="BTYPE" uses="#//@actions.2/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.2/@inputPattern/@variables.0" value="#//@inputs.1"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="132" name="isSchedulable_geth">
      <locals assignable="true" defs="#//@actions.2/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.2/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.2/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.2/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>geth</identifiers>
    </tag>
  </actions>
  <actions>
    <attributes name="IsPrecededBy" stringValue="cmd_newVop"/>
    <body lineNumber="137" name="cmd_motion">
      <locals assignable="true" defs="#//@actions.3/@body/@blocks.0/@instructions.0/@target"
          lineNumber="137" name="cmd">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="137">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.3/@inputPattern/@variables.0"/>
          <target variable="#//@actions.3/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="141">
          <target variable="#//@stateVars.8"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.1">
      <numTokensMap key="#//@inputs.1" value="1"/>
      <portToVarMap key="#//@inputs.1" value="#//@actions.3/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="137" name="BTYPE" uses="#//@actions.3/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.3/@inputPattern/@variables.0" value="#//@inputs.1"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern ports="#//@inputs.1">
      <numTokensMap key="#//@inputs.1" value="1"/>
      <portToVarMap key="#//@inputs.1" value="#//@actions.3/@peekPattern/@variables.0"/>
      <variables assignable="true" lineNumber="137" name="BTYPE" uses="#//@actions.3/@scheduler/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.3/@peekPattern/@variables.0" value="#//@inputs.1"/>
    </peekPattern>
    <scheduler lineNumber="137" name="isSchedulable_cmd_motion">
      <locals assignable="true" defs="#//@actions.3/@scheduler/@blocks.0/@instructions.5/@target"
          name="result" uses="#//@actions.3/@scheduler/@blocks.0/@instructions.6/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.3/@scheduler/@blocks.0/@instructions.0/@target"
          lineNumber="137" name="cmd" uses="#//@actions.3/@scheduler/@blocks.0/@instructions.5/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <locals assignable="true" defs="#//@actions.3/@scheduler/@blocks.0/@instructions.1/@target #//@actions.3/@scheduler/@blocks.0/@instructions.3/@target"
          name="local_INTER" uses="#//@actions.3/@scheduler/@blocks.0/@instructions.5/@value/@e1/@e2/@e1/@use #//@actions.3/@scheduler/@blocks.0/@instructions.5/@value/@e2/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.3/@scheduler/@blocks.0/@instructions.2/@target #//@actions.3/@scheduler/@blocks.0/@instructions.4/@target"
          name="local_MOTION" uses="#//@actions.3/@scheduler/@blocks.0/@instructions.5/@value/@e1/@e2/@e2/@use #//@actions.3/@scheduler/@blocks.0/@instructions.5/@value/@e2/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="137">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.3/@peekPattern/@variables.0"/>
          <target variable="#//@actions.3/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.25"/>
          <target variable="#//@actions.3/@scheduler/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.26"/>
          <target variable="#//@actions.3/@scheduler/@locals.3"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.25"/>
          <target variable="#//@actions.3/@scheduler/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.26"/>
          <target variable="#//@actions.3/@scheduler/@locals.3"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.3/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.3/@scheduler/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="BITOR">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.3/@scheduler/@locals.2"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.3/@scheduler/@locals.3"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="BITOR">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.3/@scheduler/@locals.2"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.3/@scheduler/@locals.3"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.3/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>cmd</identifiers>
      <identifiers>motion</identifiers>
    </tag>
  </actions>
  <actions>
    <attributes name="IsPrecededBy" stringValue="cmd_motion"/>
    <body lineNumber="144" name="cmd_noMotion">
      <locals assignable="true" defs="#//@actions.4/@body/@blocks.0/@instructions.0/@target"
          lineNumber="144" name="cmd">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="144">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.4/@inputPattern/@variables.0"/>
          <target variable="#//@actions.4/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="148">
          <target variable="#//@stateVars.18"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="149">
          <target variable="#//@stateVars.19"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="150">
          <target variable="#//@stateVars.8"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="144">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.4/@outputPattern/@variables.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.1">
      <numTokensMap key="#//@inputs.1" value="1"/>
      <portToVarMap key="#//@inputs.1" value="#//@actions.4/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="144" name="BTYPE" uses="#//@actions.4/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.4/@inputPattern/@variables.0" value="#//@inputs.1"/>
    </inputPattern>
    <outputPattern ports="#//@outputs.1">
      <numTokensMap key="#//@outputs.1" value="1"/>
      <portToVarMap key="#//@outputs.1" value="#//@actions.4/@outputPattern/@variables.0"/>
      <variables assignable="true" defs="#//@actions.4/@body/@blocks.0/@instructions.4/@target"
          lineNumber="144" name="FLAGS">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.4/@outputPattern/@variables.0" value="#//@outputs.1"/>
    </outputPattern>
    <peekPattern ports="#//@inputs.1">
      <numTokensMap key="#//@inputs.1" value="1"/>
      <portToVarMap key="#//@inputs.1" value="#//@actions.4/@peekPattern/@variables.0"/>
      <variables assignable="true" lineNumber="144" name="BTYPE" uses="#//@actions.4/@scheduler/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.4/@peekPattern/@variables.0" value="#//@inputs.1"/>
    </peekPattern>
    <scheduler lineNumber="144" name="isSchedulable_cmd_noMotion">
      <locals assignable="true" defs="#//@actions.4/@scheduler/@blocks.0/@instructions.3/@target"
          name="result" uses="#//@actions.4/@scheduler/@blocks.0/@instructions.4/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.4/@scheduler/@blocks.0/@instructions.0/@target"
          lineNumber="144" name="cmd" uses="#//@actions.4/@scheduler/@blocks.0/@instructions.3/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <locals assignable="true" defs="#//@actions.4/@scheduler/@blocks.0/@instructions.1/@target #//@actions.4/@scheduler/@blocks.0/@instructions.2/@target"
          name="local_INTER" uses="#//@actions.4/@scheduler/@blocks.0/@instructions.3/@value/@e1/@e2/@use #//@actions.4/@scheduler/@blocks.0/@instructions.3/@value/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="144">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.4/@peekPattern/@variables.0"/>
          <target variable="#//@actions.4/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.25"/>
          <target variable="#//@actions.4/@scheduler/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.25"/>
          <target variable="#//@actions.4/@scheduler/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.4/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.4/@scheduler/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.4/@scheduler/@locals.2"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.4/@scheduler/@locals.2"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.4/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>cmd</identifiers>
      <identifiers>noMotion</identifiers>
    </tag>
  </actions>
  <actions>
    <attributes name="IsPrecededBy" stringValue="cmd_noMotion"/>
    <body lineNumber="153" name="cmd_other">
      <locals assignable="true" defs="#//@actions.5/@body/@blocks.0/@instructions.0/@target"
          lineNumber="153" name="cmd">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="153">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.5/@inputPattern/@variables.0"/>
          <target variable="#//@actions.5/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="155">
          <target variable="#//@stateVars.8"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.1">
      <numTokensMap key="#//@inputs.1" value="1"/>
      <portToVarMap key="#//@inputs.1" value="#//@actions.5/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="153" name="BTYPE" uses="#//@actions.5/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.5/@inputPattern/@variables.0" value="#//@inputs.1"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="153" name="isSchedulable_cmd_other">
      <locals assignable="true" defs="#//@actions.5/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.5/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.5/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.5/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>cmd</identifiers>
      <identifiers>other</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="158" name="bypass">
      <locals assignable="true" defs="#//@actions.6/@body/@blocks.0/@instructions.0/@target"
          name="local_comp" uses="#//@actions.6/@body/@blocks.1/@condition/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <locals assignable="true" defs="#//@actions.6/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target"
          name="local_mbx_ptr" uses="#//@actions.6/@body/@blocks.1/@thenBlocks.0/@instructions.1/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.11"/>
          <target variable="#//@actions.6/@body/@locals.0"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="162">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.6/@body/@locals.0"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.16"/>
            <target variable="#//@actions.6/@body/@locals.1"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="164">
            <target variable="#//@stateVars.16"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.6/@body/@locals.1"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="5"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="7">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="158" name="isSchedulable_bypass">
      <locals assignable="true" defs="#//@actions.6/@scheduler/@blocks.0/@instructions.6/@target"
          name="result" uses="#//@actions.6/@scheduler/@blocks.0/@instructions.7/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.6/@scheduler/@blocks.0/@instructions.0/@target"
          name="local_prediction_is_INTRA" uses="#//@actions.6/@scheduler/@blocks.0/@instructions.6/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.6/@scheduler/@blocks.0/@instructions.1/@target"
          name="local_comp" uses="#//@actions.6/@scheduler/@blocks.0/@instructions.6/@value/@e1/@e2/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <locals assignable="true" defs="#//@actions.6/@scheduler/@blocks.0/@instructions.2/@target"
          name="local_mbx" uses="#//@actions.6/@scheduler/@blocks.0/@instructions.6/@value/@e2/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.6/@scheduler/@blocks.0/@instructions.3/@target"
          name="local_mbw_max" uses="#//@actions.6/@scheduler/@blocks.0/@instructions.6/@value/@e2/@e1/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.6/@scheduler/@blocks.0/@instructions.4/@target"
          name="local_mby" uses="#//@actions.6/@scheduler/@blocks.0/@instructions.6/@value/@e2/@e2/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.6/@scheduler/@blocks.0/@instructions.5/@target"
          name="local_mbh_max" uses="#//@actions.6/@scheduler/@blocks.0/@instructions.6/@value/@e2/@e2/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.7"/>
          <target variable="#//@actions.6/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.11"/>
          <target variable="#//@actions.6/@scheduler/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.14"/>
          <target variable="#//@actions.6/@scheduler/@locals.3"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.12"/>
          <target variable="#//@actions.6/@scheduler/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.15"/>
          <target variable="#//@actions.6/@scheduler/@locals.5"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.13"/>
          <target variable="#//@actions.6/@scheduler/@locals.6"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.6/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="LOGIC_OR">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="LOGIC_OR">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.6/@scheduler/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.6/@scheduler/@locals.2"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeBool"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="LOGIC_AND">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.6/@scheduler/@locals.3"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.6/@scheduler/@locals.4"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeBool"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.6/@scheduler/@locals.5"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.6/@scheduler/@locals.6"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeBool"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.6/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>bypass</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="168" name="next">
      <locals assignable="true" defs="#//@actions.7/@body/@blocks.0/@instructions.0/@target #//@actions.7/@body/@blocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.1/@target #//@actions.7/@body/@blocks.1/@elseBlocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.0/@target"
          name="local_mbx" uses="#//@actions.7/@body/@blocks.1/@condition/@e1/@use #//@actions.7/@body/@blocks.1/@elseBlocks.1/@thenBlocks.1/@condition/@e1/@use #//@actions.7/@body/@blocks.1/@elseBlocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.7/@body/@blocks.1/@elseBlocks.0/@instructions.0/@target #//@actions.7/@body/@blocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.0/@target"
          name="local_comp" uses="#//@actions.7/@body/@blocks.1/@elseBlocks.1/@condition/@e1/@use #//@actions.7/@body/@blocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <locals assignable="true" defs="#//@actions.7/@body/@blocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.2/@target"
          name="local_mbw_max" uses="#//@actions.7/@body/@blocks.1/@elseBlocks.1/@thenBlocks.1/@condition/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.7/@body/@blocks.1/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.1/@target"
          name="local_mby" uses="#//@actions.7/@body/@blocks.1/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.2/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.14"/>
          <target variable="#//@actions.7/@body/@locals.0"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="170">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.7/@body/@locals.0"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.11"/>
            <target variable="#//@actions.7/@body/@locals.1"/>
          </instructions>
        </elseBlocks>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="173">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.7/@body/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="5">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.11"/>
              <target variable="#//@actions.7/@body/@locals.1"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="182">
              <target variable="#//@stateVars.11"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.7/@body/@locals.1"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="5"/>
              </value>
            </instructions>
          </elseBlocks>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="174">
              <target variable="#//@stateVars.11"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.14"/>
              <target variable="#//@actions.7/@body/@locals.0"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.12"/>
              <target variable="#//@actions.7/@body/@locals.2"/>
            </instructions>
          </thenBlocks>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="175">
            <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.7/@body/@locals.0"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.7/@body/@locals.2"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </condition>
            <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstLoad">
                <source variable="#//@stateVars.14"/>
                <target variable="#//@actions.7/@body/@locals.0"/>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="179">
                <target variable="#//@stateVars.14"/>
                <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.7/@body/@locals.0"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                    <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
                </value>
              </instructions>
            </elseBlocks>
            <joinBlock/>
            <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="176">
                <target variable="#//@stateVars.14"/>
                <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </value>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstLoad">
                <source variable="#//@stateVars.15"/>
                <target variable="#//@actions.7/@body/@locals.3"/>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="177">
                <target variable="#//@stateVars.15"/>
                <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.7/@body/@locals.3"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                    <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
                </value>
              </instructions>
            </thenBlocks>
          </thenBlocks>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="171">
            <target variable="#//@stateVars.14"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="168" name="isSchedulable_next">
      <locals assignable="true" defs="#//@actions.7/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.7/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.7/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.7/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>next</identifiers>
    </tag>
  </actions>
  <actions>
    <attributes name="IsPrecededBy" stringValue="bypass"/>
    <body lineNumber="187" name="done">
      <locals assignable="true" defs="#//@actions.8/@body/@blocks.0/@instructions.0/@target"
          name="local_mbx_ptr" uses="#//@actions.8/@body/@blocks.0/@instructions.1/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.16"/>
          <target variable="#//@actions.8/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="191">
          <target variable="#//@stateVars.16"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.8/@body/@locals.0"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="5"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="7">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="192">
          <target variable="#//@stateVars.17"/>
          <value xsi:type="net.sf.orcc.ir:ExprUnary" op="MINUS">
            <expr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </expr>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="2"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="193">
          <target variable="#//@stateVars.10"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="187" name="isSchedulable_done">
      <locals assignable="true" defs="#//@actions.8/@scheduler/@blocks.0/@instructions.1/@target"
          name="result" uses="#//@actions.8/@scheduler/@blocks.0/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.8/@scheduler/@blocks.0/@instructions.0/@target"
          name="local_y_offset" uses="#//@actions.8/@scheduler/@blocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="3"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.17"/>
          <target variable="#//@actions.8/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.8/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.8/@scheduler/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.8/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>done</identifiers>
    </tag>
  </actions>
  <actions>
    <attributes name="IsPrecededBy" stringValue="done"/>
    <body lineNumber="198" name="read_luma">
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.0/@instructions.0/@target"
          lineNumber="198" name="d" uses="#//@actions.9/@body/@blocks.4/@instructions.4/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.0/@instructions.1/@target #//@actions.9/@body/@blocks.0/@instructions.3/@target #//@actions.9/@body/@blocks.2/@instructions.3/@target #//@actions.9/@body/@blocks.4/@instructions.5/@target"
          name="local_count" uses="#//@actions.9/@body/@blocks.0/@instructions.2/@arguments.0/@value/@e1/@use #//@actions.9/@body/@blocks.0/@instructions.4/@arguments.0/@value/@e1/@use #//@actions.9/@body/@blocks.2/@instructions.4/@arguments.0/@value/@use #//@actions.9/@body/@blocks.4/@instructions.6/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals defs="#//@actions.9/@body/@blocks.0/@instructions.2/@target" lineNumber="202"
          name="comp_local" uses="#//@actions.9/@body/@blocks.1/@condition/@e1/@e1/@use #//@actions.9/@body/@blocks.3/@condition/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="3"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.0/@instructions.4/@target"
          name="tmp_maskBits" uses="#//@actions.9/@body/@blocks.2/@instructions.2/@arguments.0/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target #//@actions.9/@body/@blocks.1/@elseBlocks.0/@instructions.0/@target"
          name="tmp_if" uses="#//@actions.9/@body/@blocks.2/@instructions.2/@arguments.0/@value/@e1/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.2/@instructions.0/@target"
          name="local_y_offset" uses="#//@actions.9/@body/@blocks.2/@instructions.2/@arguments.0/@value/@e2/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="3"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.2/@instructions.1/@target"
          name="local_LUMA_Y_BITS" uses="#//@actions.9/@body/@blocks.2/@instructions.2/@arguments.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals defs="#//@actions.9/@body/@blocks.2/@instructions.2/@target" lineNumber="203"
          name="y" uses="#//@actions.9/@body/@blocks.4/@instructions.4/@indexes.0/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="7"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.2/@instructions.4/@target"
          name="tmp_maskBits0" uses="#//@actions.9/@body/@blocks.4/@instructions.2/@arguments.0/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.3/@thenBlocks.0/@instructions.0/@target #//@actions.9/@body/@blocks.3/@elseBlocks.0/@instructions.0/@target"
          name="tmp_if0" uses="#//@actions.9/@body/@blocks.4/@instructions.2/@arguments.0/@value/@e1/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.4/@instructions.0/@target"
          name="local_mbx_ptr" uses="#//@actions.9/@body/@blocks.4/@instructions.2/@arguments.0/@value/@e2/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@body/@blocks.4/@instructions.1/@target #//@actions.9/@body/@blocks.4/@instructions.3/@target"
          name="local_LUMA_X_BITS" uses="#//@actions.9/@body/@blocks.4/@instructions.2/@arguments.1/@value/@use #//@actions.9/@body/@blocks.4/@instructions.4/@indexes.0/@e1/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals defs="#//@actions.9/@body/@blocks.4/@instructions.2/@target" lineNumber="206"
          name="x" uses="#//@actions.9/@body/@blocks.4/@instructions.4/@indexes.0/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="5"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="198">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.9/@inputPattern/@variables.0"/>
          <target variable="#//@actions.9/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.10"/>
          <target variable="#//@actions.9/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="202" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.9/@body/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="4">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="2">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </value>
          </arguments>
          <target variable="#//@actions.9/@body/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.10"/>
          <target variable="#//@actions.9/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="204" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.9/@body/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="3">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </value>
          </arguments>
          <target variable="#//@actions.9/@body/@locals.3"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="205">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
          <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.9/@body/@locals.2"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="3"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="205">
            <target variable="#//@actions.9/@body/@locals.4"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="205">
            <target variable="#//@actions.9/@body/@locals.4"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="8">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.17"/>
          <target variable="#//@actions.9/@body/@locals.5"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.2"/>
          <target variable="#//@actions.9/@body/@locals.6"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="204" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.9/@body/@locals.3"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.9/@body/@locals.4"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.9/@body/@locals.5"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="4">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="10"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="34"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.9/@body/@locals.6"/>
            </value>
          </arguments>
          <target variable="#//@actions.9/@body/@locals.7"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.10"/>
          <target variable="#//@actions.9/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="207" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.9/@body/@locals.1"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
          <target variable="#//@actions.9/@body/@locals.8"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="208">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
          <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.9/@body/@locals.2"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="2"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="208">
            <target variable="#//@actions.9/@body/@locals.9"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="208">
            <target variable="#//@actions.9/@body/@locals.9"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="2">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.16"/>
          <target variable="#//@actions.9/@body/@locals.10"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.1"/>
          <target variable="#//@actions.9/@body/@locals.11"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="207" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.9/@body/@locals.8"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.9/@body/@locals.9"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.9/@body/@locals.10"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="7"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="34"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.9/@body/@locals.11"/>
            </value>
          </arguments>
          <target variable="#//@actions.9/@body/@locals.12"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.1"/>
          <target variable="#//@actions.9/@body/@locals.11"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="211">
          <indexes xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.9/@body/@locals.7"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.9/@body/@locals.11"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="70"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.9/@body/@locals.12"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="71"/>
          </indexes>
          <target variable="#//@stateVars.5"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.9/@body/@locals.0"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.10"/>
          <target variable="#//@actions.9/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="212">
          <target variable="#//@stateVars.10"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.9/@body/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.2">
      <numTokensMap key="#//@inputs.2" value="1"/>
      <portToVarMap key="#//@inputs.2" value="#//@actions.9/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="198" name="DI" uses="#//@actions.9/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeUint"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.9/@inputPattern/@variables.0" value="#//@inputs.2"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="198" name="isSchedulable_read_luma">
      <locals assignable="true" defs="#//@actions.9/@scheduler/@blocks.0/@instructions.1/@target"
          name="result" uses="#//@actions.9/@scheduler/@blocks.0/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.9/@scheduler/@blocks.0/@instructions.0/@target"
          name="local_count" uses="#//@actions.9/@scheduler/@blocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.10"/>
          <target variable="#//@actions.9/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.9/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="LE">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.9/@scheduler/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="63">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="6"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.9/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>read</identifiers>
      <identifiers>luma</identifiers>
    </tag>
  </actions>
  <actions>
    <attributes name="IsPrecededBy" stringValue="done-read_luma"/>
    <body lineNumber="215" name="read_chroma">
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.0/@instructions.0/@target"
          lineNumber="215" name="d" uses="#//@actions.10/@body/@blocks.0/@instructions.16/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.0/@instructions.1/@target #//@actions.10/@body/@blocks.0/@instructions.3/@target #//@actions.10/@body/@blocks.0/@instructions.8/@target #//@actions.10/@body/@blocks.0/@instructions.17/@target #//@actions.10/@body/@blocks.0/@instructions.19/@target"
          name="local_count" uses="#//@actions.10/@body/@blocks.0/@instructions.2/@arguments.0/@value/@e1/@use #//@actions.10/@body/@blocks.0/@instructions.4/@arguments.0/@value/@e1/@use #//@actions.10/@body/@blocks.0/@instructions.9/@arguments.0/@value/@use #//@actions.10/@body/@blocks.0/@instructions.18/@value/@e1/@use #//@actions.10/@body/@blocks.1/@condition/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals defs="#//@actions.10/@body/@blocks.0/@instructions.2/@target" lineNumber="217"
          name="comp_local" uses="#//@actions.10/@body/@blocks.0/@instructions.16/@indexes.0/@e1/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="2"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.0/@instructions.4/@target"
          name="tmp_maskBits" uses="#//@actions.10/@body/@blocks.0/@instructions.7/@arguments.0/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.0/@instructions.5/@target #//@actions.10/@body/@blocks.1/@thenBlocks.0/@instructions.1/@target"
          name="local_y_offset" uses="#//@actions.10/@body/@blocks.0/@instructions.7/@arguments.0/@value/@e2/@e1/@use #//@actions.10/@body/@blocks.1/@thenBlocks.0/@instructions.2/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="3"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.0/@instructions.6/@target #//@actions.10/@body/@blocks.0/@instructions.14/@target"
          name="local_CHROMA_Y_BITS" uses="#//@actions.10/@body/@blocks.0/@instructions.7/@arguments.1/@value/@use #//@actions.10/@body/@blocks.0/@instructions.16/@indexes.0/@e1/@e1/@e2/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals defs="#//@actions.10/@body/@blocks.0/@instructions.7/@target" lineNumber="218"
          name="y" uses="#//@actions.10/@body/@blocks.0/@instructions.16/@indexes.0/@e1/@e2/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.0/@instructions.9/@target"
          name="tmp_maskBits0" uses="#//@actions.10/@body/@blocks.0/@instructions.12/@arguments.0/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.0/@instructions.10/@target"
          name="local_mbx_ptr" uses="#//@actions.10/@body/@blocks.0/@instructions.12/@arguments.0/@value/@e2/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <locals assignable="true" defs="#//@actions.10/@body/@blocks.0/@instructions.11/@target #//@actions.10/@body/@blocks.0/@instructions.13/@target #//@actions.10/@body/@blocks.0/@instructions.15/@target"
          name="local_CHROMA_X_BITS" uses="#//@actions.10/@body/@blocks.0/@instructions.12/@arguments.1/@value/@use #//@actions.10/@body/@blocks.0/@instructions.16/@indexes.0/@e1/@e1/@e2/@e1/@use #//@actions.10/@body/@blocks.0/@instructions.16/@indexes.0/@e1/@e2/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals defs="#//@actions.10/@body/@blocks.0/@instructions.12/@target" lineNumber="219"
          name="x" uses="#//@actions.10/@body/@blocks.0/@instructions.16/@indexes.0/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="215">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.10/@inputPattern/@variables.0"/>
          <target variable="#//@actions.10/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.10"/>
          <target variable="#//@actions.10/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="217" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.10/@body/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="4">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
          <target variable="#//@actions.10/@body/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.10"/>
          <target variable="#//@actions.10/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="218" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.10/@body/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="3">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </value>
          </arguments>
          <target variable="#//@actions.10/@body/@locals.3"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.17"/>
          <target variable="#//@actions.10/@body/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.4"/>
          <target variable="#//@actions.10/@body/@locals.5"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="218" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.10/@body/@locals.3"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.10/@body/@locals.4"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="3">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.10/@body/@locals.5"/>
            </value>
          </arguments>
          <target variable="#//@actions.10/@body/@locals.6"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.10"/>
          <target variable="#//@actions.10/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="219" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.10/@body/@locals.1"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
          <target variable="#//@actions.10/@body/@locals.7"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.16"/>
          <target variable="#//@actions.10/@body/@locals.8"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.10/@body/@locals.9"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="219" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.10/@body/@locals.7"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.10/@body/@locals.8"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="5"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.10/@body/@locals.9"/>
            </value>
          </arguments>
          <target variable="#//@actions.10/@body/@locals.10"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.10/@body/@locals.9"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.4"/>
          <target variable="#//@actions.10/@body/@locals.5"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.10/@body/@locals.9"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="222">
          <indexes xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.10/@body/@locals.2"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.10/@body/@locals.9"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.10/@body/@locals.5"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="65"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.10/@body/@locals.6"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.10/@body/@locals.9"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="69"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="70"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.10/@body/@locals.10"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="71"/>
          </indexes>
          <target variable="#//@stateVars.6"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.10/@body/@locals.0"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.10"/>
          <target variable="#//@actions.10/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="223">
          <target variable="#//@stateVars.10"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.10/@body/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.10"/>
          <target variable="#//@actions.10/@body/@locals.1"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="224">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.10/@body/@locals.1"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="96">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="7"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="225">
            <target variable="#//@stateVars.10"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.17"/>
            <target variable="#//@actions.10/@body/@locals.4"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="226">
            <target variable="#//@stateVars.17"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.10/@body/@locals.4"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.2">
      <numTokensMap key="#//@inputs.2" value="1"/>
      <portToVarMap key="#//@inputs.2" value="#//@actions.10/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="215" name="DI" uses="#//@actions.10/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeUint"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.10/@inputPattern/@variables.0" value="#//@inputs.2"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="215" name="isSchedulable_read_chroma">
      <locals assignable="true" defs="#//@actions.10/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.10/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.10/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.10/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>read</identifiers>
      <identifiers>chroma</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="238" name="getmvx">
      <locals assignable="true" defs="#//@actions.11/@body/@blocks.0/@instructions.0/@target"
          lineNumber="238" name="v" uses="#//@actions.11/@body/@blocks.0/@instructions.1/@value/@e1/@e1/@use #//@actions.11/@body/@blocks.0/@instructions.2/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="238">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.11/@inputPattern/@variables.0"/>
          <target variable="#//@actions.11/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="240">
          <target variable="#//@stateVars.20"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.11/@body/@locals.0"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="2"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="241">
          <target variable="#//@stateVars.18"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.11/@body/@locals.0"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.0">
      <numTokensMap key="#//@inputs.0" value="1"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.11/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="238" name="MV" uses="#//@actions.11/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.11/@inputPattern/@variables.0" value="#//@inputs.0"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="238" name="isSchedulable_getmvx">
      <locals assignable="true" defs="#//@actions.11/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.11/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.11/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.11/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>getmvx</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="244" name="getmvy">
      <locals assignable="true" defs="#//@actions.12/@body/@blocks.0/@instructions.0/@target"
          lineNumber="244" name="v" uses="#//@actions.12/@body/@blocks.2/@condition/@e1/@e1/@use #//@actions.12/@body/@blocks.5/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
      </locals>
      <locals assignable="true" defs="#//@actions.12/@body/@blocks.0/@instructions.1/@target"
          name="local_interp_x" uses="#//@actions.12/@body/@blocks.1/@condition/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.12/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target #//@actions.12/@body/@blocks.1/@elseBlocks.0/@instructions.0/@target"
          name="tmp_if" uses="#//@actions.12/@body/@blocks.5/@instructions.0/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
      </locals>
      <locals assignable="true" defs="#//@actions.12/@body/@blocks.2/@thenBlocks.0/@instructions.0/@target #//@actions.12/@body/@blocks.2/@elseBlocks.0/@instructions.0/@target"
          name="tmp_if0" uses="#//@actions.12/@body/@blocks.5/@instructions.0/@value/@e1/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
      </locals>
      <locals assignable="true" defs="#//@actions.12/@body/@blocks.3/@instructions.0/@target"
          name="local_round" uses="#//@actions.12/@body/@blocks.4/@condition/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.12/@body/@blocks.4/@thenBlocks.0/@instructions.0/@target #//@actions.12/@body/@blocks.4/@elseBlocks.0/@instructions.0/@target"
          name="tmp_if1" uses="#//@actions.12/@body/@blocks.5/@instructions.0/@value/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
      </locals>
      <locals defs="#//@actions.12/@body/@blocks.5/@instructions.0/@target" lineNumber="246"
          name="f" uses="#//@actions.12/@body/@blocks.5/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="244">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.12/@inputPattern/@variables.0"/>
          <target variable="#//@actions.12/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.20"/>
          <target variable="#//@actions.12/@body/@locals.1"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="246">
        <condition xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@actions.12/@body/@locals.1"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="246">
            <target variable="#//@actions.12/@body/@locals.2"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="246">
            <target variable="#//@actions.12/@body/@locals.2"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="4">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="247">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
          <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.12/@body/@locals.0"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="2"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="247">
            <target variable="#//@actions.12/@body/@locals.3"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="247">
            <target variable="#//@actions.12/@body/@locals.3"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="2">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.9"/>
          <target variable="#//@actions.12/@body/@locals.4"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="248">
        <condition xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@actions.12/@body/@locals.4"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="248">
            <target variable="#//@actions.12/@body/@locals.5"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="248">
            <target variable="#//@actions.12/@body/@locals.5"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="246">
          <target variable="#//@actions.12/@body/@locals.6"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.12/@body/@locals.2"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.12/@body/@locals.3"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.12/@body/@locals.5"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="5"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="250">
          <target variable="#//@stateVars.19"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.12/@body/@locals.0"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="244">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.12/@outputPattern/@variables.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.12/@body/@locals.6"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.0">
      <numTokensMap key="#//@inputs.0" value="1"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.12/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="244" name="MV" uses="#//@actions.12/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.12/@inputPattern/@variables.0" value="#//@inputs.0"/>
    </inputPattern>
    <outputPattern ports="#//@outputs.1">
      <numTokensMap key="#//@outputs.1" value="1"/>
      <portToVarMap key="#//@outputs.1" value="#//@actions.12/@outputPattern/@variables.0"/>
      <variables assignable="true" defs="#//@actions.12/@body/@blocks.5/@instructions.2/@target"
          lineNumber="244" name="FLAGS">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.12/@outputPattern/@variables.0" value="#//@outputs.1"/>
    </outputPattern>
    <peekPattern/>
    <scheduler lineNumber="244" name="isSchedulable_getmvy">
      <locals assignable="true" defs="#//@actions.12/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.12/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.12/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.12/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>getmvy</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="257" name="motion">
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="261">
          <target variable="#//@stateVars.21"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="262">
          <target variable="#//@stateVars.22"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="257" name="isSchedulable_motion">
      <locals assignable="true" defs="#//@actions.13/@scheduler/@blocks.0/@instructions.1/@target"
          name="result" uses="#//@actions.13/@scheduler/@blocks.0/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.13/@scheduler/@blocks.0/@instructions.0/@target"
          name="local_is_motion" uses="#//@actions.13/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.8"/>
          <target variable="#//@actions.13/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.13/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.13/@scheduler/@locals.1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.13/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>motion</identifiers>
    </tag>
  </actions>
  <actions>
    <attributes name="IsPrecededBy" stringValue="motion"/>
    <body lineNumber="265" name="noMotion">
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="265" name="isSchedulable_noMotion">
      <locals assignable="true" defs="#//@actions.14/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.14/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.14/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.14/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>noMotion</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="268" name="search_done">
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="268" name="isSchedulable_search_done">
      <locals assignable="true" defs="#//@actions.15/@scheduler/@blocks.0/@instructions.1/@target"
          name="result" uses="#//@actions.15/@scheduler/@blocks.0/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.15/@scheduler/@blocks.0/@instructions.0/@target"
          name="local_mvycount" uses="#//@actions.15/@scheduler/@blocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="5"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.22"/>
          <target variable="#//@actions.15/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.15/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.15/@scheduler/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="9">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.15/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>search_done</identifiers>
    </tag>
  </actions>
  <actions>
    <attributes name="IsPrecededBy" stringValue="search_done"/>
    <body lineNumber="273" name="search_luma">
      <locals assignable="true" defs="#//@actions.16/@body/@blocks.0/@instructions.0/@target"
          name="local_mvy" uses="#//@actions.16/@body/@blocks.2/@instructions.0/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
      </locals>
      <locals assignable="true" defs="#//@actions.16/@body/@blocks.0/@instructions.1/@target #//@actions.16/@body/@blocks.9/@thenBlocks.0/@instructions.1/@target"
          name="local_mvycount" uses="#//@actions.16/@body/@blocks.2/@instructions.0/@value/@e1/@e2/@use #//@actions.16/@body/@blocks.9/@thenBlocks.0/@instructions.2/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="5"/>
      </locals>
      <locals assignable="true" defs="#//@actions.16/@body/@blocks.0/@instructions.2/@target #//@actions.16/@body/@blocks.2/@instructions.3/@target"
          name="local_comp" uses="#//@actions.16/@body/@blocks.1/@condition/@e1/@e1/@use #//@actions.16/@body/@blocks.3/@condition/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <locals assignable="true" defs="#//@actions.16/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target #//@actions.16/@body/@blocks.1/@elseBlocks.0/@instructions.0/@target"
          name="tmp_if" uses="#//@actions.16/@body/@blocks.2/@instructions.0/@value/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
      </locals>
      <locals assignable="true" defs="#//@actions.16/@body/@blocks.2/@instructions.0/@target #//@actions.16/@body/@blocks.5/@thenBlocks.0/@thenBlocks.0/@instructions.0/@target #//@actions.16/@body/@blocks.5/@thenBlocks.0/@elseBlocks.0/@instructions.0/@target #//@actions.16/@body/@blocks.5/@elseBlocks.1/@thenBlocks.0/@thenBlocks.0/@instructions.0/@target #//@actions.16/@body/@blocks.5/@elseBlocks.1/@thenBlocks.0/@elseBlocks.0/@instructions.0/@target"
          lineNumber="279" name="y" uses="#//@actions.16/@body/@blocks.5/@thenBlocks.0/@condition/@e1/@use #//@actions.16/@body/@blocks.5/@thenBlocks.0/@elseBlocks.0/@instructions.0/@value/@use #//@actions.16/@body/@blocks.5/@elseBlocks.1/@thenBlocks.0/@condition/@e1/@use #//@actions.16/@body/@blocks.5/@elseBlocks.1/@thenBlocks.0/@elseBlocks.0/@instructions.0/@value/@use #//@actions.16/@body/@blocks.10/@instructions.1/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="10"/>
      </locals>
      <locals assignable="true" defs="#//@actions.16/@body/@blocks.2/@instructions.1/@target"
          name="local_mvx" uses="#//@actions.16/@body/@blocks.4/@instructions.0/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
      </locals>
      <locals assignable="true" defs="#//@actions.16/@body/@blocks.2/@instructions.2/@target #//@actions.16/@body/@blocks.8/@instructions.0/@target #//@actions.16/@body/@blocks.8/@instructions.2/@target"
          name="local_mvxcount" uses="#//@actions.16/@body/@blocks.4/@instructions.0/@value/@e1/@e2/@e1/@use #//@actions.16/@body/@blocks.8/@instructions.1/@value/@e1/@use #//@actions.16/@body/@blocks.9/@condition/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="3"/>
      </locals>
      <locals assignable="true" defs="#//@actions.16/@body/@blocks.3/@thenBlocks.0/@instructions.0/@target #//@actions.16/@body/@blocks.3/@elseBlocks.0/@instructions.0/@target"
          name="tmp_if0" uses="#//@actions.16/@body/@blocks.4/@instructions.0/@value/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
      </locals>
      <locals assignable="true" defs="#//@actions.16/@body/@blocks.4/@instructions.0/@target #//@actions.16/@body/@blocks.7/@thenBlocks.0/@thenBlocks.0/@instructions.0/@target #//@actions.16/@body/@blocks.7/@thenBlocks.0/@elseBlocks.0/@instructions.0/@target #//@actions.16/@body/@blocks.7/@elseBlocks.1/@thenBlocks.0/@thenBlocks.0/@instructions.0/@target #//@actions.16/@body/@blocks.7/@elseBlocks.1/@thenBlocks.0/@elseBlocks.0/@instructions.0/@target"
          lineNumber="280" name="x" uses="#//@actions.16/@body/@blocks.7/@thenBlocks.0/@condition/@e1/@use #//@actions.16/@body/@blocks.7/@thenBlocks.0/@elseBlocks.0/@instructions.0/@value/@use #//@actions.16/@body/@blocks.7/@elseBlocks.1/@thenBlocks.0/@condition/@e1/@use #//@actions.16/@body/@blocks.7/@elseBlocks.1/@thenBlocks.0/@elseBlocks.0/@instructions.0/@value/@use #//@actions.16/@body/@blocks.10/@instructions.5/@arguments.0/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="10"/>
      </locals>
      <locals assignable="true" defs="#//@actions.16/@body/@blocks.4/@instructions.1/@target #//@actions.16/@body/@blocks.5/@elseBlocks.0/@instructions.0/@target"
          name="local_mby" uses="#//@actions.16/@body/@blocks.5/@condition/@e1/@use #//@actions.16/@body/@blocks.5/@elseBlocks.1/@condition/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.16/@body/@blocks.5/@elseBlocks.0/@instructions.1/@target"
          name="local_mbh_max" uses="#//@actions.16/@body/@blocks.5/@elseBlocks.1/@condition/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.16/@body/@blocks.6/@instructions.0/@target #//@actions.16/@body/@blocks.7/@elseBlocks.0/@instructions.0/@target"
          name="local_mbx" uses="#//@actions.16/@body/@blocks.7/@condition/@e1/@use #//@actions.16/@body/@blocks.7/@elseBlocks.1/@condition/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.16/@body/@blocks.7/@elseBlocks.0/@instructions.1/@target"
          name="local_mbw_max" uses="#//@actions.16/@body/@blocks.7/@elseBlocks.1/@condition/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.16/@body/@blocks.10/@instructions.0/@target"
          name="local_LUMA_Y_BITS" uses="#//@actions.16/@body/@blocks.10/@instructions.1/@arguments.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.16/@body/@blocks.10/@instructions.1/@target"
          name="tmp_maskBits" uses="#//@actions.16/@body/@blocks.10/@instructions.6/@indexes.0/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.16/@body/@blocks.10/@instructions.2/@target #//@actions.16/@body/@blocks.10/@instructions.4/@target"
          name="local_LUMA_X_BITS" uses="#//@actions.16/@body/@blocks.10/@instructions.6/@indexes.0/@e1/@e2/@use #//@actions.16/@body/@blocks.10/@instructions.5/@arguments.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.16/@body/@blocks.10/@instructions.3/@target"
          name="local_mbx_ptr" uses="#//@actions.16/@body/@blocks.10/@instructions.5/@arguments.0/@value/@e1/@e2/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <locals assignable="true" defs="#//@actions.16/@body/@blocks.10/@instructions.5/@target"
          name="tmp_maskBits0" uses="#//@actions.16/@body/@blocks.10/@instructions.6/@indexes.0/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.16/@body/@blocks.10/@instructions.6/@target"
          name="tmp_luma" uses="#//@actions.16/@body/@blocks.10/@instructions.7/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.19"/>
          <target variable="#//@actions.16/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.22"/>
          <target variable="#//@actions.16/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.11"/>
          <target variable="#//@actions.16/@body/@locals.2"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="279">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
          <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.16/@body/@locals.2"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="3"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="279">
            <target variable="#//@actions.16/@body/@locals.3"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="279">
            <target variable="#//@actions.16/@body/@locals.3"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="8">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="279">
          <target variable="#//@actions.16/@body/@locals.4"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.16/@body/@locals.0"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.16/@body/@locals.1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="10"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.16/@body/@locals.3"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.18"/>
          <target variable="#//@actions.16/@body/@locals.5"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.21"/>
          <target variable="#//@actions.16/@body/@locals.6"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.11"/>
          <target variable="#//@actions.16/@body/@locals.2"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="280">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
          <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.16/@body/@locals.2"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="2"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="280">
            <target variable="#//@actions.16/@body/@locals.7"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="280">
            <target variable="#//@actions.16/@body/@locals.7"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="8">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="280">
          <target variable="#//@actions.16/@body/@locals.8"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.16/@body/@locals.5"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.16/@body/@locals.6"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="10"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.16/@body/@locals.7"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.15"/>
          <target variable="#//@actions.16/@body/@locals.9"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="283">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.16/@body/@locals.9"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.15"/>
            <target variable="#//@actions.16/@body/@locals.9"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.13"/>
            <target variable="#//@actions.16/@body/@locals.10"/>
          </instructions>
        </elseBlocks>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="286">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.16/@body/@locals.9"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.16/@body/@locals.10"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="287">
            <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="GT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.16/@body/@locals.4"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="15">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </condition>
            <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="287">
                <target variable="#//@actions.16/@body/@locals.4"/>
                <value xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.16/@body/@locals.4"/>
                </value>
              </instructions>
            </elseBlocks>
            <joinBlock/>
            <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="287">
                <target variable="#//@actions.16/@body/@locals.4"/>
                <value xsi:type="net.sf.orcc.ir:ExprInt" value="15">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
                </value>
              </instructions>
            </thenBlocks>
          </thenBlocks>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="284">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.16/@body/@locals.4"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="284">
              <target variable="#//@actions.16/@body/@locals.4"/>
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.16/@body/@locals.4"/>
              </value>
            </instructions>
          </elseBlocks>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="284">
              <target variable="#//@actions.16/@body/@locals.4"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </instructions>
          </thenBlocks>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.14"/>
          <target variable="#//@actions.16/@body/@locals.11"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="291">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.16/@body/@locals.11"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.14"/>
            <target variable="#//@actions.16/@body/@locals.11"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.12"/>
            <target variable="#//@actions.16/@body/@locals.12"/>
          </instructions>
        </elseBlocks>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="294">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.16/@body/@locals.11"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.16/@body/@locals.12"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="295">
            <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="GT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.16/@body/@locals.8"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="12">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </condition>
            <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="295">
                <target variable="#//@actions.16/@body/@locals.8"/>
                <value xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.16/@body/@locals.8"/>
                </value>
              </instructions>
            </elseBlocks>
            <joinBlock/>
            <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="295">
                <target variable="#//@actions.16/@body/@locals.8"/>
                <value xsi:type="net.sf.orcc.ir:ExprInt" value="12">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
                </value>
              </instructions>
            </thenBlocks>
          </thenBlocks>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="292">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.16/@body/@locals.8"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="292">
              <target variable="#//@actions.16/@body/@locals.8"/>
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.16/@body/@locals.8"/>
              </value>
            </instructions>
          </elseBlocks>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="292">
              <target variable="#//@actions.16/@body/@locals.8"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </instructions>
          </thenBlocks>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.21"/>
          <target variable="#//@actions.16/@body/@locals.6"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="299">
          <target variable="#//@stateVars.21"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.16/@body/@locals.6"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.21"/>
          <target variable="#//@actions.16/@body/@locals.6"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="300">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.16/@body/@locals.6"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="3">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="301">
            <target variable="#//@stateVars.21"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.22"/>
            <target variable="#//@actions.16/@body/@locals.1"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="302">
            <target variable="#//@stateVars.22"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.16/@body/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.2"/>
          <target variable="#//@actions.16/@body/@locals.13"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="274" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.16/@body/@locals.4"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.16/@body/@locals.13"/>
            </value>
          </arguments>
          <target variable="#//@actions.16/@body/@locals.14"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.1"/>
          <target variable="#//@actions.16/@body/@locals.15"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.16"/>
          <target variable="#//@actions.16/@body/@locals.16"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.1"/>
          <target variable="#//@actions.16/@body/@locals.15"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="275" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.16/@body/@locals.8"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
                  <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
                    <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                      <use variable="#//@actions.16/@body/@locals.16"/>
                    </e1>
                    <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
                      <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
                    </e2>
                    <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="4">
                    <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.16/@body/@locals.15"/>
            </value>
          </arguments>
          <target variable="#//@actions.16/@body/@locals.17"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="274">
          <indexes xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.16/@body/@locals.14"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.16/@body/@locals.15"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="95"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.16/@body/@locals.17"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="96"/>
          </indexes>
          <source variable="#//@stateVars.5"/>
          <target variable="#//@actions.16/@body/@locals.18"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="274">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.16/@outputPattern/@variables.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.16/@body/@locals.18"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern ports="#//@outputs.0">
      <numTokensMap key="#//@outputs.0" value="1"/>
      <portToVarMap key="#//@outputs.0" value="#//@actions.16/@outputPattern/@variables.0"/>
      <variables assignable="true" defs="#//@actions.16/@body/@blocks.10/@instructions.7/@target"
          lineNumber="273" name="DO">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeUint"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.16/@outputPattern/@variables.0" value="#//@outputs.0"/>
    </outputPattern>
    <peekPattern/>
    <scheduler lineNumber="273" name="isSchedulable_search_luma">
      <locals assignable="true" defs="#//@actions.16/@scheduler/@blocks.0/@instructions.1/@target"
          name="result" uses="#//@actions.16/@scheduler/@blocks.0/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.16/@scheduler/@blocks.0/@instructions.0/@target"
          name="local_comp" uses="#//@actions.16/@scheduler/@blocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.11"/>
          <target variable="#//@actions.16/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.16/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="LE">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.16/@scheduler/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="3">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.16/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>search</identifiers>
      <identifiers>luma</identifiers>
    </tag>
  </actions>
  <actions>
    <attributes name="IsPrecededBy" stringValue="search_done-search_luma"/>
    <body lineNumber="306" name="search_chroma">
      <locals assignable="true" defs="#//@actions.17/@body/@blocks.0/@instructions.0/@target"
          name="local_mvy" uses="#//@actions.17/@body/@blocks.0/@instructions.2/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
      </locals>
      <locals assignable="true" defs="#//@actions.17/@body/@blocks.0/@instructions.1/@target #//@actions.17/@body/@blocks.5/@thenBlocks.0/@instructions.1/@target"
          name="local_mvycount" uses="#//@actions.17/@body/@blocks.0/@instructions.2/@value/@e2/@use #//@actions.17/@body/@blocks.5/@thenBlocks.0/@instructions.2/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="5"/>
      </locals>
      <locals assignable="true" defs="#//@actions.17/@body/@blocks.0/@instructions.2/@target #//@actions.17/@body/@blocks.1/@thenBlocks.0/@thenBlocks.0/@instructions.0/@target #//@actions.17/@body/@blocks.1/@thenBlocks.0/@elseBlocks.0/@instructions.0/@target #//@actions.17/@body/@blocks.1/@elseBlocks.1/@thenBlocks.0/@thenBlocks.0/@instructions.0/@target #//@actions.17/@body/@blocks.1/@elseBlocks.1/@thenBlocks.0/@elseBlocks.0/@instructions.0/@target"
          lineNumber="311" name="y" uses="#//@actions.17/@body/@blocks.1/@thenBlocks.0/@condition/@e1/@use #//@actions.17/@body/@blocks.1/@thenBlocks.0/@elseBlocks.0/@instructions.0/@value/@use #//@actions.17/@body/@blocks.1/@elseBlocks.1/@thenBlocks.0/@condition/@e1/@use #//@actions.17/@body/@blocks.1/@elseBlocks.1/@thenBlocks.0/@elseBlocks.0/@instructions.0/@value/@use #//@actions.17/@body/@blocks.6/@instructions.5/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="10"/>
      </locals>
      <locals assignable="true" defs="#//@actions.17/@body/@blocks.0/@instructions.3/@target"
          name="local_mvx" uses="#//@actions.17/@body/@blocks.0/@instructions.5/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
      </locals>
      <locals assignable="true" defs="#//@actions.17/@body/@blocks.0/@instructions.4/@target #//@actions.17/@body/@blocks.4/@instructions.0/@target #//@actions.17/@body/@blocks.4/@instructions.2/@target"
          name="local_mvxcount" uses="#//@actions.17/@body/@blocks.0/@instructions.5/@value/@e2/@e1/@use #//@actions.17/@body/@blocks.4/@instructions.1/@value/@e1/@use #//@actions.17/@body/@blocks.5/@condition/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="3"/>
      </locals>
      <locals assignable="true" defs="#//@actions.17/@body/@blocks.0/@instructions.5/@target #//@actions.17/@body/@blocks.3/@thenBlocks.0/@thenBlocks.0/@instructions.0/@target #//@actions.17/@body/@blocks.3/@thenBlocks.0/@elseBlocks.0/@instructions.0/@target #//@actions.17/@body/@blocks.3/@elseBlocks.1/@thenBlocks.0/@thenBlocks.0/@instructions.0/@target #//@actions.17/@body/@blocks.3/@elseBlocks.1/@thenBlocks.0/@elseBlocks.0/@instructions.0/@target"
          lineNumber="312" name="x" uses="#//@actions.17/@body/@blocks.3/@thenBlocks.0/@condition/@e1/@use #//@actions.17/@body/@blocks.3/@thenBlocks.0/@elseBlocks.0/@instructions.0/@value/@use #//@actions.17/@body/@blocks.3/@elseBlocks.1/@thenBlocks.0/@condition/@e1/@use #//@actions.17/@body/@blocks.3/@elseBlocks.1/@thenBlocks.0/@elseBlocks.0/@instructions.0/@value/@use #//@actions.17/@body/@blocks.6/@instructions.9/@arguments.0/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="10"/>
      </locals>
      <locals assignable="true" defs="#//@actions.17/@body/@blocks.0/@instructions.6/@target #//@actions.17/@body/@blocks.1/@elseBlocks.0/@instructions.0/@target"
          name="local_mby" uses="#//@actions.17/@body/@blocks.1/@condition/@e1/@use #//@actions.17/@body/@blocks.1/@elseBlocks.1/@condition/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.17/@body/@blocks.1/@elseBlocks.0/@instructions.1/@target"
          name="local_mbh_max" uses="#//@actions.17/@body/@blocks.1/@elseBlocks.1/@condition/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.17/@body/@blocks.2/@instructions.0/@target #//@actions.17/@body/@blocks.3/@elseBlocks.0/@instructions.0/@target"
          name="local_mbx" uses="#//@actions.17/@body/@blocks.3/@condition/@e1/@use #//@actions.17/@body/@blocks.3/@elseBlocks.1/@condition/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.17/@body/@blocks.3/@elseBlocks.0/@instructions.1/@target"
          name="local_mbw_max" uses="#//@actions.17/@body/@blocks.3/@elseBlocks.1/@condition/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.17/@body/@blocks.6/@instructions.0/@target"
          name="local_comp" uses="#//@actions.17/@body/@blocks.6/@instructions.1/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <locals assignable="true" defs="#//@actions.17/@body/@blocks.6/@instructions.1/@target"
          name="tmp_maskBits" uses="#//@actions.17/@body/@blocks.6/@instructions.10/@indexes.0/@e1/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.17/@body/@blocks.6/@instructions.2/@target #//@actions.17/@body/@blocks.6/@instructions.6/@target #//@actions.17/@body/@blocks.6/@instructions.8/@target"
          name="local_CHROMA_X_BITS" uses="#//@actions.17/@body/@blocks.6/@instructions.10/@indexes.0/@e1/@e1/@e2/@e1/@use #//@actions.17/@body/@blocks.6/@instructions.10/@indexes.0/@e1/@e2/@e2/@use #//@actions.17/@body/@blocks.6/@instructions.9/@arguments.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.17/@body/@blocks.6/@instructions.3/@target #//@actions.17/@body/@blocks.6/@instructions.4/@target"
          name="local_CHROMA_Y_BITS" uses="#//@actions.17/@body/@blocks.6/@instructions.10/@indexes.0/@e1/@e1/@e2/@e2/@use #//@actions.17/@body/@blocks.6/@instructions.5/@arguments.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.17/@body/@blocks.6/@instructions.5/@target"
          name="tmp_maskBits0" uses="#//@actions.17/@body/@blocks.6/@instructions.10/@indexes.0/@e1/@e2/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.17/@body/@blocks.6/@instructions.7/@target"
          name="local_mbx_ptr" uses="#//@actions.17/@body/@blocks.6/@instructions.9/@arguments.0/@value/@e1/@e2/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
      </locals>
      <locals assignable="true" defs="#//@actions.17/@body/@blocks.6/@instructions.9/@target"
          name="tmp_maskBits1" uses="#//@actions.17/@body/@blocks.6/@instructions.10/@indexes.0/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.17/@body/@blocks.6/@instructions.10/@target"
          name="tmp_chroma" uses="#//@actions.17/@body/@blocks.6/@instructions.11/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.19"/>
          <target variable="#//@actions.17/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.22"/>
          <target variable="#//@actions.17/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="311">
          <target variable="#//@actions.17/@body/@locals.2"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.17/@body/@locals.0"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.17/@body/@locals.1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="10"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.18"/>
          <target variable="#//@actions.17/@body/@locals.3"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.21"/>
          <target variable="#//@actions.17/@body/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="312">
          <target variable="#//@actions.17/@body/@locals.5"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.17/@body/@locals.3"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.17/@body/@locals.4"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="10"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.15"/>
          <target variable="#//@actions.17/@body/@locals.6"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="315">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.17/@body/@locals.6"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.15"/>
            <target variable="#//@actions.17/@body/@locals.6"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.13"/>
            <target variable="#//@actions.17/@body/@locals.7"/>
          </instructions>
        </elseBlocks>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="318">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.17/@body/@locals.6"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.17/@body/@locals.7"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="319">
            <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="GT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.17/@body/@locals.2"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="7">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </condition>
            <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="319">
                <target variable="#//@actions.17/@body/@locals.2"/>
                <value xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.17/@body/@locals.2"/>
                </value>
              </instructions>
            </elseBlocks>
            <joinBlock/>
            <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="319">
                <target variable="#//@actions.17/@body/@locals.2"/>
                <value xsi:type="net.sf.orcc.ir:ExprInt" value="7">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
                </value>
              </instructions>
            </thenBlocks>
          </thenBlocks>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="316">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.17/@body/@locals.2"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="316">
              <target variable="#//@actions.17/@body/@locals.2"/>
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.17/@body/@locals.2"/>
              </value>
            </instructions>
          </elseBlocks>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="316">
              <target variable="#//@actions.17/@body/@locals.2"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </instructions>
          </thenBlocks>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.14"/>
          <target variable="#//@actions.17/@body/@locals.8"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="323">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.17/@body/@locals.8"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.14"/>
            <target variable="#//@actions.17/@body/@locals.8"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.12"/>
            <target variable="#//@actions.17/@body/@locals.9"/>
          </instructions>
        </elseBlocks>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="326">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.17/@body/@locals.8"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.17/@body/@locals.9"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="327">
            <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="GT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.17/@body/@locals.5"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="4">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </condition>
            <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="327">
                <target variable="#//@actions.17/@body/@locals.5"/>
                <value xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.17/@body/@locals.5"/>
                </value>
              </instructions>
            </elseBlocks>
            <joinBlock/>
            <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="327">
                <target variable="#//@actions.17/@body/@locals.5"/>
                <value xsi:type="net.sf.orcc.ir:ExprInt" value="4">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
                </value>
              </instructions>
            </thenBlocks>
          </thenBlocks>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="324">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.17/@body/@locals.5"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="324">
              <target variable="#//@actions.17/@body/@locals.5"/>
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.17/@body/@locals.5"/>
              </value>
            </instructions>
          </elseBlocks>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="324">
              <target variable="#//@actions.17/@body/@locals.5"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </instructions>
          </thenBlocks>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.21"/>
          <target variable="#//@actions.17/@body/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="331">
          <target variable="#//@stateVars.21"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.17/@body/@locals.4"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.21"/>
          <target variable="#//@actions.17/@body/@locals.4"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="332">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.17/@body/@locals.4"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="3">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="333">
            <target variable="#//@stateVars.21"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.22"/>
            <target variable="#//@actions.17/@body/@locals.1"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="334">
            <target variable="#//@stateVars.22"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.17/@body/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="6"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.11"/>
          <target variable="#//@actions.17/@body/@locals.10"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="307" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.17/@body/@locals.10"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
          <target variable="#//@actions.17/@body/@locals.11"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.17/@body/@locals.12"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.4"/>
          <target variable="#//@actions.17/@body/@locals.13"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.4"/>
          <target variable="#//@actions.17/@body/@locals.13"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="308" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.17/@body/@locals.2"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.17/@body/@locals.13"/>
            </value>
          </arguments>
          <target variable="#//@actions.17/@body/@locals.14"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.17/@body/@locals.12"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.16"/>
          <target variable="#//@actions.17/@body/@locals.15"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.17/@body/@locals.12"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="309" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.17/@body/@locals.5"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
                  <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
                    <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                      <use variable="#//@actions.17/@body/@locals.15"/>
                    </e1>
                    <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
                      <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
                    </e2>
                    <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="3">
                    <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="7"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="11"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.17/@body/@locals.12"/>
            </value>
          </arguments>
          <target variable="#//@actions.17/@body/@locals.16"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="307">
          <indexes xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.17/@body/@locals.11"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.17/@body/@locals.12"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.17/@body/@locals.13"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="95"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.17/@body/@locals.14"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.17/@body/@locals.12"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="95"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="96"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.17/@body/@locals.16"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="97"/>
          </indexes>
          <source variable="#//@stateVars.6"/>
          <target variable="#//@actions.17/@body/@locals.17"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="307">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.17/@outputPattern/@variables.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.17/@body/@locals.17"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern ports="#//@outputs.0">
      <numTokensMap key="#//@outputs.0" value="1"/>
      <portToVarMap key="#//@outputs.0" value="#//@actions.17/@outputPattern/@variables.0"/>
      <variables assignable="true" defs="#//@actions.17/@body/@blocks.6/@instructions.11/@target"
          lineNumber="306" name="DO">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeUint"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.17/@outputPattern/@variables.0" value="#//@outputs.0"/>
    </outputPattern>
    <peekPattern/>
    <scheduler lineNumber="306" name="isSchedulable_search_chroma">
      <locals assignable="true" defs="#//@actions.17/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.17/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.17/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.17/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>search</identifiers>
      <identifiers>chroma</identifiers>
    </tag>
  </actions>
  <fsm initialState="#//@fsm/@vertices.0">
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.0" target="#//@fsm/@vertices.5"
        actions="#//@actions.0"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.0" target="#//@fsm/@vertices.3"
        actions="#//@actions.3"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.0" target="#//@fsm/@vertices.1"
        actions="#//@actions.4"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.0" target="#//@fsm/@vertices.1"
        actions="#//@actions.5"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.5" target="#//@fsm/@vertices.2"
        actions="#//@actions.1"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.2" target="#//@fsm/@vertices.1"
        actions="#//@actions.2"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.3" target="#//@fsm/@vertices.4"
        actions="#//@actions.11"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.4" target="#//@fsm/@vertices.1"
        actions="#//@actions.12"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.1" target="#//@fsm/@vertices.6"
        actions="#//@actions.6"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.1" target="#//@fsm/@vertices.6"
        actions="#//@actions.8"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.1" target="#//@fsm/@vertices.1"
        actions="#//@actions.9"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.1" target="#//@fsm/@vertices.1"
        actions="#//@actions.10"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.6" target="#//@fsm/@vertices.8"
        actions="#//@actions.13"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.6" target="#//@fsm/@vertices.7"
        actions="#//@actions.14"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.8" target="#//@fsm/@vertices.7"
        actions="#//@actions.15"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.8" target="#//@fsm/@vertices.8"
        actions="#//@actions.16"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.8" target="#//@fsm/@vertices.8"
        actions="#//@actions.17"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.7" target="#//@fsm/@vertices.0"
        actions="#//@actions.7"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="cmd" incoming="#//@fsm/@edges.17"
        outgoing="#//@fsm/@edges.0 #//@fsm/@edges.1 #//@fsm/@edges.2 #//@fsm/@edges.3"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="fill" incoming="#//@fsm/@edges.2 #//@fsm/@edges.3 #//@fsm/@edges.5 #//@fsm/@edges.7 #//@fsm/@edges.10 #//@fsm/@edges.11"
        outgoing="#//@fsm/@edges.8 #//@fsm/@edges.9 #//@fsm/@edges.10 #//@fsm/@edges.11"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="geth" incoming="#//@fsm/@edges.4"
        outgoing="#//@fsm/@edges.5"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="getmvx" incoming="#//@fsm/@edges.1"
        outgoing="#//@fsm/@edges.6"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="getmvy" incoming="#//@fsm/@edges.6"
        outgoing="#//@fsm/@edges.7"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="getw" incoming="#//@fsm/@edges.0"
        outgoing="#//@fsm/@edges.4"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="motion" incoming="#//@fsm/@edges.8 #//@fsm/@edges.9"
        outgoing="#//@fsm/@edges.12 #//@fsm/@edges.13"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="next" incoming="#//@fsm/@edges.13 #//@fsm/@edges.14"
        outgoing="#//@fsm/@edges.17"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="search" incoming="#//@fsm/@edges.12 #//@fsm/@edges.15 #//@fsm/@edges.16"
        outgoing="#//@fsm/@edges.14 #//@fsm/@edges.15 #//@fsm/@edges.16"/>
  </fsm>
  <inputs label="MV">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
  </inputs>
  <inputs label="BTYPE">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="12"/>
  </inputs>
  <inputs label="DI">
    <type xsi:type="net.sf.orcc.ir:TypeUint"/>
  </inputs>
  <outputs label="DO">
    <type xsi:type="net.sf.orcc.ir:TypeUint"/>
  </outputs>
  <outputs label="FLAGS">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
  </outputs>
  <procs lineNumber="67" name="maskBits">
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstReturn">
        <value xsi:type="net.sf.orcc.ir:ExprBinary">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.0/@parameters.0/@variable"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
              <e1 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.0/@parameters.1/@variable"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="64"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="64"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeInt"/>
        </value>
      </instructions>
    </blocks>
    <parameters>
      <variable assignable="true" lineNumber="67" name="v" uses="#//@procs.0/@blocks.0/@instructions.0/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </variable>
    </parameters>
    <parameters>
      <variable assignable="true" lineNumber="67" name="n" uses="#//@procs.0/@blocks.0/@instructions.0/@value/@e2/@e1/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </variable>
    </parameters>
    <returnType xsi:type="net.sf.orcc.ir:TypeInt"/>
  </procs>
  <stateVars lineNumber="52" name="ROUND_TYPE" uses="#//@actions.0/@body/@blocks.0/@instructions.1/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="32">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="6"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars lineNumber="71" name="LUMA_X_BITS" uses="#//@actions.9/@body/@blocks.4/@instructions.1/@source #//@actions.9/@body/@blocks.4/@instructions.3/@source #//@actions.16/@body/@blocks.10/@instructions.2/@source #//@actions.16/@body/@blocks.10/@instructions.4/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="4">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars lineNumber="73" name="LUMA_Y_BITS" uses="#//@actions.9/@body/@blocks.2/@instructions.1/@source #//@actions.16/@body/@blocks.10/@instructions.0/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="6">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars lineNumber="75" name="CHROMA_X_BITS" uses="#//@actions.10/@body/@blocks.0/@instructions.11/@source #//@actions.10/@body/@blocks.0/@instructions.13/@source #//@actions.10/@body/@blocks.0/@instructions.15/@source #//@actions.17/@body/@blocks.6/@instructions.2/@source #//@actions.17/@body/@blocks.6/@instructions.6/@source #//@actions.17/@body/@blocks.6/@instructions.8/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="3">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars lineNumber="77" name="CHROMA_Y_BITS" uses="#//@actions.10/@body/@blocks.0/@instructions.6/@source #//@actions.10/@body/@blocks.0/@instructions.14/@source #//@actions.17/@body/@blocks.6/@instructions.3/@source #//@actions.17/@body/@blocks.6/@instructions.4/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="5">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.9/@body/@blocks.4/@instructions.4/@target"
      lineNumber="81" name="luma" uses="#//@actions.16/@body/@blocks.10/@instructions.6/@source">
    <type xsi:type="net.sf.orcc.ir:TypeList">
      <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1024">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
      </sizeExpr>
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </type>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.10/@body/@blocks.0/@instructions.16/@target"
      lineNumber="86" name="chroma" uses="#//@actions.17/@body/@blocks.6/@instructions.10/@source">
    <type xsi:type="net.sf.orcc.ir:TypeList">
      <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="512">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="10"/>
      </sizeExpr>
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </type>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.4/@target"
      lineNumber="89" name="prediction_is_INTRA" uses="#//@actions.6/@scheduler/@blocks.0/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeBool"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.6/@target #//@actions.3/@body/@blocks.0/@instructions.1/@target #//@actions.4/@body/@blocks.0/@instructions.3/@target #//@actions.5/@body/@blocks.0/@instructions.1/@target"
      lineNumber="91" name="is_motion" uses="#//@actions.13/@scheduler/@blocks.0/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeBool"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.2/@target"
      lineNumber="93" name="round" uses="#//@actions.12/@body/@blocks.3/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeBool"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.10/@target #//@actions.8/@body/@blocks.0/@instructions.3/@target #//@actions.9/@body/@blocks.4/@instructions.6/@target #//@actions.10/@body/@blocks.0/@instructions.18/@target #//@actions.10/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target"
      lineNumber="95" name="count" uses="#//@actions.9/@body/@blocks.0/@instructions.1/@source #//@actions.9/@body/@blocks.0/@instructions.3/@source #//@actions.9/@body/@blocks.2/@instructions.3/@source #//@actions.9/@body/@blocks.4/@instructions.5/@source #//@actions.9/@scheduler/@blocks.0/@instructions.0/@source #//@actions.10/@body/@blocks.0/@instructions.1/@source #//@actions.10/@body/@blocks.0/@instructions.3/@source #//@actions.10/@body/@blocks.0/@instructions.8/@source #//@actions.10/@body/@blocks.0/@instructions.17/@source #//@actions.10/@body/@blocks.0/@instructions.19/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.5/@target #//@actions.7/@body/@blocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.0/@target #//@actions.7/@body/@blocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.1/@target"
      lineNumber="97" name="comp" uses="#//@actions.6/@body/@blocks.0/@instructions.0/@source #//@actions.6/@scheduler/@blocks.0/@instructions.1/@source #//@actions.7/@body/@blocks.1/@elseBlocks.0/@instructions.0/@source #//@actions.7/@body/@blocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.0/@source #//@actions.16/@body/@blocks.0/@instructions.2/@source #//@actions.16/@body/@blocks.2/@instructions.3/@source #//@actions.16/@scheduler/@blocks.0/@instructions.0/@source #//@actions.17/@body/@blocks.6/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.1/@body/@blocks.0/@instructions.1/@target"
      lineNumber="115" name="mbw_max" uses="#//@actions.6/@scheduler/@blocks.0/@instructions.3/@source #//@actions.7/@body/@blocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.2/@source #//@actions.16/@body/@blocks.7/@elseBlocks.0/@instructions.1/@source #//@actions.17/@body/@blocks.3/@elseBlocks.0/@instructions.1/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.2/@body/@blocks.0/@instructions.1/@target"
      lineNumber="117" name="mbh_max" uses="#//@actions.6/@scheduler/@blocks.0/@instructions.5/@source #//@actions.16/@body/@blocks.5/@elseBlocks.0/@instructions.1/@source #//@actions.17/@body/@blocks.1/@elseBlocks.0/@instructions.1/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.7/@target #//@actions.7/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target #//@actions.7/@body/@blocks.1/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.0/@target #//@actions.7/@body/@blocks.1/@elseBlocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.1/@target"
      lineNumber="119" name="mbx" uses="#//@actions.6/@scheduler/@blocks.0/@instructions.2/@source #//@actions.7/@body/@blocks.0/@instructions.0/@source #//@actions.7/@body/@blocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.1/@source #//@actions.7/@body/@blocks.1/@elseBlocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.0/@source #//@actions.16/@body/@blocks.6/@instructions.0/@source #//@actions.16/@body/@blocks.7/@elseBlocks.0/@instructions.0/@source #//@actions.17/@body/@blocks.2/@instructions.0/@source #//@actions.17/@body/@blocks.3/@elseBlocks.0/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.8/@target #//@actions.7/@body/@blocks.1/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.2/@target"
      lineNumber="121" name="mby" uses="#//@actions.6/@scheduler/@blocks.0/@instructions.4/@source #//@actions.7/@body/@blocks.1/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.1/@source #//@actions.16/@body/@blocks.4/@instructions.1/@source #//@actions.16/@body/@blocks.5/@elseBlocks.0/@instructions.0/@source #//@actions.17/@body/@blocks.0/@instructions.6/@source #//@actions.17/@body/@blocks.1/@elseBlocks.0/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.6/@body/@blocks.1/@thenBlocks.0/@instructions.1/@target #//@actions.8/@body/@blocks.0/@instructions.1/@target"
      lineNumber="123" name="mbx_ptr" uses="#//@actions.6/@body/@blocks.1/@thenBlocks.0/@instructions.0/@source #//@actions.8/@body/@blocks.0/@instructions.0/@source #//@actions.9/@body/@blocks.4/@instructions.0/@source #//@actions.10/@body/@blocks.0/@instructions.10/@source #//@actions.16/@body/@blocks.10/@instructions.3/@source #//@actions.17/@body/@blocks.6/@instructions.7/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="0">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="4"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.9/@target #//@actions.8/@body/@blocks.0/@instructions.2/@target #//@actions.10/@body/@blocks.1/@thenBlocks.0/@instructions.2/@target"
      lineNumber="125" name="y_offset" uses="#//@actions.8/@scheduler/@blocks.0/@instructions.0/@source #//@actions.9/@body/@blocks.2/@instructions.0/@source #//@actions.10/@body/@blocks.0/@instructions.5/@source #//@actions.10/@body/@blocks.1/@thenBlocks.0/@instructions.1/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="3"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.4/@body/@blocks.0/@instructions.1/@target #//@actions.11/@body/@blocks.0/@instructions.2/@target"
      lineNumber="230" name="mvx" uses="#//@actions.16/@body/@blocks.2/@instructions.1/@source #//@actions.17/@body/@blocks.0/@instructions.3/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.4/@body/@blocks.0/@instructions.2/@target #//@actions.12/@body/@blocks.5/@instructions.1/@target"
      lineNumber="231" name="mvy" uses="#//@actions.16/@body/@blocks.0/@instructions.0/@source #//@actions.17/@body/@blocks.0/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="9"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.11/@body/@blocks.0/@instructions.1/@target"
      lineNumber="236" name="interp_x" uses="#//@actions.12/@body/@blocks.0/@instructions.1/@source">
    <type xsi:type="net.sf.orcc.ir:TypeBool"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.13/@body/@blocks.0/@instructions.0/@target #//@actions.16/@body/@blocks.8/@instructions.1/@target #//@actions.16/@body/@blocks.9/@thenBlocks.0/@instructions.0/@target #//@actions.17/@body/@blocks.4/@instructions.1/@target #//@actions.17/@body/@blocks.5/@thenBlocks.0/@instructions.0/@target"
      lineNumber="253" name="mvxcount" uses="#//@actions.16/@body/@blocks.2/@instructions.2/@source #//@actions.16/@body/@blocks.8/@instructions.0/@source #//@actions.16/@body/@blocks.8/@instructions.2/@source #//@actions.17/@body/@blocks.0/@instructions.4/@source #//@actions.17/@body/@blocks.4/@instructions.0/@source #//@actions.17/@body/@blocks.4/@instructions.2/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="3"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.13/@body/@blocks.0/@instructions.1/@target #//@actions.16/@body/@blocks.9/@thenBlocks.0/@instructions.2/@target #//@actions.17/@body/@blocks.5/@thenBlocks.0/@instructions.2/@target"
      lineNumber="255" name="mvycount" uses="#//@actions.15/@scheduler/@blocks.0/@instructions.0/@source #//@actions.16/@body/@blocks.0/@instructions.1/@source #//@actions.16/@body/@blocks.9/@thenBlocks.0/@instructions.1/@source #//@actions.17/@body/@blocks.0/@instructions.1/@source #//@actions.17/@body/@blocks.5/@thenBlocks.0/@instructions.1/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="5"/>
  </stateVars>
</net.sf.orcc.df:Actor>
