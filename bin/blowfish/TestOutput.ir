<?xml version="1.0" encoding="UTF-8"?>
<net.sf.orcc.df:Actor xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:net.sf.orcc.df="http://orcc.sf.net/model/2011/Df" xmlns:net.sf.orcc.ir="http://orcc.sf.net/model/2011/Ir"
    label="blowfish.TestOutput" fileName="/StreamBench/src/blowfish/TestOutput.cal"
    lineNumber="5">
  <actions>
    <body lineNumber="9" name="read_data">
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.0/@target"
          lineNumber="9" name="data" uses="#//@actions.0/@body/@blocks.1/@condition/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.1/@target #//@actions.0/@body/@blocks.2/@instructions.0/@target"
          name="local_k" uses="#//@actions.0/@body/@blocks.0/@instructions.2/@indexes.0/@use #//@actions.0/@body/@blocks.2/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.2/@target"
          name="tmp_out_key" uses="#//@actions.0/@body/@blocks.1/@condition/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target"
          name="local_main_result" uses="#//@actions.0/@body/@blocks.1/@thenBlocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="9">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.0/@inputPattern/@variables.0"/>
          <target variable="#//@actions.0/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@actions.0/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="11">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@body/@locals.1"/>
          </indexes>
          <source variable="Constants.ir#//@constants.6"/>
          <target variable="#//@actions.0/@body/@locals.2"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="11">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@body/@locals.0"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@body/@locals.2"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.1"/>
            <target variable="#//@actions.0/@body/@locals.3"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="12">
            <target variable="#//@stateVars.1"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.3"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="33"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@actions.0/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="14">
          <target variable="#//@stateVars.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="33"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.0">
      <numTokensMap key="#//@inputs.0" value="1"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.0/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="9" name="InData" uses="#//@actions.0/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeUint"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.0/@inputPattern/@variables.0" value="#//@inputs.0"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="9" name="isSchedulable_read_data">
      <locals assignable="true" defs="#//@actions.0/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.0/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>read_data</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="17" name="print">
      <locals assignable="true" defs="#//@actions.1/@body/@blocks.0/@instructions.0/@target"
          name="local_k" uses="#//@actions.1/@body/@blocks.1/@condition/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint"/>
      </locals>
      <locals assignable="true" defs="#//@actions.1/@body/@blocks.0/@instructions.1/@target"
          name="local_KEYSIZE" uses="#//@actions.1/@body/@blocks.1/@condition/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint"/>
      </locals>
      <locals assignable="true" defs="#//@actions.1/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target"
          name="local_main_result" uses="#//@actions.1/@body/@blocks.1/@thenBlocks.0/@instructions.1/@arguments.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@actions.1/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.2"/>
          <target variable="#//@actions.1/@body/@locals.1"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="19">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.1/@body/@locals.0"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.1/@body/@locals.1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.1"/>
            <target variable="#//@actions.1/@body/@locals.2"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="20" procedure="#//@procs.0">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprString" value="main_result := "/>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.1/@body/@locals.2"/>
              </value>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprString" value="\n"/>
            </arguments>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="17" name="isSchedulable_print">
      <locals assignable="true" defs="#//@actions.1/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.1/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.1/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.1/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>print</identifiers>
    </tag>
  </actions>
  <fsm initialState="#//@fsm/@vertices.0">
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.0" target="#//@fsm/@vertices.1"
        actions="#//@actions.0"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.1" target="#//@fsm/@vertices.0"
        actions="#//@actions.1"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="input_data" incoming="#//@fsm/@edges.1"
        outgoing="#//@fsm/@edges.0"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="output" incoming="#//@fsm/@edges.0"
        outgoing="#//@fsm/@edges.1"/>
  </fsm>
  <inputs label="InData">
    <type xsi:type="net.sf.orcc.ir:TypeUint"/>
  </inputs>
  <procs name="print" native="true">
    <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
  </procs>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.2/@instructions.1/@target"
      lineNumber="6" name="k" uses="#//@actions.0/@body/@blocks.0/@instructions.1/@source #//@actions.0/@body/@blocks.2/@instructions.0/@source #//@actions.1/@body/@blocks.0/@instructions.0/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="0">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeUint"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.1/@thenBlocks.0/@instructions.1/@target"
      lineNumber="7" name="main_result" uses="#//@actions.0/@body/@blocks.1/@thenBlocks.0/@instructions.0/@source #//@actions.1/@body/@blocks.1/@thenBlocks.0/@instructions.0/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="0">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeUint"/>
  </stateVars>
</net.sf.orcc.df:Actor>
