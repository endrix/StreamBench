<?xml version="1.0" encoding="UTF-8"?>
<net.sf.orcc.df:Actor xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:net.sf.orcc.df="http://orcc.sf.net/model/2011/Df" xmlns:net.sf.orcc.ir="http://orcc.sf.net/model/2011/Ir"
    label="gsm.lpc.Autocorrelation" actionsOutsideFsm="#//@actions.0"
    fileName="/StreamBench/src/gsm/lpc/Autocorrelation.cal" lineNumber="39">
  <actions>
    <body lineNumber="60" name="untagged_0">
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.3/@blocks.0/@instructions.1/@target"
          lineNumber="62" name="temp" uses="#//@actions.0/@body/@blocks.3/@blocks.1/@condition/@e1/@use #//@actions.0/@body/@blocks.3/@blocks.1/@thenBlocks.0/@instructions.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="16"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.2/@instructions.0/@target #//@actions.0/@body/@blocks.3/@blocks.1/@thenBlocks.0/@instructions.0/@target"
          lineNumber="63" name="smax" uses="#//@actions.0/@body/@blocks.3/@blocks.1/@condition/@e2/@use #//@actions.0/@body/@blocks.4/@condition/@e1/@use #//@actions.0/@body/@blocks.4/@elseBlocks.0/@instructions.0/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="16"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.4/@thenBlocks.0/@instructions.0/@target #//@actions.0/@body/@blocks.4/@elseBlocks.0/@instructions.2/@target"
          lineNumber="64" name="scalauto" uses="#//@actions.0/@body/@blocks.5/@condition/@e1/@e1/@use #//@actions.0/@body/@blocks.5/@condition/@e2/@e1/@use #//@actions.0/@body/@blocks.5/@thenBlocks.0/@instructions.0/@value/@use #//@actions.0/@body/@blocks.12/@condition/@e1/@use #//@actions.0/@body/@blocks.12/@thenBlocks.1/@blocks.0/@instructions.1/@value/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="16"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.4/@elseBlocks.0/@instructions.0/@target"
          lineNumber="65" name="smax_longword" uses="#//@actions.0/@body/@blocks.4/@elseBlocks.0/@instructions.1/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.5/@thenBlocks.0/@instructions.0/@target"
          lineNumber="66" name="n" uses="#//@actions.0/@body/@blocks.5/@thenBlocks.1/@blocks.0/@instructions.1/@arguments.1/@value/@e2/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.0/@target #//@actions.0/@body/@blocks.1/@blocks.0/@instructions.2/@target"
          name="idx_S" uses="#//@actions.0/@body/@blocks.1/@blocks.0/@instructions.0/@indexes.0/@use #//@actions.0/@body/@blocks.1/@condition/@e1/@use #//@actions.0/@body/@blocks.1/@blocks.0/@instructions.1/@indexes.0/@use #//@actions.0/@body/@blocks.1/@blocks.0/@instructions.2/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.1/@blocks.0/@instructions.0/@target"
          name="local_S" uses="#//@actions.0/@body/@blocks.1/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="16"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.2/@instructions.1/@target #//@actions.0/@body/@blocks.3/@blocks.2/@instructions.0/@target"
          name="k" uses="#//@actions.0/@body/@blocks.3/@condition/@e1/@use #//@actions.0/@body/@blocks.3/@blocks.0/@instructions.0/@indexes.0/@use #//@actions.0/@body/@blocks.3/@blocks.2/@instructions.0/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.3/@blocks.0/@instructions.0/@target"
          name="tmp_s" uses="#//@actions.0/@body/@blocks.3/@blocks.0/@instructions.1/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="16"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.4/@elseBlocks.0/@instructions.1/@target"
          name="tmp_GSM_NORM" uses="#//@actions.0/@body/@blocks.4/@elseBlocks.0/@instructions.2/@value/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="16"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.5/@thenBlocks.0/@instructions.1/@target #//@actions.0/@body/@blocks.5/@thenBlocks.1/@blocks.0/@instructions.3/@target"
          name="k0" uses="#//@actions.0/@body/@blocks.5/@thenBlocks.1/@condition/@e1/@use #//@actions.0/@body/@blocks.5/@thenBlocks.1/@blocks.0/@instructions.2/@indexes.0/@use #//@actions.0/@body/@blocks.5/@thenBlocks.1/@blocks.0/@instructions.0/@indexes.0/@use #//@actions.0/@body/@blocks.5/@thenBlocks.1/@blocks.0/@instructions.3/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.5/@thenBlocks.1/@blocks.0/@instructions.0/@target"
          name="tmp_s0" uses="#//@actions.0/@body/@blocks.5/@thenBlocks.1/@blocks.0/@instructions.1/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="16"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.5/@thenBlocks.1/@blocks.0/@instructions.1/@target"
          name="tmp_GSM_MULT_R" uses="#//@actions.0/@body/@blocks.5/@thenBlocks.1/@blocks.0/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="16"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.6/@instructions.0/@target #//@actions.0/@body/@blocks.7/@blocks.0/@instructions.1/@target"
          name="k1" uses="#//@actions.0/@body/@blocks.7/@condition/@e1/@use #//@actions.0/@body/@blocks.7/@blocks.0/@instructions.0/@indexes.0/@use #//@actions.0/@body/@blocks.7/@blocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.8/@instructions.43/@target #//@actions.0/@body/@blocks.9/@blocks.0/@instructions.10/@target"
          name="i" uses="#//@actions.0/@body/@blocks.9/@condition/@e1/@use #//@actions.0/@body/@blocks.9/@blocks.0/@instructions.10/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.10/@instructions.0/@target #//@actions.0/@body/@blocks.11/@blocks.0/@instructions.2/@target"
          name="k2" uses="#//@actions.0/@body/@blocks.11/@condition/@e1/@use #//@actions.0/@body/@blocks.11/@blocks.0/@instructions.1/@indexes.0/@use #//@actions.0/@body/@blocks.11/@blocks.0/@instructions.0/@indexes.0/@use #//@actions.0/@body/@blocks.11/@blocks.0/@instructions.2/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.11/@blocks.0/@instructions.0/@target"
          name="tmp_lacf" uses="#//@actions.0/@body/@blocks.11/@blocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.12/@thenBlocks.0/@instructions.0/@target #//@actions.0/@body/@blocks.12/@thenBlocks.1/@blocks.0/@instructions.2/@target"
          name="k3" uses="#//@actions.0/@body/@blocks.12/@thenBlocks.1/@condition/@e1/@use #//@actions.0/@body/@blocks.12/@thenBlocks.1/@blocks.0/@instructions.1/@indexes.0/@use #//@actions.0/@body/@blocks.12/@thenBlocks.1/@blocks.0/@instructions.0/@indexes.0/@use #//@actions.0/@body/@blocks.12/@thenBlocks.1/@blocks.0/@instructions.2/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.12/@thenBlocks.1/@blocks.0/@instructions.0/@target"
          name="tmp_s1" uses="#//@actions.0/@body/@blocks.12/@thenBlocks.1/@blocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="16"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.13/@instructions.0/@target #//@actions.0/@body/@blocks.14/@blocks.0/@instructions.2/@target"
          name="idx_s" uses="#//@actions.0/@body/@blocks.14/@blocks.0/@instructions.0/@indexes.0/@use #//@actions.0/@body/@blocks.14/@condition/@e1/@use #//@actions.0/@body/@blocks.14/@blocks.0/@instructions.1/@indexes.0/@use #//@actions.0/@body/@blocks.14/@blocks.0/@instructions.2/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.14/@blocks.0/@instructions.0/@target"
          name="local_s" uses="#//@actions.0/@body/@blocks.14/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="16"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.15/@instructions.0/@target #//@actions.0/@body/@blocks.16/@blocks.0/@instructions.2/@target"
          name="idx_lacf" uses="#//@actions.0/@body/@blocks.16/@blocks.0/@instructions.0/@indexes.0/@use #//@actions.0/@body/@blocks.16/@condition/@e1/@use #//@actions.0/@body/@blocks.16/@blocks.0/@instructions.1/@indexes.0/@use #//@actions.0/@body/@blocks.16/@blocks.0/@instructions.2/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.16/@blocks.0/@instructions.0/@target"
          name="local_lacf" uses="#//@actions.0/@body/@blocks.16/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.0/@body/@locals.5"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockWhile">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@body/@locals.5"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="160">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="8"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.5"/>
            </indexes>
            <source variable="#//@actions.0/@inputPattern/@variables.0"/>
            <target variable="#//@actions.0/@body/@locals.6"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.5"/>
            </indexes>
            <target variable="#//@stateVars.1"/>
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.6"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstAssign">
            <target variable="#//@actions.0/@body/@locals.5"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.5"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt"/>
            </value>
          </instructions>
        </blocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="72">
          <target variable="#//@actions.0/@body/@locals.1"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="73">
          <target variable="#//@actions.0/@body/@locals.7"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="73">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LE">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@body/@locals.7"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="159">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="8"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="74">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.7"/>
            </indexes>
            <source variable="#//@stateVars.1"/>
            <target variable="#//@actions.0/@body/@locals.8"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="74" procedure="../Constants.ir#//@procedures.1">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.8"/>
              </value>
            </arguments>
            <target variable="#//@actions.0/@body/@locals.0"/>
          </instructions>
        </blocks>
        <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="75">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="GT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.0"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="76">
              <target variable="#//@actions.0/@body/@locals.1"/>
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.0"/>
              </value>
            </instructions>
          </thenBlocks>
        </blocks>
        <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="73">
            <target variable="#//@actions.0/@body/@locals.7"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.7"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt"/>
            </value>
          </instructions>
        </blocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="81">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@body/@locals.1"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="84">
            <target variable="#//@actions.0/@body/@locals.3"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="16">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="5"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="47"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="85" procedure="../Constants.ir#//@procedures.6">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.3"/>
              </value>
            </arguments>
            <target variable="#//@actions.0/@body/@locals.9"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="85">
            <target variable="#//@actions.0/@body/@locals.2"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprInt" value="4">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.9"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="16"/>
            </value>
          </instructions>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="82">
            <target variable="#//@actions.0/@body/@locals.2"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="88">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LOGIC_AND">
          <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="GT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.2"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="LE">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.2"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="4">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="89">
            <target variable="#//@actions.0/@body/@locals.4"/>
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.2"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="90">
            <target variable="#//@actions.0/@body/@locals.10"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="90">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LE">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.10"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="159">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="8"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="91">
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.10"/>
              </indexes>
              <source variable="#//@stateVars.1"/>
              <target variable="#//@actions.0/@body/@locals.11"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="91" procedure="../Constants.ir#//@procedures.5">
              <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
                <value xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.0/@body/@locals.11"/>
                </value>
              </arguments>
              <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
                <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
                  <e1 xsi:type="net.sf.orcc.ir:ExprInt" value="16384">
                    <type xsi:type="net.sf.orcc.ir:TypeUint" size="15"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
                    <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                      <use variable="#//@actions.0/@body/@locals.4"/>
                    </e1>
                    <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                      <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                    </e2>
                    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="15"/>
                </value>
              </arguments>
              <target variable="#//@actions.0/@body/@locals.12"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="91">
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.10"/>
              </indexes>
              <target variable="#//@stateVars.1"/>
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.12"/>
              </value>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="90">
              <target variable="#//@actions.0/@body/@locals.10"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.0/@body/@locals.10"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt"/>
              </value>
            </instructions>
          </blocks>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="95">
          <target variable="#//@actions.0/@body/@locals.13"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="95">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LE">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@body/@locals.13"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="7">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="96">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.13"/>
            </indexes>
            <target variable="#//@stateVars.0"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="95">
            <target variable="#//@actions.0/@body/@locals.13"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.13"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt"/>
            </value>
          </instructions>
        </blocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="100" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="101" procedure="#//@procs.1"/>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="102" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="103" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="104" procedure="#//@procs.1"/>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="105" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="106" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="107" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="2">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="108" procedure="#//@procs.1"/>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="109" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="110" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="111" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="2">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="112" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="3">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="113" procedure="#//@procs.1"/>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="114" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="115" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="116" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="2">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="117" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="3">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="118" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="4">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="119" procedure="#//@procs.1"/>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="120" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="121" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="122" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="2">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="123" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="3">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="124" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="4">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="125" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="5">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="126" procedure="#//@procs.1"/>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="127" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="128" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="129" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="2">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="130" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="3">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="131" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="4">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="132" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="5">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="133" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="6">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="134" procedure="#//@procs.1"/>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="135" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="136" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="137" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="2">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="138" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="3">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="139" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="4">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="140" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="5">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="141" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="6">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="142" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="7">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="144">
          <target variable="#//@actions.0/@body/@locals.14"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="8">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
          </value>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="144">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LE">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@body/@locals.14"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="159">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="8"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="146" procedure="#//@procs.1"/>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="148" procedure="#//@procs.0">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@stateVars.1"/>
              </value>
            </arguments>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="149" procedure="#//@procs.0">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@stateVars.1"/>
              </value>
            </arguments>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="150" procedure="#//@procs.0">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="2">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
              </value>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@stateVars.1"/>
              </value>
            </arguments>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="151" procedure="#//@procs.0">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="3">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
              </value>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@stateVars.1"/>
              </value>
            </arguments>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="152" procedure="#//@procs.0">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="4">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
              </value>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@stateVars.1"/>
              </value>
            </arguments>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="153" procedure="#//@procs.0">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="5">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
              </value>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@stateVars.1"/>
              </value>
            </arguments>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="154" procedure="#//@procs.0">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="6">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
              </value>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@stateVars.1"/>
              </value>
            </arguments>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="155" procedure="#//@procs.0">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="7">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
              </value>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@stateVars.1"/>
              </value>
            </arguments>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="156" procedure="#//@procs.0">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="8">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
              </value>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@stateVars.1"/>
              </value>
            </arguments>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="144">
            <target variable="#//@actions.0/@body/@locals.14"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.14"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt"/>
            </value>
          </instructions>
        </blocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="159">
          <target variable="#//@actions.0/@body/@locals.15"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="159">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LE">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@body/@locals.15"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="8">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="160">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.15"/>
            </indexes>
            <source variable="#//@stateVars.0"/>
            <target variable="#//@actions.0/@body/@locals.16"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="160">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.15"/>
            </indexes>
            <target variable="#//@stateVars.0"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.16"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="159">
            <target variable="#//@actions.0/@body/@locals.15"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.15"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt"/>
            </value>
          </instructions>
        </blocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="164">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="GT">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@body/@locals.2"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="165">
            <target variable="#//@actions.0/@body/@locals.17"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="165">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LE">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.17"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="159">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="8"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="166">
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.17"/>
              </indexes>
              <source variable="#//@stateVars.1"/>
              <target variable="#//@actions.0/@body/@locals.18"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="166">
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.17"/>
              </indexes>
              <target variable="#//@stateVars.1"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.0/@body/@locals.18"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.0/@body/@locals.2"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="79"/>
              </value>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="165">
              <target variable="#//@actions.0/@body/@locals.17"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.0/@body/@locals.17"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt"/>
              </value>
            </instructions>
          </blocks>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.0/@body/@locals.19"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockWhile">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@body/@locals.19"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="160">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="8"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.19"/>
            </indexes>
            <source variable="#//@stateVars.1"/>
            <target variable="#//@actions.0/@body/@locals.20"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.19"/>
            </indexes>
            <target variable="#//@actions.0/@outputPattern/@variables.0"/>
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.20"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstAssign">
            <target variable="#//@actions.0/@body/@locals.19"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.19"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt"/>
            </value>
          </instructions>
        </blocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.0/@body/@locals.21"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockWhile">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@body/@locals.21"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="9">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.21"/>
            </indexes>
            <source variable="#//@stateVars.0"/>
            <target variable="#//@actions.0/@body/@locals.22"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.21"/>
            </indexes>
            <target variable="#//@actions.0/@outputPattern/@variables.1"/>
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.22"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstAssign">
            <target variable="#//@actions.0/@body/@locals.21"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.21"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt"/>
            </value>
          </instructions>
        </blocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.0">
      <numTokensMap key="#//@inputs.0" value="160"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.0/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="60" name="S" uses="#//@actions.0/@body/@blocks.1/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="160">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="8"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="16"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.0/@inputPattern/@variables.0" value="#//@inputs.0"/>
    </inputPattern>
    <outputPattern ports="#//@outputs.0 #//@outputs.1">
      <numTokensMap key="#//@outputs.0" value="160"/>
      <numTokensMap key="#//@outputs.1" value="9"/>
      <portToVarMap key="#//@outputs.0" value="#//@actions.0/@outputPattern/@variables.0"/>
      <portToVarMap key="#//@outputs.1" value="#//@actions.0/@outputPattern/@variables.1"/>
      <variables assignable="true" defs="#//@actions.0/@body/@blocks.14/@blocks.0/@instructions.1/@target"
          lineNumber="60" name="SO">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="160">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="8"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="16"/>
        </type>
      </variables>
      <variables assignable="true" defs="#//@actions.0/@body/@blocks.16/@blocks.0/@instructions.1/@target"
          lineNumber="60" name="L_ACF">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="9">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.0/@outputPattern/@variables.0" value="#//@outputs.0"/>
      <varToPortMap key="#//@actions.0/@outputPattern/@variables.1" value="#//@outputs.1"/>
    </outputPattern>
    <peekPattern/>
    <scheduler lineNumber="60" name="isSchedulable_untagged_0">
      <locals assignable="true" defs="#//@actions.0/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.0/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag/>
  </actions>
  <inputs label="S">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="16"/>
  </inputs>
  <outputs label="SO">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="16"/>
  </outputs>
  <outputs label="L_ACF">
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </outputs>
  <procs lineNumber="50" name="STEP">
    <locals assignable="true" defs="#//@procs.0/@blocks.0/@instructions.0/@target"
        name="tmp_lacf" uses="#//@procs.0/@blocks.0/@instructions.5/@value/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.0/@blocks.0/@instructions.1/@target #//@procs.0/@blocks.0/@instructions.3/@target"
        name="local_sl" uses="#//@procs.0/@blocks.0/@instructions.2/@indexes.0/@use #//@procs.0/@blocks.0/@instructions.4/@indexes.0/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.0/@blocks.0/@instructions.2/@target"
        name="tmp_s" uses="#//@procs.0/@blocks.0/@instructions.5/@value/@e2/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt" size="16"/>
    </locals>
    <locals assignable="true" defs="#//@procs.0/@blocks.0/@instructions.4/@target"
        name="tmp_s0" uses="#//@procs.0/@blocks.0/@instructions.5/@value/@e2/@e2/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt" size="16"/>
    </locals>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="52">
        <indexes xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.0/@parameters.0/@variable"/>
        </indexes>
        <source variable="#//@stateVars.0"/>
        <target variable="#//@procs.0/@locals.0"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.2"/>
        <target variable="#//@procs.0/@locals.1"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="52">
        <indexes xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.0/@locals.1"/>
        </indexes>
        <source variable="#//@procs.0/@parameters.1/@variable"/>
        <target variable="#//@procs.0/@locals.2"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.2"/>
        <target variable="#//@procs.0/@locals.1"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="52">
        <indexes xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.0/@locals.1"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.0/@parameters.0/@variable"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeInt"/>
        </indexes>
        <source variable="#//@procs.0/@parameters.1/@variable"/>
        <target variable="#//@procs.0/@locals.3"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="52">
        <indexes xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.0/@parameters.0/@variable"/>
        </indexes>
        <target variable="#//@stateVars.0"/>
        <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.0/@locals.0"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="TIMES">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.0/@locals.2"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.0/@locals.3"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
    </blocks>
    <parameters>
      <variable assignable="true" lineNumber="50" name="k" uses="#//@procs.0/@blocks.0/@instructions.5/@indexes.0/@use #//@procs.0/@blocks.0/@instructions.0/@indexes.0/@use #//@procs.0/@blocks.0/@instructions.4/@indexes.0/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </variable>
    </parameters>
    <parameters>
      <variable assignable="true" lineNumber="50" name="s" uses="#//@procs.0/@blocks.0/@instructions.2/@source #//@procs.0/@blocks.0/@instructions.4/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="160">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="8"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="16"/>
        </type>
      </variable>
    </parameters>
    <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
  </procs>
  <procs lineNumber="55" name="NEXTI">
    <locals assignable="true" defs="#//@procs.1/@blocks.0/@instructions.0/@target"
        name="local_sl" uses="#//@procs.1/@blocks.0/@instructions.1/@value/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.2"/>
        <target variable="#//@procs.1/@locals.0"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="57">
        <target variable="#//@stateVars.2"/>
        <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.1/@locals.0"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
    </blocks>
    <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
  </procs>
  <stateVars assignable="true" defs="#//@procs.0/@blocks.0/@instructions.5/@target #//@actions.0/@body/@blocks.7/@blocks.0/@instructions.0/@target #//@actions.0/@body/@blocks.11/@blocks.0/@instructions.1/@target"
      lineNumber="45" name="lacf" uses="#//@procs.0/@blocks.0/@instructions.0/@source #//@actions.0/@body/@blocks.11/@blocks.0/@instructions.0/@source #//@actions.0/@body/@blocks.16/@blocks.0/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeList">
      <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="9">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
      </sizeExpr>
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </type>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.1/@blocks.0/@instructions.1/@target #//@actions.0/@body/@blocks.5/@thenBlocks.1/@blocks.0/@instructions.2/@target #//@actions.0/@body/@blocks.12/@thenBlocks.1/@blocks.0/@instructions.1/@target"
      lineNumber="46" name="s" uses="#//@actions.0/@body/@blocks.3/@blocks.0/@instructions.0/@source #//@actions.0/@body/@blocks.5/@thenBlocks.1/@blocks.0/@instructions.0/@source #//@actions.0/@body/@blocks.8/@instructions.0/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.2/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.3/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.5/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.6/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.7/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.9/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.10/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.11/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.12/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.14/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.15/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.16/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.17/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.18/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.20/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.21/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.22/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.23/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.24/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.25/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.27/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.28/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.29/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.30/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.31/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.32/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.33/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.35/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.36/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.37/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.38/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.39/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.40/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.41/@arguments.1/@value/@use #//@actions.0/@body/@blocks.8/@instructions.42/@arguments.1/@value/@use #//@actions.0/@body/@blocks.9/@blocks.0/@instructions.1/@arguments.1/@value/@use #//@actions.0/@body/@blocks.9/@blocks.0/@instructions.2/@arguments.1/@value/@use #//@actions.0/@body/@blocks.9/@blocks.0/@instructions.3/@arguments.1/@value/@use #//@actions.0/@body/@blocks.9/@blocks.0/@instructions.4/@arguments.1/@value/@use #//@actions.0/@body/@blocks.9/@blocks.0/@instructions.5/@arguments.1/@value/@use #//@actions.0/@body/@blocks.9/@blocks.0/@instructions.6/@arguments.1/@value/@use #//@actions.0/@body/@blocks.9/@blocks.0/@instructions.7/@arguments.1/@value/@use #//@actions.0/@body/@blocks.9/@blocks.0/@instructions.8/@arguments.1/@value/@use #//@actions.0/@body/@blocks.9/@blocks.0/@instructions.9/@arguments.1/@value/@use #//@actions.0/@body/@blocks.12/@thenBlocks.1/@blocks.0/@instructions.0/@source #//@actions.0/@body/@blocks.14/@blocks.0/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeList">
      <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="160">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="8"/>
      </sizeExpr>
      <type xsi:type="net.sf.orcc.ir:TypeInt" size="16"/>
    </type>
  </stateVars>
  <stateVars assignable="true" defs="#//@procs.1/@blocks.0/@instructions.1/@target"
      lineNumber="48" name="sl" uses="#//@procs.0/@blocks.0/@instructions.1/@source #//@procs.0/@blocks.0/@instructions.3/@source #//@procs.1/@blocks.0/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
</net.sf.orcc.df:Actor>
