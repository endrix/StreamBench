<?xml version="1.0" encoding="UTF-8"?>
<net.sf.orcc.df:Actor xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:net.sf.orcc.df="http://orcc.sf.net/model/2011/Df" xmlns:net.sf.orcc.ir="http://orcc.sf.net/model/2011/Ir"
    label="mpeg2motion.AlgoMotion" fileName="/StreamBench/src/mpeg2motion/AlgoMotion.cal"
    lineNumber="5">
  <actions>
    <body lineNumber="287" name="input">
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.0/@target #//@actions.0/@body/@blocks.1/@blocks.1/@instructions.1/@target"
          lineNumber="289" name="i" uses="#//@actions.0/@body/@blocks.1/@condition/@e1/@use #//@actions.0/@body/@blocks.1/@blocks.0/@blocks.0/@instructions.1/@indexes.0/@use #//@actions.0/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.1/@indexes.0/@use #//@actions.0/@body/@blocks.1/@blocks.1/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.1/@target #//@actions.0/@body/@blocks.1/@blocks.0/@blocks.2/@instructions.2/@target #//@actions.0/@body/@blocks.1/@blocks.1/@instructions.0/@target"
          lineNumber="290" name="j" uses="#//@actions.0/@body/@blocks.1/@blocks.0/@condition/@e1/@use #//@actions.0/@body/@blocks.1/@blocks.0/@blocks.0/@instructions.1/@indexes.1/@use #//@actions.0/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.1/@indexes.1/@use #//@actions.0/@body/@blocks.1/@blocks.0/@blocks.2/@instructions.2/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.2/@target #//@actions.0/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.3/@target #//@actions.0/@body/@blocks.1/@blocks.0/@blocks.2/@instructions.0/@target"
          lineNumber="291" name="k" uses="#//@actions.0/@body/@blocks.1/@blocks.0/@blocks.1/@condition/@e1/@use #//@actions.0/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.1/@indexes.2/@use #//@actions.0/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.3/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.3/@target #//@actions.0/@body/@blocks.1/@blocks.0/@blocks.2/@instructions.1/@target"
          lineNumber="292" name="in_mvfs_i" uses="#//@actions.0/@body/@blocks.1/@blocks.0/@blocks.0/@instructions.0/@indexes.0/@use #//@actions.0/@body/@blocks.1/@blocks.0/@blocks.2/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.4/@target #//@actions.0/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.2/@target"
          lineNumber="293" name="in_pmv_i" uses="#//@actions.0/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.0/@indexes.0/@use #//@actions.0/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.2/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.1/@blocks.0/@blocks.0/@instructions.0/@target"
          name="tmp_INMVFS" uses="#//@actions.0/@body/@blocks.1/@blocks.0/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.0/@target"
          name="tmp_INPMV" uses="#//@actions.0/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="289">
          <target variable="#//@actions.0/@body/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="290">
          <target variable="#//@actions.0/@body/@locals.1"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="291">
          <target variable="#//@actions.0/@body/@locals.2"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="292">
          <target variable="#//@actions.0/@body/@locals.3"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="293">
          <target variable="#//@actions.0/@body/@locals.4"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="295">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@body/@locals.0"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <blocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="296">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="297">
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.3"/>
              </indexes>
              <source variable="#//@actions.0/@inputPattern/@variables.0"/>
              <target variable="#//@actions.0/@body/@locals.5"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="297">
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.0"/>
              </indexes>
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.1"/>
              </indexes>
              <target variable="#//@stateVars.2"/>
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.5"/>
              </value>
            </instructions>
          </blocks>
          <blocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="298">
            <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.2"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </condition>
            <joinBlock/>
            <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="299">
                <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.0/@body/@locals.4"/>
                </indexes>
                <source variable="#//@actions.0/@inputPattern/@variables.1"/>
                <target variable="#//@actions.0/@body/@locals.6"/>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="299">
                <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.0/@body/@locals.0"/>
                </indexes>
                <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.0/@body/@locals.1"/>
                </indexes>
                <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.0/@body/@locals.2"/>
                </indexes>
                <target variable="#//@stateVars.0"/>
                <value xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.0/@body/@locals.6"/>
                </value>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="300">
                <target variable="#//@actions.0/@body/@locals.4"/>
                <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.0/@body/@locals.4"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                    <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
                </value>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="301">
                <target variable="#//@actions.0/@body/@locals.2"/>
                <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.0/@body/@locals.2"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                    <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
                </value>
              </instructions>
            </blocks>
          </blocks>
          <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="303">
              <target variable="#//@actions.0/@body/@locals.2"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="304">
              <target variable="#//@actions.0/@body/@locals.3"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.0/@body/@locals.3"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
              </value>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="305">
              <target variable="#//@actions.0/@body/@locals.1"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.0/@body/@locals.1"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
              </value>
            </instructions>
          </blocks>
        </blocks>
        <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="307">
            <target variable="#//@actions.0/@body/@locals.1"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="308">
            <target variable="#//@actions.0/@body/@locals.0"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.0"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
            </value>
          </instructions>
        </blocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="311" procedure="#//@procs.4"/>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.0 #//@inputs.1">
      <numTokensMap key="#//@inputs.0" value="4"/>
      <numTokensMap key="#//@inputs.1" value="8"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.0/@inputPattern/@variables.0"/>
      <portToVarMap key="#//@inputs.1" value="#//@actions.0/@inputPattern/@variables.1"/>
      <variables assignable="true" lineNumber="287" name="INMVFS" uses="#//@actions.0/@body/@blocks.1/@blocks.0/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="4">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeUint"/>
        </type>
      </variables>
      <variables assignable="true" lineNumber="287" name="INPMV" uses="#//@actions.0/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="8">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeUint"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.0/@inputPattern/@variables.0" value="#//@inputs.0"/>
      <varToPortMap key="#//@actions.0/@inputPattern/@variables.1" value="#//@inputs.1"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="287" name="isSchedulable_input">
      <locals assignable="true" defs="#//@actions.0/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.0/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>input</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="314" name="process">
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="316" procedure="#//@procs.10"/>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="314" name="isSchedulable_process">
      <locals assignable="true" defs="#//@actions.1/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.1/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.1/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.1/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>process</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="319" name="output">
      <locals assignable="true" defs="#//@actions.2/@body/@blocks.0/@instructions.0/@target #//@actions.2/@body/@blocks.1/@blocks.1/@instructions.1/@target"
          lineNumber="321" name="i" uses="#//@actions.2/@body/@blocks.1/@condition/@e1/@use #//@actions.2/@body/@blocks.1/@blocks.0/@blocks.0/@instructions.0/@indexes.0/@use #//@actions.2/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.0/@indexes.0/@use #//@actions.2/@body/@blocks.1/@blocks.1/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.2/@body/@blocks.0/@instructions.1/@target #//@actions.2/@body/@blocks.1/@blocks.0/@blocks.2/@instructions.2/@target #//@actions.2/@body/@blocks.1/@blocks.1/@instructions.0/@target"
          lineNumber="322" name="j" uses="#//@actions.2/@body/@blocks.1/@blocks.0/@condition/@e1/@use #//@actions.2/@body/@blocks.1/@blocks.0/@blocks.0/@instructions.0/@indexes.1/@use #//@actions.2/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.0/@indexes.1/@use #//@actions.2/@body/@blocks.1/@blocks.0/@blocks.2/@instructions.2/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.2/@body/@blocks.0/@instructions.2/@target #//@actions.2/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.3/@target #//@actions.2/@body/@blocks.1/@blocks.0/@blocks.2/@instructions.0/@target"
          lineNumber="323" name="k" uses="#//@actions.2/@body/@blocks.1/@blocks.0/@blocks.1/@condition/@e1/@use #//@actions.2/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.0/@indexes.2/@use #//@actions.2/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.3/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.2/@body/@blocks.0/@instructions.3/@target #//@actions.2/@body/@blocks.1/@blocks.0/@blocks.2/@instructions.1/@target"
          lineNumber="324" name="out_mvfs_i" uses="#//@actions.2/@body/@blocks.1/@blocks.0/@blocks.0/@instructions.1/@indexes.0/@use #//@actions.2/@body/@blocks.1/@blocks.0/@blocks.2/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.2/@body/@blocks.0/@instructions.4/@target #//@actions.2/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.2/@target"
          lineNumber="325" name="out_pmv_i" uses="#//@actions.2/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.1/@indexes.0/@use #//@actions.2/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.2/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.2/@body/@blocks.1/@blocks.0/@blocks.0/@instructions.0/@target"
          name="tmp_motion_vertical_field_select" uses="#//@actions.2/@body/@blocks.1/@blocks.0/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint"/>
      </locals>
      <locals assignable="true" defs="#//@actions.2/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.0/@target"
          name="tmp_PMV" uses="#//@actions.2/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="321">
          <target variable="#//@actions.2/@body/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="322">
          <target variable="#//@actions.2/@body/@locals.1"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="323">
          <target variable="#//@actions.2/@body/@locals.2"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="324">
          <target variable="#//@actions.2/@body/@locals.3"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="325">
          <target variable="#//@actions.2/@body/@locals.4"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="329">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.2/@body/@locals.0"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <blocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="330">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.2/@body/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="331">
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.2/@body/@locals.0"/>
              </indexes>
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.2/@body/@locals.1"/>
              </indexes>
              <source variable="#//@stateVars.2"/>
              <target variable="#//@actions.2/@body/@locals.5"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="331">
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.2/@body/@locals.3"/>
              </indexes>
              <target variable="#//@actions.2/@outputPattern/@variables.0"/>
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.2/@body/@locals.5"/>
              </value>
            </instructions>
          </blocks>
          <blocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="332">
            <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.2/@body/@locals.2"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </condition>
            <joinBlock/>
            <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="333">
                <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.2/@body/@locals.0"/>
                </indexes>
                <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.2/@body/@locals.1"/>
                </indexes>
                <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.2/@body/@locals.2"/>
                </indexes>
                <source variable="#//@stateVars.0"/>
                <target variable="#//@actions.2/@body/@locals.6"/>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="333">
                <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.2/@body/@locals.4"/>
                </indexes>
                <target variable="#//@actions.2/@outputPattern/@variables.1"/>
                <value xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.2/@body/@locals.6"/>
                </value>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="334">
                <target variable="#//@actions.2/@body/@locals.4"/>
                <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.2/@body/@locals.4"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                    <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
                </value>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="335">
                <target variable="#//@actions.2/@body/@locals.2"/>
                <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.2/@body/@locals.2"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                    <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
                </value>
              </instructions>
            </blocks>
          </blocks>
          <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="337">
              <target variable="#//@actions.2/@body/@locals.2"/>
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="338">
              <target variable="#//@actions.2/@body/@locals.3"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.2/@body/@locals.3"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
              </value>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="339">
              <target variable="#//@actions.2/@body/@locals.1"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.2/@body/@locals.1"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
              </value>
            </instructions>
          </blocks>
        </blocks>
        <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="341">
            <target variable="#//@actions.2/@body/@locals.1"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="342">
            <target variable="#//@actions.2/@body/@locals.0"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.2/@body/@locals.0"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
            </value>
          </instructions>
        </blocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern ports="#//@outputs.0 #//@outputs.1">
      <numTokensMap key="#//@outputs.0" value="4"/>
      <numTokensMap key="#//@outputs.1" value="8"/>
      <portToVarMap key="#//@outputs.0" value="#//@actions.2/@outputPattern/@variables.0"/>
      <portToVarMap key="#//@outputs.1" value="#//@actions.2/@outputPattern/@variables.1"/>
      <variables assignable="true" defs="#//@actions.2/@body/@blocks.1/@blocks.0/@blocks.0/@instructions.1/@target"
          lineNumber="319" name="OUTMVFS">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="4">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeUint"/>
        </type>
      </variables>
      <variables assignable="true" defs="#//@actions.2/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.1/@target"
          lineNumber="319" name="OUTPMV">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="8">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeUint"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.2/@outputPattern/@variables.0" value="#//@outputs.0"/>
      <varToPortMap key="#//@actions.2/@outputPattern/@variables.1" value="#//@outputs.1"/>
    </outputPattern>
    <peekPattern/>
    <scheduler lineNumber="319" name="isSchedulable_output">
      <locals assignable="true" defs="#//@actions.2/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.2/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.2/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.2/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>output</identifiers>
    </tag>
  </actions>
  <fsm initialState="#//@fsm/@vertices.1">
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.1" target="#//@fsm/@vertices.0"
        actions="#//@actions.0"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.0" target="#//@fsm/@vertices.2"
        actions="#//@actions.1"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.2" target="#//@fsm/@vertices.1"
        actions="#//@actions.2"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="busy" incoming="#//@fsm/@edges.0"
        outgoing="#//@fsm/@edges.1"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="read" incoming="#//@fsm/@edges.2"
        outgoing="#//@fsm/@edges.0"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="write" incoming="#//@fsm/@edges.1"
        outgoing="#//@fsm/@edges.2"/>
  </fsm>
  <inputs label="INMVFS">
    <type xsi:type="net.sf.orcc.ir:TypeUint"/>
  </inputs>
  <inputs label="INPMV">
    <type xsi:type="net.sf.orcc.ir:TypeUint"/>
  </inputs>
  <outputs label="OUTMVFS">
    <type xsi:type="net.sf.orcc.ir:TypeUint"/>
  </outputs>
  <outputs label="OUTPMV">
    <type xsi:type="net.sf.orcc.ir:TypeUint"/>
  </outputs>
  <procs lineNumber="116" name="Show_Bits">
    <locals assignable="true" defs="#//@procs.0/@blocks.0/@instructions.0/@target"
        name="local_ld_Bfr" uses="#//@procs.0/@blocks.0/@instructions.1/@value/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.14"/>
        <target variable="#//@procs.0/@locals.0"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstReturn">
        <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.0/@locals.0"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="MOD">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprInt" value="32">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="6"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.0/@parameters.0/@variable"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="32">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="6"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="6"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeUint"/>
        </value>
      </instructions>
    </blocks>
    <parameters>
      <variable assignable="true" lineNumber="116" name="N" uses="#//@procs.0/@blocks.0/@instructions.1/@value/@e2/@e1/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </variable>
    </parameters>
    <returnType xsi:type="net.sf.orcc.ir:TypeUint"/>
  </procs>
  <procs lineNumber="39" name="read">
    <locals assignable="true" defs="#//@procs.1/@blocks.1/@instructions.0/@target #//@procs.1/@blocks.2/@blocks.0/@instructions.4/@target #//@procs.1/@blocks.2/@blocks.1/@instructions.0/@target"
        name="local_n_tmp" uses="#//@procs.1/@blocks.2/@condition/@e1/@use #//@procs.1/@blocks.2/@blocks.0/@instructions.5/@value/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.1/@blocks.2/@blocks.0/@instructions.0/@target"
        name="tmp_inRdbfr" uses="#//@procs.1/@blocks.2/@blocks.0/@instructions.1/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <locals assignable="true" defs="#//@procs.1/@blocks.3/@instructions.0/@target"
        name="local_read_ret" uses="#//@procs.1/@blocks.3/@instructions.1/@indexes.0/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="40">
        <target variable="#//@stateVars.17"/>
        <value xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.1/@parameters.2/@variable"/>
        </value>
      </instructions>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.17"/>
        <target variable="#//@procs.1/@locals.0"/>
      </instructions>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="42">
      <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="GT">
        <e1 xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.1/@locals.0"/>
        </e1>
        <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
        </e2>
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </condition>
      <joinBlock/>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="43">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.1/@parameters.1/@variable"/>
          </indexes>
          <source variable="Constants.ir#//@constants.11"/>
          <target variable="#//@procs.1/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="43">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.1/@parameters.0/@variable"/>
          </indexes>
          <target variable="#//@stateVars.11"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.1/@locals.1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="45">
          <target variable="#//@procs.1/@parameters.0/@variable"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.1/@parameters.0/@variable"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="46">
          <target variable="#//@procs.1/@parameters.1/@variable"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.1/@parameters.1/@variable"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.17"/>
          <target variable="#//@procs.1/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="47">
          <target variable="#//@stateVars.17"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.1/@locals.0"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt"/>
          </value>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.17"/>
          <target variable="#//@procs.1/@locals.0"/>
        </instructions>
      </blocks>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.27"/>
        <target variable="#//@procs.1/@locals.2"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="50">
        <indexes xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.1/@locals.2"/>
        </indexes>
        <target variable="#//@stateVars.26"/>
        <value xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.1/@parameters.2/@variable"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
    </blocks>
    <parameters>
      <variable assignable="true" defs="#//@procs.1/@blocks.2/@blocks.0/@instructions.2/@target"
          lineNumber="39" name="p1" uses="#//@procs.1/@blocks.2/@blocks.0/@instructions.1/@indexes.0/@use #//@procs.1/@blocks.2/@blocks.0/@instructions.2/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </variable>
    </parameters>
    <parameters>
      <variable assignable="true" defs="#//@procs.1/@blocks.2/@blocks.0/@instructions.3/@target"
          lineNumber="39" name="p2" uses="#//@procs.1/@blocks.2/@blocks.0/@instructions.0/@indexes.0/@use #//@procs.1/@blocks.2/@blocks.0/@instructions.3/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </variable>
    </parameters>
    <parameters>
      <variable assignable="true" lineNumber="39" name="n" uses="#//@procs.1/@blocks.0/@instructions.0/@value/@use #//@procs.1/@blocks.3/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </variable>
    </parameters>
    <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
  </procs>
  <procs lineNumber="52" name="Fill_Buffer">
    <locals assignable="true" defs="#//@procs.2/@blocks.0/@instructions.1/@target"
        name="local_read_ret" uses="#//@procs.2/@blocks.0/@instructions.2/@indexes.0/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.2/@blocks.0/@instructions.2/@target"
        name="tmp_ret" uses="#//@procs.2/@blocks.0/@instructions.3/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.2/@blocks.0/@instructions.5/@target"
        name="local_System_Stream_Flag" uses="#//@procs.2/@blocks.1/@condition/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <locals assignable="true" defs="#//@procs.2/@blocks.1/@thenBlocks.0/@instructions.0/@target"
        name="local_ld_Rdmax" uses="#//@procs.2/@blocks.1/@thenBlocks.0/@instructions.1/@value/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <locals assignable="true" defs="#//@procs.2/@blocks.2/@instructions.0/@target #//@procs.2/@blocks.3/@thenBlocks.0/@instructions.0/@target #//@procs.2/@blocks.3/@thenBlocks.2/@instructions.0/@target #//@procs.2/@blocks.3/@thenBlocks.3/@blocks.0/@instructions.0/@target #//@procs.2/@blocks.3/@thenBlocks.3/@blocks.0/@instructions.2/@target #//@procs.2/@blocks.3/@thenBlocks.3/@blocks.1/@instructions.0/@target #//@procs.2/@blocks.3/@thenBlocks.4/@instructions.0/@target #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.0/@target #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.3/@target #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.6/@target #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.9/@target #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.12/@target #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.1/@instructions.0/@target"
        name="local_Buffer_Level" uses="#//@procs.2/@blocks.3/@condition/@e1/@use #//@procs.2/@blocks.3/@thenBlocks.1/@condition/@e1/@use #//@procs.2/@blocks.3/@thenBlocks.3/@condition/@e1/@e1/@use #//@procs.2/@blocks.3/@thenBlocks.3/@blocks.0/@instructions.1/@indexes.0/@use #//@procs.2/@blocks.3/@thenBlocks.3/@blocks.0/@instructions.3/@value/@e1/@use #//@procs.2/@blocks.3/@thenBlocks.5/@condition/@e1/@use #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.2/@indexes.0/@use #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.5/@indexes.0/@e1/@use #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.8/@indexes.0/@e1/@use #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.11/@indexes.0/@e1/@use #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.13/@value/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.1/@target #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.4/@target #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.7/@target #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.10/@target"
        name="local_SEQUENCE_END_CODE" uses="#//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.2/@value/@e1/@use #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.5/@value/@e1/@use #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.8/@value/@e1/@use #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.11/@value/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="53" procedure="#//@procs.1">
        <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </arguments>
        <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </arguments>
        <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="2048">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="12"/>
          </value>
        </arguments>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.27"/>
        <target variable="#//@procs.2/@locals.0"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="54">
        <indexes xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.2/@locals.0"/>
        </indexes>
        <source variable="#//@stateVars.26"/>
        <target variable="#//@procs.2/@locals.1"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="54">
        <target variable="#//@stateVars.18"/>
        <value xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.2/@locals.1"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="55">
        <target variable="#//@stateVars.12"/>
        <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.10"/>
        <target variable="#//@procs.2/@locals.2"/>
      </instructions>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="57">
      <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
        <e1 xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.2/@locals.2"/>
        </e1>
        <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
        </e2>
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </condition>
      <joinBlock/>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.13"/>
          <target variable="#//@procs.2/@locals.3"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="58">
          <target variable="#//@stateVars.13"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.2/@locals.3"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2048">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="12"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
          </value>
        </instructions>
      </thenBlocks>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.18"/>
        <target variable="#//@procs.2/@locals.4"/>
      </instructions>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="62">
      <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
        <e1 xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.2/@locals.4"/>
        </e1>
        <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2048">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="12"/>
        </e2>
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </condition>
      <joinBlock/>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.18"/>
          <target variable="#//@procs.2/@locals.4"/>
        </instructions>
      </thenBlocks>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="64">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.2/@locals.4"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="65">
            <target variable="#//@stateVars.18"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </thenBlocks>
      </thenBlocks>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.18"/>
          <target variable="#//@procs.2/@locals.4"/>
        </instructions>
      </thenBlocks>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="69">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
          <e1 xsi:type="net.sf.orcc.ir:ExprBinary">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.2/@locals.4"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="3">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="3"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.18"/>
            <target variable="#//@procs.2/@locals.4"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="70">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.2/@locals.4"/>
            </indexes>
            <target variable="#//@stateVars.11"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.18"/>
            <target variable="#//@procs.2/@locals.4"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="71">
            <target variable="#//@stateVars.18"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.2/@locals.4"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
            </value>
          </instructions>
        </blocks>
        <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.18"/>
            <target variable="#//@procs.2/@locals.4"/>
          </instructions>
        </blocks>
      </thenBlocks>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.18"/>
          <target variable="#//@procs.2/@locals.4"/>
        </instructions>
      </thenBlocks>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="75">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.2/@locals.4"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2048">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="12"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.18"/>
            <target variable="#//@procs.2/@locals.4"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="Constants.ir#//@constants.0"/>
            <target variable="#//@procs.2/@locals.5"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="76">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.2/@locals.4"/>
            </indexes>
            <target variable="#//@stateVars.11"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.2/@locals.5"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="24">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="5"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeUint"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.18"/>
            <target variable="#//@procs.2/@locals.4"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="Constants.ir#//@constants.0"/>
            <target variable="#//@procs.2/@locals.5"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="77">
            <indexes xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.2/@locals.4"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
            </indexes>
            <target variable="#//@stateVars.11"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.2/@locals.5"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="16">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="5"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeUint"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.18"/>
            <target variable="#//@procs.2/@locals.4"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="Constants.ir#//@constants.0"/>
            <target variable="#//@procs.2/@locals.5"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="78">
            <indexes xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.2/@locals.4"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
            </indexes>
            <target variable="#//@stateVars.11"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.2/@locals.5"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="8">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeUint"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.18"/>
            <target variable="#//@procs.2/@locals.4"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="Constants.ir#//@constants.0"/>
            <target variable="#//@procs.2/@locals.5"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="79">
            <indexes xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.2/@locals.4"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="3">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
            </indexes>
            <target variable="#//@stateVars.11"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.2/@locals.5"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="255">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="8"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="8"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.18"/>
            <target variable="#//@procs.2/@locals.4"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="80">
            <target variable="#//@stateVars.18"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.2/@locals.4"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
            </value>
          </instructions>
        </blocks>
        <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.18"/>
            <target variable="#//@procs.2/@locals.4"/>
          </instructions>
        </blocks>
      </thenBlocks>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
    </blocks>
    <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
  </procs>
  <procs lineNumber="84" name="Flush_Buffer">
    <locals assignable="true" defs="#//@procs.3/@blocks.0/@instructions.0/@target #//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@blocks.0/@instructions.0/@target #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.2/@instructions.0/@target"
        name="local_ld_Bfr" uses="#//@procs.3/@blocks.0/@instructions.1/@value/@e1/@use #//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@blocks.0/@instructions.4/@value/@e1/@use #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.2/@instructions.4/@value/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <locals assignable="true" defs="#//@procs.3/@blocks.0/@instructions.2/@target #//@procs.3/@blocks.0/@instructions.4/@target"
        name="local_ld_Incnt" uses="#//@procs.3/@blocks.0/@instructions.3/@value/@e1/@use #//@procs.3/@blocks.0/@instructions.5/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.3/@blocks.0/@instructions.6/@target #//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.0/@target #//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@blocks.0/@instructions.3/@target #//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@blocks.0/@instructions.7/@target #//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@blocks.1/@instructions.0/@target #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.0/@target #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.2/@instructions.3/@target #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.2/@instructions.7/@target #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.3/@instructions.0/@target #//@procs.3/@blocks.1/@thenBlocks.2/@instructions.0/@target"
        name="local_Incnt" uses="#//@procs.3/@blocks.1/@condition/@e1/@use #//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@condition/@e1/@use #//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@blocks.0/@instructions.4/@value/@e2/@e2/@e2/@use #//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@blocks.0/@instructions.8/@value/@e1/@use #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@condition/@e1/@use #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.2/@instructions.4/@value/@e2/@e2/@e2/@use #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.2/@instructions.8/@value/@e1/@use #//@procs.3/@blocks.1/@thenBlocks.2/@instructions.1/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.3/@blocks.1/@thenBlocks.0/@instructions.0/@target #//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@blocks.0/@instructions.1/@target #//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@blocks.0/@instructions.5/@target #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.0/@instructions.0/@target #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.2/@instructions.1/@target #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.2/@instructions.5/@target"
        name="local_ld_Rdptr" uses="#//@procs.3/@blocks.1/@thenBlocks.1/@condition/@e1/@use #//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@blocks.0/@instructions.2/@indexes.0/@use #//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@blocks.0/@instructions.6/@value/@e1/@use #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.1/@condition/@e1/@use #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.2/@instructions.2/@indexes.0/@use #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.2/@instructions.6/@value/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <locals assignable="true" defs="#//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@blocks.0/@instructions.2/@target"
        name="tmp_ld_Rdbfr" uses="#//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@blocks.0/@instructions.4/@value/@e2/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <locals assignable="true" defs="#//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.2/@instructions.2/@target"
        name="tmp_ld_Rdbfr0" uses="#//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.2/@instructions.4/@value/@e2/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.14"/>
        <target variable="#//@procs.3/@locals.0"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="85">
        <target variable="#//@stateVars.14"/>
        <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.3/@locals.0"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.3/@parameters.0/@variable"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="95"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.15"/>
        <target variable="#//@procs.3/@locals.1"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="86">
        <target variable="#//@stateVars.15"/>
        <value xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.3/@locals.1"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.3/@parameters.0/@variable"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeInt"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.15"/>
        <target variable="#//@procs.3/@locals.1"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="87">
        <target variable="#//@stateVars.16"/>
        <value xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.3/@locals.1"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.16"/>
        <target variable="#//@procs.3/@locals.2"/>
      </instructions>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="89">
      <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LE">
        <e1 xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.3/@locals.2"/>
        </e1>
        <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="24">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="5"/>
        </e2>
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </condition>
      <joinBlock/>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.12"/>
          <target variable="#//@procs.3/@locals.3"/>
        </instructions>
      </thenBlocks>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="90">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.3/@locals.3"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2044">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="11"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.16"/>
            <target variable="#//@procs.3/@locals.2"/>
          </instructions>
        </elseBlocks>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="97">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LE">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.3/@locals.2"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="24">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="5"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.12"/>
              <target variable="#//@procs.3/@locals.3"/>
            </instructions>
          </blocks>
          <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="98">
            <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="GE">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.3/@locals.3"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2048">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="12"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </condition>
            <joinBlock/>
            <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="99" procedure="#//@procs.2"/>
            </thenBlocks>
          </blocks>
          <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.14"/>
              <target variable="#//@procs.3/@locals.0"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.12"/>
              <target variable="#//@procs.3/@locals.3"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="101">
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.3/@locals.3"/>
              </indexes>
              <source variable="#//@stateVars.11"/>
              <target variable="#//@procs.3/@locals.5"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.16"/>
              <target variable="#//@procs.3/@locals.2"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="101">
              <target variable="#//@stateVars.14"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="BITOR">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.3/@locals.0"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@procs.3/@locals.5"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
                    <e1 xsi:type="net.sf.orcc.ir:ExprInt" value="24">
                      <type xsi:type="net.sf.orcc.ir:TypeUint" size="5"/>
                    </e1>
                    <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                      <use variable="#//@procs.3/@locals.2"/>
                    </e2>
                    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="95"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="95"/>
              </value>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.12"/>
              <target variable="#//@procs.3/@locals.3"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="102">
              <target variable="#//@stateVars.12"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.3/@locals.3"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="33"/>
              </value>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.16"/>
              <target variable="#//@procs.3/@locals.2"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="103">
              <target variable="#//@stateVars.16"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.3/@locals.2"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="8">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
              </value>
            </instructions>
          </blocks>
          <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.16"/>
              <target variable="#//@procs.3/@locals.2"/>
            </instructions>
          </blocks>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.16"/>
            <target variable="#//@procs.3/@locals.2"/>
          </instructions>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="91">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LE">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.3/@locals.2"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="24">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="5"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.14"/>
              <target variable="#//@procs.3/@locals.0"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.12"/>
              <target variable="#//@procs.3/@locals.3"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="92">
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.3/@locals.3"/>
              </indexes>
              <source variable="#//@stateVars.11"/>
              <target variable="#//@procs.3/@locals.4"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.16"/>
              <target variable="#//@procs.3/@locals.2"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="92">
              <target variable="#//@stateVars.14"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="BITOR">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.3/@locals.0"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@procs.3/@locals.4"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
                    <e1 xsi:type="net.sf.orcc.ir:ExprInt" value="24">
                      <type xsi:type="net.sf.orcc.ir:TypeUint" size="5"/>
                    </e1>
                    <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                      <use variable="#//@procs.3/@locals.2"/>
                    </e2>
                    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="95"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="95"/>
              </value>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.12"/>
              <target variable="#//@procs.3/@locals.3"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="93">
              <target variable="#//@stateVars.12"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.3/@locals.3"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="33"/>
              </value>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.16"/>
              <target variable="#//@procs.3/@locals.2"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="94">
              <target variable="#//@stateVars.16"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.3/@locals.2"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="8">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
              </value>
            </instructions>
          </blocks>
          <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.16"/>
              <target variable="#//@procs.3/@locals.2"/>
            </instructions>
          </blocks>
        </thenBlocks>
      </thenBlocks>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.16"/>
          <target variable="#//@procs.3/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="106">
          <target variable="#//@stateVars.15"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.3/@locals.2"/>
          </value>
        </instructions>
      </thenBlocks>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
    </blocks>
    <parameters>
      <variable assignable="true" lineNumber="84" name="N" uses="#//@procs.3/@blocks.0/@instructions.1/@value/@e2/@use #//@procs.3/@blocks.0/@instructions.3/@value/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </variable>
    </parameters>
    <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
  </procs>
  <procs lineNumber="109" name="Initialize_Buffer">
    <locals assignable="true" defs="#//@procs.4/@blocks.0/@instructions.2/@target"
        name="local_ld_Rdptr" uses="#//@procs.4/@blocks.0/@instructions.3/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="110">
        <target variable="#//@stateVars.15"/>
        <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="111">
        <target variable="#//@stateVars.12"/>
        <value xsi:type="net.sf.orcc.ir:ExprInt" value="2048">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="12"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.12"/>
        <target variable="#//@procs.4/@locals.0"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="112">
        <target variable="#//@stateVars.13"/>
        <value xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.4/@locals.0"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="113">
        <target variable="#//@stateVars.14"/>
        <value xsi:type="net.sf.orcc.ir:ExprInt" value="68157440">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="27"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="114" procedure="#//@procs.3">
        <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </arguments>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
    </blocks>
    <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
  </procs>
  <procs lineNumber="119" name="Get_Bits">
    <locals assignable="true" defs="#//@procs.5/@blocks.0/@instructions.0/@target"
        name="local_gb_ret" uses="#//@procs.5/@blocks.0/@instructions.2/@indexes.0/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.5/@blocks.0/@instructions.1/@target"
        name="tmp_Show_Bits" uses="#//@procs.5/@blocks.0/@instructions.2/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.28"/>
        <target variable="#//@procs.5/@locals.0"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="120" procedure="#//@procs.0">
        <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.5/@parameters.0/@variable"/>
          </value>
        </arguments>
        <target variable="#//@procs.5/@locals.1"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="120">
        <indexes xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.5/@locals.0"/>
        </indexes>
        <target variable="#//@stateVars.26"/>
        <value xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.5/@locals.1"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="121" procedure="#//@procs.3">
        <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.5/@parameters.0/@variable"/>
          </value>
        </arguments>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
    </blocks>
    <parameters>
      <variable assignable="true" lineNumber="119" name="N" uses="#//@procs.5/@blocks.0/@instructions.1/@arguments.0/@value/@use #//@procs.5/@blocks.0/@instructions.3/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </variable>
    </parameters>
    <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
  </procs>
  <procs lineNumber="123" name="Get_motion_code">
    <locals assignable="true" defs="#//@procs.6/@blocks.0/@instructions.1/@target #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.6/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.6/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.6/@target"
        name="local_gb_ret" uses="#//@procs.6/@blocks.0/@instructions.2/@indexes.0/@use #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.7/@indexes.0/@use #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.7/@indexes.0/@use #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.7/@indexes.0/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.6/@blocks.0/@instructions.2/@target"
        name="tmp_ret" uses="#//@procs.6/@blocks.1/@condition/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.6/@blocks.1/@thenBlocks.0/@instructions.0/@target #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.0/@target #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.0/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.0/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.0/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.0/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.0/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.0/@target"
        name="local_gmc_ret" uses="#//@procs.6/@blocks.1/@thenBlocks.0/@instructions.1/@indexes.0/@use #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.3/@indexes.0/@use #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.3/@indexes.0/@use #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.3/@indexes.0/@use #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.3/@indexes.0/@use #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.1/@indexes.0/@use #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.3/@indexes.0/@use #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.3/@indexes.0/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.6/@blocks.1/@elseBlocks.0/@instructions.0/@target"
        name="tmp_Show_Bits" uses="#//@procs.6/@blocks.1/@elseBlocks.0/@instructions.1/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <locals assignable="true" defs="#//@procs.6/@blocks.1/@elseBlocks.0/@instructions.2/@target #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.0/@target #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.2/@target #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.1/@target #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.1/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.0/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.0/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.2/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.1/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.1/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.0/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.0/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.2/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.1/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.1/@target"
        name="local_code" uses="#//@procs.6/@blocks.1/@elseBlocks.1/@condition/@e1/@use #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.1/@value/@e1/@use #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.3/@indexes.0/@use #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.2/@indexes.0/@use #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.2/@indexes.0/@use #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@condition/@e1/@use #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.1/@value/@e1/@use #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.3/@indexes.0/@use #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.2/@indexes.0/@use #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.2/@indexes.0/@use #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@condition/@e1/@use #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.1/@value/@e1/@use #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.3/@indexes.0/@use #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.2/@indexes.0/@use #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.2/@indexes.0/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.3/@target"
        name="tmp_MVtab0" uses="#//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.4/@arguments.0/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.7/@target"
        name="tmp_ret0" uses="#//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.1/@condition/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.2/@target"
        name="tmp_MVtab00" uses="#//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.3/@value/@expr/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.2/@target"
        name="tmp_MVtab01" uses="#//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.3/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.3/@target"
        name="tmp_MVtab1" uses="#//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.4/@arguments.0/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.7/@target"
        name="tmp_ret1" uses="#//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.1/@condition/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.2/@target"
        name="tmp_MVtab10" uses="#//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.3/@value/@expr/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.2/@target"
        name="tmp_MVtab11" uses="#//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.3/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.3/@target"
        name="tmp_MVtab2" uses="#//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.4/@arguments.0/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.7/@target"
        name="tmp_ret2" uses="#//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@condition/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.2/@target"
        name="tmp_MVtab20" uses="#//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.3/@value/@expr/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.2/@target"
        name="tmp_MVtab21" uses="#//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.3/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="124" procedure="#//@procs.5">
        <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </arguments>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.28"/>
        <target variable="#//@procs.6/@locals.0"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="125">
        <indexes xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.6/@locals.0"/>
        </indexes>
        <source variable="#//@stateVars.26"/>
        <target variable="#//@procs.6/@locals.1"/>
      </instructions>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="125">
      <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
        <e1 xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.6/@locals.1"/>
        </e1>
        <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
        </e2>
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </condition>
      <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="128" procedure="#//@procs.0">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="9">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
            </value>
          </arguments>
          <target variable="#//@procs.6/@locals.3"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="128">
          <target variable="#//@stateVars.19"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.6/@locals.3"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.19"/>
          <target variable="#//@procs.6/@locals.4"/>
        </instructions>
      </elseBlocks>
      <elseBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="129">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="GE">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.6/@locals.4"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="64">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="7"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.19"/>
            <target variable="#//@procs.6/@locals.4"/>
          </instructions>
        </elseBlocks>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="139">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="GE">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.6/@locals.4"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="24">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="5"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.19"/>
              <target variable="#//@procs.6/@locals.4"/>
            </instructions>
          </elseBlocks>
          <elseBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="149">
            <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.6/@locals.4"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="12">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </condition>
            <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstLoad">
                <source variable="#//@stateVars.19"/>
                <target variable="#//@procs.6/@locals.4"/>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="152">
                <target variable="#//@stateVars.19"/>
                <value xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@procs.6/@locals.4"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="12">
                    <type xsi:type="net.sf.orcc.ir:TypeUint" size="4"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt"/>
                </value>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstLoad">
                <source variable="#//@stateVars.19"/>
                <target variable="#//@procs.6/@locals.4"/>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="153">
                <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.6/@locals.4"/>
                </indexes>
                <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </indexes>
                <source variable="Constants.ir#//@constants.9"/>
                <target variable="#//@procs.6/@locals.13"/>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="153" procedure="#//@procs.3">
                <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
                  <value xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@procs.6/@locals.13"/>
                  </value>
                </arguments>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="154" procedure="#//@procs.5">
                <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
                  <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                    <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                  </value>
                </arguments>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstLoad">
                <source variable="#//@stateVars.28"/>
                <target variable="#//@procs.6/@locals.0"/>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="155">
                <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.6/@locals.0"/>
                </indexes>
                <source variable="#//@stateVars.26"/>
                <target variable="#//@procs.6/@locals.14"/>
              </instructions>
            </elseBlocks>
            <elseBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="155">
              <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.6/@locals.14"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeBool"/>
              </condition>
              <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
                <instructions xsi:type="net.sf.orcc.ir:InstLoad">
                  <source variable="#//@stateVars.29"/>
                  <target variable="#//@procs.6/@locals.2"/>
                </instructions>
                <instructions xsi:type="net.sf.orcc.ir:InstLoad">
                  <source variable="#//@stateVars.19"/>
                  <target variable="#//@procs.6/@locals.4"/>
                </instructions>
                <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="158">
                  <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@procs.6/@locals.4"/>
                  </indexes>
                  <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                    <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                  </indexes>
                  <source variable="Constants.ir#//@constants.9"/>
                  <target variable="#//@procs.6/@locals.16"/>
                </instructions>
                <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="158">
                  <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@procs.6/@locals.2"/>
                  </indexes>
                  <target variable="#//@stateVars.26"/>
                  <value xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@procs.6/@locals.16"/>
                  </value>
                </instructions>
              </elseBlocks>
              <joinBlock/>
              <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
                <instructions xsi:type="net.sf.orcc.ir:InstLoad">
                  <source variable="#//@stateVars.29"/>
                  <target variable="#//@procs.6/@locals.2"/>
                </instructions>
                <instructions xsi:type="net.sf.orcc.ir:InstLoad">
                  <source variable="#//@stateVars.19"/>
                  <target variable="#//@procs.6/@locals.4"/>
                </instructions>
                <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="156">
                  <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@procs.6/@locals.4"/>
                  </indexes>
                  <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                    <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                  </indexes>
                  <source variable="Constants.ir#//@constants.9"/>
                  <target variable="#//@procs.6/@locals.15"/>
                </instructions>
                <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="156">
                  <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@procs.6/@locals.2"/>
                  </indexes>
                  <target variable="#//@stateVars.26"/>
                  <value xsi:type="net.sf.orcc.ir:ExprUnary" op="MINUS">
                    <expr xsi:type="net.sf.orcc.ir:ExprVar">
                      <use variable="#//@procs.6/@locals.15"/>
                    </expr>
                    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
                  </value>
                </instructions>
              </thenBlocks>
            </elseBlocks>
            <joinBlock/>
            <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstLoad">
                <source variable="#//@stateVars.29"/>
                <target variable="#//@procs.6/@locals.2"/>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="150">
                <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.6/@locals.2"/>
                </indexes>
                <target variable="#//@stateVars.26"/>
                <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </value>
              </instructions>
            </thenBlocks>
          </elseBlocks>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.19"/>
              <target variable="#//@procs.6/@locals.4"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="140">
              <target variable="#//@stateVars.19"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.6/@locals.4"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="3">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt"/>
              </value>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.19"/>
              <target variable="#//@procs.6/@locals.4"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="141">
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.6/@locals.4"/>
              </indexes>
              <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </indexes>
              <source variable="Constants.ir#//@constants.8"/>
              <target variable="#//@procs.6/@locals.9"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="141" procedure="#//@procs.3">
              <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
                <value xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.6/@locals.9"/>
                </value>
              </arguments>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="142" procedure="#//@procs.5">
              <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
                <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </value>
              </arguments>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.28"/>
              <target variable="#//@procs.6/@locals.0"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="143">
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.6/@locals.0"/>
              </indexes>
              <source variable="#//@stateVars.26"/>
              <target variable="#//@procs.6/@locals.10"/>
            </instructions>
          </thenBlocks>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="143">
            <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.6/@locals.10"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </condition>
            <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstLoad">
                <source variable="#//@stateVars.29"/>
                <target variable="#//@procs.6/@locals.2"/>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstLoad">
                <source variable="#//@stateVars.19"/>
                <target variable="#//@procs.6/@locals.4"/>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="146">
                <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.6/@locals.4"/>
                </indexes>
                <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </indexes>
                <source variable="Constants.ir#//@constants.8"/>
                <target variable="#//@procs.6/@locals.12"/>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="146">
                <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.6/@locals.2"/>
                </indexes>
                <target variable="#//@stateVars.26"/>
                <value xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.6/@locals.12"/>
                </value>
              </instructions>
            </elseBlocks>
            <joinBlock/>
            <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstLoad">
                <source variable="#//@stateVars.29"/>
                <target variable="#//@procs.6/@locals.2"/>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstLoad">
                <source variable="#//@stateVars.19"/>
                <target variable="#//@procs.6/@locals.4"/>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="144">
                <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.6/@locals.4"/>
                </indexes>
                <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </indexes>
                <source variable="Constants.ir#//@constants.8"/>
                <target variable="#//@procs.6/@locals.11"/>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="144">
                <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.6/@locals.2"/>
                </indexes>
                <target variable="#//@stateVars.26"/>
                <value xsi:type="net.sf.orcc.ir:ExprUnary" op="MINUS">
                  <expr xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@procs.6/@locals.11"/>
                  </expr>
                  <type xsi:type="net.sf.orcc.ir:TypeInt"/>
                </value>
              </instructions>
            </thenBlocks>
          </thenBlocks>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.19"/>
            <target variable="#//@procs.6/@locals.4"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="130">
            <target variable="#//@stateVars.19"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.6/@locals.4"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="6">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.19"/>
            <target variable="#//@procs.6/@locals.4"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="131">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.6/@locals.4"/>
            </indexes>
            <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </indexes>
            <source variable="Constants.ir#//@constants.7"/>
            <target variable="#//@procs.6/@locals.5"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="131" procedure="#//@procs.3">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.6/@locals.5"/>
              </value>
            </arguments>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="132" procedure="#//@procs.5">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </arguments>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.28"/>
            <target variable="#//@procs.6/@locals.0"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="133">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.6/@locals.0"/>
            </indexes>
            <source variable="#//@stateVars.26"/>
            <target variable="#//@procs.6/@locals.6"/>
          </instructions>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="133">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.6/@locals.6"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.29"/>
              <target variable="#//@procs.6/@locals.2"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.19"/>
              <target variable="#//@procs.6/@locals.4"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="136">
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.6/@locals.4"/>
              </indexes>
              <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </indexes>
              <source variable="Constants.ir#//@constants.7"/>
              <target variable="#//@procs.6/@locals.8"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="136">
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.6/@locals.2"/>
              </indexes>
              <target variable="#//@stateVars.26"/>
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.6/@locals.8"/>
              </value>
            </instructions>
          </elseBlocks>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.29"/>
              <target variable="#//@procs.6/@locals.2"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.19"/>
              <target variable="#//@procs.6/@locals.4"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="134">
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.6/@locals.4"/>
              </indexes>
              <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </indexes>
              <source variable="Constants.ir#//@constants.7"/>
              <target variable="#//@procs.6/@locals.7"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="134">
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.6/@locals.2"/>
              </indexes>
              <target variable="#//@stateVars.26"/>
              <value xsi:type="net.sf.orcc.ir:ExprUnary" op="MINUS">
                <expr xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.6/@locals.7"/>
                </expr>
                <type xsi:type="net.sf.orcc.ir:TypeInt"/>
              </value>
            </instructions>
          </thenBlocks>
        </thenBlocks>
      </elseBlocks>
      <joinBlock/>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.29"/>
          <target variable="#//@procs.6/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="126">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.6/@locals.2"/>
          </indexes>
          <target variable="#//@stateVars.26"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
      </thenBlocks>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
    </blocks>
    <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
  </procs>
  <procs lineNumber="165" name="decode_motion_vector">
    <locals assignable="true" defs="#//@procs.7/@blocks.0/@instructions.2/@target #//@procs.7/@blocks.4/@instructions.0/@target"
        name="local_full_pel_vector" uses="#//@procs.7/@blocks.1/@condition/@e1/@use #//@procs.7/@blocks.5/@condition/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.7/@blocks.1/@thenBlocks.0/@instructions.0/@target"
        name="tmp_pmv_tmp" uses="#//@procs.7/@blocks.1/@thenBlocks.0/@instructions.1/@value/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.7/@blocks.1/@elseBlocks.0/@instructions.0/@target"
        name="tmp_pmv_tmp0" uses="#//@procs.7/@blocks.1/@elseBlocks.0/@instructions.1/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.7/@blocks.2/@instructions.0/@target #//@procs.7/@blocks.3/@thenBlocks.0/@instructions.1/@target #//@procs.7/@blocks.3/@elseBlocks.0/@instructions.0/@target #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.0/@instructions.1/@target"
        name="local_motion_code" uses="#//@procs.7/@blocks.3/@condition/@e1/@use #//@procs.7/@blocks.3/@thenBlocks.0/@instructions.3/@value/@e2/@e1/@e1/@e1/@e1/@use #//@procs.7/@blocks.3/@elseBlocks.1/@condition/@e1/@use #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.0/@instructions.3/@value/@e2/@e1/@e1/@e1/@e1/@expr/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.7/@blocks.3/@thenBlocks.0/@instructions.0/@target #//@procs.7/@blocks.3/@thenBlocks.0/@instructions.4/@target #//@procs.7/@blocks.3/@thenBlocks.1/@thenBlocks.0/@instructions.0/@target #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.0/@instructions.0/@target #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.0/@instructions.4/@target #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.0/@target #//@procs.7/@blocks.5/@thenBlocks.0/@instructions.0/@target #//@procs.7/@blocks.5/@elseBlocks.0/@instructions.0/@target"
        name="local_vec" uses="#//@procs.7/@blocks.3/@thenBlocks.0/@instructions.3/@value/@e1/@use #//@procs.7/@blocks.3/@thenBlocks.1/@condition/@e1/@use #//@procs.7/@blocks.3/@thenBlocks.1/@thenBlocks.0/@instructions.3/@value/@e1/@use #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.0/@instructions.3/@value/@e1/@use #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.1/@condition/@e1/@use #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.3/@value/@e1/@use #//@procs.7/@blocks.5/@thenBlocks.0/@instructions.1/@value/@e1/@use #//@procs.7/@blocks.5/@elseBlocks.0/@instructions.1/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.7/@blocks.3/@thenBlocks.0/@instructions.2/@target #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.0/@instructions.2/@target"
        name="local_motion_residual" uses="#//@procs.7/@blocks.3/@thenBlocks.0/@instructions.3/@value/@e2/@e1/@e2/@use #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.0/@instructions.3/@value/@e2/@e1/@e2/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.7/@blocks.3/@thenBlocks.0/@instructions.5/@target #//@procs.7/@blocks.3/@thenBlocks.1/@thenBlocks.0/@instructions.1/@target #//@procs.7/@blocks.3/@thenBlocks.1/@thenBlocks.0/@instructions.2/@target #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.0/@instructions.5/@target #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.1/@target #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.2/@target"
        name="local_lim" uses="#//@procs.7/@blocks.3/@thenBlocks.1/@condition/@e2/@use #//@procs.7/@blocks.3/@thenBlocks.1/@thenBlocks.0/@instructions.3/@value/@e2/@e1/@use #//@procs.7/@blocks.3/@thenBlocks.1/@thenBlocks.0/@instructions.3/@value/@e2/@e2/@use #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.1/@condition/@e2/@expr/@use #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.3/@value/@e2/@e1/@use #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.3/@value/@e2/@e2/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.7/@blocks.6/@instructions.0/@target"
        name="local_dmv_ret_r_size" uses="#//@procs.7/@blocks.6/@instructions.1/@indexes.0/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="166">
        <target variable="#//@procs.7/@parameters.1/@variable"/>
        <value xsi:type="net.sf.orcc.ir:ExprBinary" op="MOD">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.7/@parameters.1/@variable"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="32">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="6"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="6"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="167">
        <target variable="#//@stateVars.20"/>
        <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
          <e1 xsi:type="net.sf.orcc.ir:ExprInt" value="16">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="5"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.7/@parameters.1/@variable"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeInt" size="68"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.25"/>
        <target variable="#//@procs.7/@locals.0"/>
      </instructions>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="168">
      <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
        <e1 xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.7/@locals.0"/>
        </e1>
        <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
        </e2>
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </condition>
      <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="171">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.7/@parameters.0/@variable"/>
          </indexes>
          <source variable="#//@stateVars.22"/>
          <target variable="#//@procs.7/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="171">
          <target variable="#//@stateVars.21"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.7/@locals.2"/>
          </value>
        </instructions>
      </elseBlocks>
      <joinBlock/>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="169">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.7/@parameters.0/@variable"/>
          </indexes>
          <source variable="#//@stateVars.22"/>
          <target variable="#//@procs.7/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="169">
          <target variable="#//@stateVars.21"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.7/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt"/>
          </value>
        </instructions>
      </thenBlocks>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.23"/>
        <target variable="#//@procs.7/@locals.3"/>
      </instructions>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="173">
      <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="GT">
        <e1 xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.7/@locals.3"/>
        </e1>
        <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
        </e2>
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </condition>
      <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.23"/>
          <target variable="#//@procs.7/@locals.3"/>
        </instructions>
      </elseBlocks>
      <elseBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="179">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.7/@locals.3"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.21"/>
            <target variable="#//@procs.7/@locals.4"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.23"/>
            <target variable="#//@procs.7/@locals.3"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.24"/>
            <target variable="#//@procs.7/@locals.5"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="180">
            <target variable="#//@stateVars.21"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.7/@locals.4"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                  <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
                    <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
                      <e1 xsi:type="net.sf.orcc.ir:ExprUnary" op="MINUS">
                        <expr xsi:type="net.sf.orcc.ir:ExprVar">
                          <use variable="#//@procs.7/@locals.3"/>
                        </expr>
                        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
                      </e1>
                      <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                        <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                      </e2>
                      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
                    </e1>
                    <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                      <use variable="#//@procs.7/@parameters.1/@variable"/>
                    </e2>
                    <type xsi:type="net.sf.orcc.ir:TypeInt" size="95"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@procs.7/@locals.5"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="96"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="97"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="97"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.21"/>
            <target variable="#//@procs.7/@locals.4"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.20"/>
            <target variable="#//@procs.7/@locals.6"/>
          </instructions>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="181">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.7/@locals.4"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprUnary" op="MINUS">
              <expr xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.7/@locals.6"/>
              </expr>
              <type xsi:type="net.sf.orcc.ir:TypeInt"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.21"/>
              <target variable="#//@procs.7/@locals.4"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.20"/>
              <target variable="#//@procs.7/@locals.6"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.20"/>
              <target variable="#//@procs.7/@locals.6"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="182">
              <target variable="#//@stateVars.21"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.7/@locals.4"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@procs.7/@locals.6"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@procs.7/@locals.6"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="34"/>
              </value>
            </instructions>
          </thenBlocks>
        </thenBlocks>
      </elseBlocks>
      <joinBlock/>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.21"/>
          <target variable="#//@procs.7/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.23"/>
          <target variable="#//@procs.7/@locals.3"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.24"/>
          <target variable="#//@procs.7/@locals.5"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="174">
          <target variable="#//@stateVars.21"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.7/@locals.4"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
                  <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
                    <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                      <use variable="#//@procs.7/@locals.3"/>
                    </e1>
                    <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                      <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                    </e2>
                    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@procs.7/@parameters.1/@variable"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="95"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.7/@locals.5"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="96"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="97"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="98"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.21"/>
          <target variable="#//@procs.7/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.20"/>
          <target variable="#//@procs.7/@locals.6"/>
        </instructions>
      </thenBlocks>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="175">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="GE">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.7/@locals.4"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.7/@locals.6"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.21"/>
            <target variable="#//@procs.7/@locals.4"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.20"/>
            <target variable="#//@procs.7/@locals.6"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.20"/>
            <target variable="#//@procs.7/@locals.6"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="176">
            <target variable="#//@stateVars.21"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.7/@locals.4"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.7/@locals.6"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@procs.7/@locals.6"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
            </value>
          </instructions>
        </thenBlocks>
      </thenBlocks>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.25"/>
        <target variable="#//@procs.7/@locals.0"/>
      </instructions>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="186">
      <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
        <e1 xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.7/@locals.0"/>
        </e1>
        <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
        </e2>
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </condition>
      <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.21"/>
          <target variable="#//@procs.7/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="189">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.7/@parameters.0/@variable"/>
          </indexes>
          <target variable="#//@stateVars.22"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.7/@locals.4"/>
          </value>
        </instructions>
      </elseBlocks>
      <joinBlock/>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.21"/>
          <target variable="#//@procs.7/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="187">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.7/@parameters.0/@variable"/>
          </indexes>
          <target variable="#//@stateVars.22"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.7/@locals.4"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
          </value>
        </instructions>
      </thenBlocks>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.30"/>
        <target variable="#//@procs.7/@locals.7"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="191">
        <indexes xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.7/@locals.7"/>
        </indexes>
        <target variable="#//@stateVars.26"/>
        <value xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.7/@parameters.1/@variable"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
    </blocks>
    <parameters>
      <variable assignable="true" lineNumber="165" name="pred" uses="#//@procs.7/@blocks.1/@thenBlocks.0/@instructions.0/@indexes.0/@use #//@procs.7/@blocks.1/@elseBlocks.0/@instructions.0/@indexes.0/@use #//@procs.7/@blocks.5/@thenBlocks.0/@instructions.1/@indexes.0/@use #//@procs.7/@blocks.5/@elseBlocks.0/@instructions.1/@indexes.0/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </variable>
    </parameters>
    <parameters>
      <variable assignable="true" defs="#//@procs.7/@blocks.0/@instructions.0/@target"
          lineNumber="165" name="r_size" uses="#//@procs.7/@blocks.0/@instructions.0/@value/@e1/@use #//@procs.7/@blocks.0/@instructions.1/@value/@e2/@use #//@procs.7/@blocks.3/@thenBlocks.0/@instructions.3/@value/@e2/@e1/@e1/@e2/@use #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.0/@instructions.3/@value/@e2/@e1/@e1/@e2/@use #//@procs.7/@blocks.6/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </variable>
    </parameters>
    <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
  </procs>
  <procs lineNumber="194" name="Get_dmvector">
    <locals assignable="true" defs="#//@procs.8/@blocks.0/@instructions.1/@target #//@procs.8/@blocks.1/@thenBlocks.0/@instructions.1/@target"
        name="local_gb_ret" uses="#//@procs.8/@blocks.0/@instructions.2/@indexes.0/@use #//@procs.8/@blocks.1/@thenBlocks.0/@instructions.2/@indexes.0/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.8/@blocks.0/@instructions.2/@target"
        name="tmp_ret" uses="#//@procs.8/@blocks.1/@condition/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.8/@blocks.1/@thenBlocks.0/@instructions.2/@target"
        name="tmp_ret0" uses="#//@procs.8/@blocks.1/@thenBlocks.1/@condition/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.8/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.0/@target #//@procs.8/@blocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.0/@target #//@procs.8/@blocks.1/@elseBlocks.0/@instructions.0/@target"
        name="local_get_dmv_ret" uses="#//@procs.8/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.1/@indexes.0/@use #//@procs.8/@blocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.1/@indexes.0/@use #//@procs.8/@blocks.1/@elseBlocks.0/@instructions.1/@indexes.0/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="195" procedure="#//@procs.5">
        <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </arguments>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.28"/>
        <target variable="#//@procs.8/@locals.0"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="196">
        <indexes xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.8/@locals.0"/>
        </indexes>
        <source variable="#//@stateVars.26"/>
        <target variable="#//@procs.8/@locals.1"/>
      </instructions>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="196">
      <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
        <e1 xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.8/@locals.1"/>
        </e1>
        <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
        </e2>
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </condition>
      <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.31"/>
          <target variable="#//@procs.8/@locals.3"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="204">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.8/@locals.3"/>
          </indexes>
          <target variable="#//@stateVars.26"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
      </elseBlocks>
      <joinBlock/>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="197" procedure="#//@procs.5">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.28"/>
          <target variable="#//@procs.8/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="198">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.8/@locals.0"/>
          </indexes>
          <source variable="#//@stateVars.26"/>
          <target variable="#//@procs.8/@locals.2"/>
        </instructions>
      </thenBlocks>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="198">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.8/@locals.2"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.31"/>
            <target variable="#//@procs.8/@locals.3"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="201">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.8/@locals.3"/>
            </indexes>
            <target variable="#//@stateVars.26"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </elseBlocks>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.31"/>
            <target variable="#//@procs.8/@locals.3"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="199">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.8/@locals.3"/>
            </indexes>
            <target variable="#//@stateVars.26"/>
            <value xsi:type="net.sf.orcc.ir:ExprUnary" op="MINUS">
              <expr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </expr>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="2"/>
            </value>
          </instructions>
        </thenBlocks>
      </thenBlocks>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
    </blocks>
    <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
  </procs>
  <procs lineNumber="207" name="motion_vector">
    <locals assignable="true" defs="#//@procs.9/@blocks.0/@instructions.1/@target #//@procs.9/@blocks.4/@instructions.1/@target"
        name="local_gmc_ret" uses="#//@procs.9/@blocks.0/@instructions.2/@indexes.0/@use #//@procs.9/@blocks.4/@instructions.2/@indexes.0/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.9/@blocks.0/@instructions.2/@target"
        name="tmp_ret" uses="#//@procs.9/@blocks.0/@instructions.3/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.9/@blocks.0/@instructions.4/@target #//@procs.9/@blocks.1/@thenBlocks.0/@instructions.0/@target #//@procs.9/@blocks.2/@instructions.0/@target"
        name="local_h_r_size" uses="#//@procs.9/@blocks.1/@condition/@e1/@e1/@use #//@procs.9/@blocks.1/@thenBlocks.0/@instructions.1/@arguments.0/@value/@use #//@procs.9/@blocks.2/@instructions.1/@arguments.1/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <locals assignable="true" defs="#//@procs.9/@blocks.0/@instructions.5/@target #//@procs.9/@blocks.4/@instructions.5/@target"
        name="local_motion_code" uses="#//@procs.9/@blocks.1/@condition/@e2/@e1/@use #//@procs.9/@blocks.5/@condition/@e2/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.9/@blocks.1/@thenBlocks.0/@instructions.2/@target #//@procs.9/@blocks.5/@thenBlocks.0/@instructions.2/@target"
        name="local_gb_ret" uses="#//@procs.9/@blocks.1/@thenBlocks.0/@instructions.3/@indexes.0/@use #//@procs.9/@blocks.5/@thenBlocks.0/@instructions.3/@indexes.0/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.9/@blocks.1/@thenBlocks.0/@instructions.3/@target"
        name="tmp_ret0" uses="#//@procs.9/@blocks.1/@thenBlocks.0/@instructions.4/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.9/@blocks.2/@instructions.2/@target #//@procs.9/@blocks.8/@instructions.2/@target"
        name="local_dmv_ret_r_size" uses="#//@procs.9/@blocks.2/@instructions.3/@indexes.0/@use #//@procs.9/@blocks.8/@instructions.3/@indexes.0/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.9/@blocks.2/@instructions.3/@target"
        name="tmp_ret1" uses="#//@procs.9/@blocks.2/@instructions.4/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.9/@blocks.2/@instructions.5/@target #//@procs.9/@blocks.10/@instructions.0/@target"
        name="local_dmv" uses="#//@procs.9/@blocks.3/@condition/@e1/@use #//@procs.9/@blocks.11/@condition/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <locals assignable="true" defs="#//@procs.9/@blocks.3/@thenBlocks.0/@instructions.1/@target #//@procs.9/@blocks.11/@thenBlocks.0/@instructions.1/@target"
        name="local_get_dmv_ret" uses="#//@procs.9/@blocks.3/@thenBlocks.0/@instructions.2/@indexes.0/@use #//@procs.9/@blocks.11/@thenBlocks.0/@instructions.2/@indexes.0/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.9/@blocks.3/@thenBlocks.0/@instructions.2/@target"
        name="tmp_ret2" uses="#//@procs.9/@blocks.3/@thenBlocks.0/@instructions.3/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.9/@blocks.4/@instructions.2/@target"
        name="tmp_ret3" uses="#//@procs.9/@blocks.4/@instructions.3/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.9/@blocks.4/@instructions.4/@target #//@procs.9/@blocks.5/@thenBlocks.0/@instructions.0/@target #//@procs.9/@blocks.8/@instructions.0/@target"
        name="local_v_r_size" uses="#//@procs.9/@blocks.5/@condition/@e1/@e1/@use #//@procs.9/@blocks.5/@thenBlocks.0/@instructions.1/@arguments.0/@value/@use #//@procs.9/@blocks.8/@instructions.1/@arguments.1/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <locals assignable="true" defs="#//@procs.9/@blocks.5/@thenBlocks.0/@instructions.3/@target"
        name="tmp_ret4" uses="#//@procs.9/@blocks.5/@thenBlocks.0/@instructions.4/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.9/@blocks.6/@instructions.0/@target #//@procs.9/@blocks.8/@instructions.5/@target"
        name="local_mvscale" uses="#//@procs.9/@blocks.7/@condition/@e1/@use #//@procs.9/@blocks.9/@condition/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <locals assignable="true" defs="#//@procs.9/@blocks.7/@thenBlocks.0/@instructions.0/@target"
        name="tmp_pmv_tmp" uses="#//@procs.9/@blocks.7/@thenBlocks.0/@instructions.1/@value/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.9/@blocks.8/@instructions.3/@target"
        name="tmp_ret5" uses="#//@procs.9/@blocks.8/@instructions.4/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.9/@blocks.9/@thenBlocks.0/@instructions.0/@target"
        name="tmp_pmv_tmp0" uses="#//@procs.9/@blocks.9/@thenBlocks.0/@instructions.1/@value/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.9/@blocks.11/@thenBlocks.0/@instructions.2/@target"
        name="tmp_ret6" uses="#//@procs.9/@blocks.11/@thenBlocks.0/@instructions.3/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="210" procedure="#//@procs.6"/>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.29"/>
        <target variable="#//@procs.9/@locals.0"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="211">
        <indexes xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.9/@locals.0"/>
        </indexes>
        <source variable="#//@stateVars.26"/>
        <target variable="#//@procs.9/@locals.1"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="211">
        <target variable="#//@stateVars.23"/>
        <value xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.9/@locals.1"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.6"/>
        <target variable="#//@procs.9/@locals.2"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.23"/>
        <target variable="#//@procs.9/@locals.3"/>
      </instructions>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="212">
      <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LOGIC_AND">
        <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.9/@locals.2"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </e1>
        <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.9/@locals.3"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </e2>
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </condition>
      <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="216">
          <target variable="#//@stateVars.24"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
      </elseBlocks>
      <joinBlock/>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.6"/>
          <target variable="#//@procs.9/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="213" procedure="#//@procs.5">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.9/@locals.2"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.28"/>
          <target variable="#//@procs.9/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="214">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.9/@locals.4"/>
          </indexes>
          <source variable="#//@stateVars.26"/>
          <target variable="#//@procs.9/@locals.5"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="214">
          <target variable="#//@stateVars.24"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.9/@locals.5"/>
          </value>
        </instructions>
      </thenBlocks>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.6"/>
        <target variable="#//@procs.9/@locals.2"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="218" procedure="#//@procs.7">
        <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.9/@parameters.0/@variable"/>
          </value>
        </arguments>
        <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.9/@locals.2"/>
          </value>
        </arguments>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.30"/>
        <target variable="#//@procs.9/@locals.6"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="219">
        <indexes xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.9/@locals.6"/>
        </indexes>
        <source variable="#//@stateVars.26"/>
        <target variable="#//@procs.9/@locals.7"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="219">
        <target variable="#//@stateVars.6"/>
        <value xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.9/@locals.7"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.8"/>
        <target variable="#//@procs.9/@locals.8"/>
      </instructions>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="221">
      <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
        <e1 xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.9/@locals.8"/>
        </e1>
        <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
        </e2>
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </condition>
      <joinBlock/>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="222" procedure="#//@procs.8"/>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.31"/>
          <target variable="#//@procs.9/@locals.9"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="223">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.9/@locals.9"/>
          </indexes>
          <source variable="#//@stateVars.26"/>
          <target variable="#//@procs.9/@locals.10"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="223">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@stateVars.1"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.9/@locals.10"/>
          </value>
        </instructions>
      </thenBlocks>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="228" procedure="#//@procs.6"/>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.29"/>
        <target variable="#//@procs.9/@locals.0"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="229">
        <indexes xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.9/@locals.0"/>
        </indexes>
        <source variable="#//@stateVars.26"/>
        <target variable="#//@procs.9/@locals.11"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="229">
        <target variable="#//@stateVars.23"/>
        <value xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.9/@locals.11"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.7"/>
        <target variable="#//@procs.9/@locals.12"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.23"/>
        <target variable="#//@procs.9/@locals.3"/>
      </instructions>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="230">
      <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LOGIC_AND">
        <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.9/@locals.12"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </e1>
        <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.9/@locals.3"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </e2>
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </condition>
      <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="234">
          <target variable="#//@stateVars.24"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
      </elseBlocks>
      <joinBlock/>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.7"/>
          <target variable="#//@procs.9/@locals.12"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="231" procedure="#//@procs.5">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.9/@locals.12"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.28"/>
          <target variable="#//@procs.9/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="232">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.9/@locals.4"/>
          </indexes>
          <source variable="#//@stateVars.26"/>
          <target variable="#//@procs.9/@locals.13"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="232">
          <target variable="#//@stateVars.24"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.9/@locals.13"/>
          </value>
        </instructions>
      </thenBlocks>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.9"/>
        <target variable="#//@procs.9/@locals.14"/>
      </instructions>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="237">
      <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
        <e1 xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.9/@locals.14"/>
        </e1>
        <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
        </e2>
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </condition>
      <joinBlock/>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="238">
          <indexes xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.9/@parameters.0/@variable"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
          </indexes>
          <source variable="#//@stateVars.22"/>
          <target variable="#//@procs.9/@locals.15"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="238">
          <indexes xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.9/@parameters.0/@variable"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
          </indexes>
          <target variable="#//@stateVars.22"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_RIGHT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.9/@locals.15"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt"/>
          </value>
        </instructions>
      </thenBlocks>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.7"/>
        <target variable="#//@procs.9/@locals.12"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="240" procedure="#//@procs.7">
        <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.9/@parameters.0/@variable"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
          </value>
        </arguments>
        <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.9/@locals.12"/>
          </value>
        </arguments>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.30"/>
        <target variable="#//@procs.9/@locals.6"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="241">
        <indexes xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.9/@locals.6"/>
        </indexes>
        <source variable="#//@stateVars.26"/>
        <target variable="#//@procs.9/@locals.16"/>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="241">
        <target variable="#//@stateVars.7"/>
        <value xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.9/@locals.16"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.9"/>
        <target variable="#//@procs.9/@locals.14"/>
      </instructions>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="243">
      <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
        <e1 xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.9/@locals.14"/>
        </e1>
        <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
        </e2>
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </condition>
      <joinBlock/>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="244">
          <indexes xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.9/@parameters.0/@variable"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
          </indexes>
          <source variable="#//@stateVars.22"/>
          <target variable="#//@procs.9/@locals.17"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="244">
          <indexes xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.9/@parameters.0/@variable"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
          </indexes>
          <target variable="#//@stateVars.22"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="SHIFT_LEFT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.9/@locals.17"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
          </value>
        </instructions>
      </thenBlocks>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.8"/>
        <target variable="#//@procs.9/@locals.8"/>
      </instructions>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="247">
      <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
        <e1 xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.9/@locals.8"/>
        </e1>
        <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
        </e2>
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </condition>
      <joinBlock/>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="248" procedure="#//@procs.8"/>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.31"/>
          <target variable="#//@procs.9/@locals.9"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="249">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.9/@locals.9"/>
          </indexes>
          <source variable="#//@stateVars.26"/>
          <target variable="#//@procs.9/@locals.18"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="249">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@stateVars.1"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.9/@locals.18"/>
          </value>
        </instructions>
      </thenBlocks>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
    </blocks>
    <parameters>
      <variable assignable="true" lineNumber="207" name="pmv_i" uses="#//@procs.9/@blocks.2/@instructions.1/@arguments.0/@value/@use #//@procs.9/@blocks.7/@thenBlocks.0/@instructions.1/@indexes.0/@e1/@use #//@procs.9/@blocks.7/@thenBlocks.0/@instructions.0/@indexes.0/@e1/@use #//@procs.9/@blocks.8/@instructions.1/@arguments.0/@value/@e1/@use #//@procs.9/@blocks.9/@thenBlocks.0/@instructions.1/@indexes.0/@e1/@use #//@procs.9/@blocks.9/@thenBlocks.0/@instructions.0/@indexes.0/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </variable>
    </parameters>
    <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
  </procs>
  <procs lineNumber="252" name="motion_vectors">
    <locals assignable="true" defs="#//@procs.10/@blocks.0/@instructions.0/@target"
        name="local_motion_vector_count" uses="#//@procs.10/@blocks.1/@condition/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <locals assignable="true" defs="#//@procs.10/@blocks.1/@thenBlocks.0/@instructions.0/@target"
        name="local_mv_format" uses="#//@procs.10/@blocks.1/@thenBlocks.1/@condition/@e1/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <locals assignable="true" defs="#//@procs.10/@blocks.1/@thenBlocks.0/@instructions.1/@target"
        name="local_MV_FIELD" uses="#//@procs.10/@blocks.1/@thenBlocks.1/@condition/@e1/@e2/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.10/@blocks.1/@thenBlocks.0/@instructions.2/@target"
        name="local_dmv" uses="#//@procs.10/@blocks.1/@thenBlocks.1/@condition/@e2/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <locals assignable="true" defs="#//@procs.10/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.1/@target #//@procs.10/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.5/@target #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.0/@target #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.3/@target #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.7/@target #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.10/@target #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.13/@target #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.14/@target #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.17/@target #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.18/@target #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.1/@target #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.5/@target #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.8/@target #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.12/@target #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.15/@target #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.19/@target #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.23/@target #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.26/@target #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.30/@target #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.33/@target"
        name="local_s" uses="#//@procs.10/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.4/@indexes.1/@use #//@procs.10/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.8/@indexes.1/@use #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.1/@indexes.1/@use #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.4/@indexes.1/@use #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.9/@indexes.1/@use #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.12/@indexes.1/@use #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.16/@indexes.1/@use #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.15/@indexes.1/@use #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.20/@indexes.1/@use #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.19/@indexes.1/@use #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.4/@indexes.1/@use #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.6/@indexes.1/@use #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.9/@indexes.1/@use #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.14/@indexes.1/@use #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.17/@indexes.1/@use #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.22/@indexes.1/@use #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.24/@indexes.1/@use #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.27/@indexes.1/@use #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.32/@indexes.1/@use #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.35/@indexes.1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <locals assignable="true" defs="#//@procs.10/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.2/@target #//@procs.10/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.6/@target #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.2/@target #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.20/@target"
        name="local_gb_ret" uses="#//@procs.10/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.3/@indexes.0/@use #//@procs.10/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.7/@indexes.0/@use #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.3/@indexes.0/@use #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.21/@indexes.0/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.10/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.3/@target"
        name="tmp_ret" uses="#//@procs.10/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.4/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.10/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.7/@target"
        name="tmp_ret0" uses="#//@procs.10/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.8/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.10/@blocks.1/@thenBlocks.2/@instructions.1/@target"
        name="tmp_PMV" uses="#//@procs.10/@blocks.1/@thenBlocks.2/@instructions.2/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <locals assignable="true" defs="#//@procs.10/@blocks.1/@thenBlocks.2/@instructions.4/@target"
        name="tmp_PMV0" uses="#//@procs.10/@blocks.1/@thenBlocks.2/@instructions.5/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <locals assignable="true" defs="#//@procs.10/@blocks.1/@thenBlocks.2/@instructions.8/@target"
        name="tmp_pmv_tmp" uses="#//@procs.10/@blocks.1/@thenBlocks.2/@instructions.9/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.10/@blocks.1/@thenBlocks.2/@instructions.11/@target"
        name="tmp_pmv_tmp0" uses="#//@procs.10/@blocks.1/@thenBlocks.2/@instructions.12/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.10/@blocks.1/@thenBlocks.2/@instructions.15/@target"
        name="tmp_PMV1" uses="#//@procs.10/@blocks.1/@thenBlocks.2/@instructions.16/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <locals assignable="true" defs="#//@procs.10/@blocks.1/@thenBlocks.2/@instructions.19/@target"
        name="tmp_PMV2" uses="#//@procs.10/@blocks.1/@thenBlocks.2/@instructions.20/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <locals assignable="true" defs="#//@procs.10/@blocks.1/@elseBlocks.0/@instructions.3/@target"
        name="tmp_ret1" uses="#//@procs.10/@blocks.1/@elseBlocks.0/@instructions.4/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.10/@blocks.1/@elseBlocks.0/@instructions.6/@target"
        name="tmp_PMV3" uses="#//@procs.10/@blocks.1/@elseBlocks.0/@instructions.7/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <locals assignable="true" defs="#//@procs.10/@blocks.1/@elseBlocks.0/@instructions.9/@target"
        name="tmp_PMV4" uses="#//@procs.10/@blocks.1/@elseBlocks.0/@instructions.10/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <locals assignable="true" defs="#//@procs.10/@blocks.1/@elseBlocks.0/@instructions.13/@target"
        name="tmp_pmv_tmp1" uses="#//@procs.10/@blocks.1/@elseBlocks.0/@instructions.14/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.10/@blocks.1/@elseBlocks.0/@instructions.16/@target"
        name="tmp_pmv_tmp2" uses="#//@procs.10/@blocks.1/@elseBlocks.0/@instructions.17/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.10/@blocks.1/@elseBlocks.0/@instructions.21/@target"
        name="tmp_ret2" uses="#//@procs.10/@blocks.1/@elseBlocks.0/@instructions.22/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.10/@blocks.1/@elseBlocks.0/@instructions.24/@target"
        name="tmp_PMV5" uses="#//@procs.10/@blocks.1/@elseBlocks.0/@instructions.25/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <locals assignable="true" defs="#//@procs.10/@blocks.1/@elseBlocks.0/@instructions.27/@target"
        name="tmp_PMV6" uses="#//@procs.10/@blocks.1/@elseBlocks.0/@instructions.28/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </locals>
    <locals assignable="true" defs="#//@procs.10/@blocks.1/@elseBlocks.0/@instructions.31/@target"
        name="tmp_pmv_tmp3" uses="#//@procs.10/@blocks.1/@elseBlocks.0/@instructions.32/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.10/@blocks.1/@elseBlocks.0/@instructions.34/@target"
        name="tmp_pmv_tmp4" uses="#//@procs.10/@blocks.1/@elseBlocks.0/@instructions.35/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstLoad">
        <source variable="#//@stateVars.4"/>
        <target variable="#//@procs.10/@locals.0"/>
      </instructions>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="253">
      <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="NE">
        <e1 xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.10/@locals.0"/>
        </e1>
        <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
        </e2>
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </condition>
      <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="268" procedure="#//@procs.5">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@procs.10/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.28"/>
          <target variable="#//@procs.10/@locals.5"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="269">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.5"/>
          </indexes>
          <source variable="#//@stateVars.26"/>
          <target variable="#//@procs.10/@locals.14"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="269">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.4"/>
          </indexes>
          <target variable="#//@stateVars.2"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.14"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@procs.10/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="271">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.4"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@stateVars.0"/>
          <target variable="#//@procs.10/@locals.15"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="271">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@stateVars.22"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.15"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@procs.10/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="272">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.4"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@stateVars.0"/>
          <target variable="#//@procs.10/@locals.16"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="272">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@stateVars.22"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.16"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="273" procedure="#//@procs.9">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@procs.10/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="274">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@stateVars.22"/>
          <target variable="#//@procs.10/@locals.17"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="274">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.4"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@stateVars.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.17"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@procs.10/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="275">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@stateVars.22"/>
          <target variable="#//@procs.10/@locals.18"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="275">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.4"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@stateVars.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.18"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="276" procedure="#//@procs.5">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@procs.10/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.28"/>
          <target variable="#//@procs.10/@locals.5"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="277">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.5"/>
          </indexes>
          <source variable="#//@stateVars.26"/>
          <target variable="#//@procs.10/@locals.19"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="277">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.4"/>
          </indexes>
          <target variable="#//@stateVars.2"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.19"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@procs.10/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="279">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.4"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@stateVars.0"/>
          <target variable="#//@procs.10/@locals.20"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="279">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@stateVars.22"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.20"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@procs.10/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="280">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.4"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@stateVars.0"/>
          <target variable="#//@procs.10/@locals.21"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="280">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@stateVars.22"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.21"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="281" procedure="#//@procs.9">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@procs.10/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="282">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@stateVars.22"/>
          <target variable="#//@procs.10/@locals.22"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="282">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.4"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@stateVars.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.22"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@procs.10/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="283">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@stateVars.22"/>
          <target variable="#//@procs.10/@locals.23"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="283">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.4"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@stateVars.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.23"/>
          </value>
        </instructions>
      </elseBlocks>
      <joinBlock/>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.5"/>
          <target variable="#//@procs.10/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="Constants.ir#//@constants.2"/>
          <target variable="#//@procs.10/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.8"/>
          <target variable="#//@procs.10/@locals.3"/>
        </instructions>
      </thenBlocks>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="254">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LOGIC_AND">
          <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.10/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.10/@locals.2"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.10/@locals.3"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="255" procedure="#//@procs.5">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </value>
            </arguments>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.3"/>
            <target variable="#//@procs.10/@locals.4"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.28"/>
            <target variable="#//@procs.10/@locals.5"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="256">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.10/@locals.5"/>
            </indexes>
            <source variable="#//@stateVars.26"/>
            <target variable="#//@procs.10/@locals.6"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="256">
            <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </indexes>
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.10/@locals.4"/>
            </indexes>
            <target variable="#//@stateVars.2"/>
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.10/@locals.6"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.3"/>
            <target variable="#//@procs.10/@locals.4"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.28"/>
            <target variable="#//@procs.10/@locals.5"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="257">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.10/@locals.5"/>
            </indexes>
            <source variable="#//@stateVars.26"/>
            <target variable="#//@procs.10/@locals.7"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="257">
            <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </indexes>
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.10/@locals.4"/>
            </indexes>
            <target variable="#//@stateVars.2"/>
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.10/@locals.7"/>
            </value>
          </instructions>
        </thenBlocks>
      </thenBlocks>
      <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@procs.10/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="259">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.4"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@stateVars.0"/>
          <target variable="#//@procs.10/@locals.8"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="259">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@stateVars.22"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.8"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@procs.10/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="260">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.4"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@stateVars.0"/>
          <target variable="#//@procs.10/@locals.9"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="260">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@stateVars.22"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.9"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="261" procedure="#//@procs.9">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@procs.10/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="262">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@stateVars.22"/>
          <target variable="#//@procs.10/@locals.10"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="262">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.4"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@stateVars.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.10"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@procs.10/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="263">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@stateVars.22"/>
          <target variable="#//@procs.10/@locals.11"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="263">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.4"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@stateVars.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.11"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@procs.10/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@procs.10/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="265">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.4"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@stateVars.0"/>
          <target variable="#//@procs.10/@locals.12"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="265">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.4"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@stateVars.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.12"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@procs.10/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@procs.10/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="266">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.4"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@stateVars.0"/>
          <target variable="#//@procs.10/@locals.13"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="266">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.4"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@stateVars.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.10/@locals.13"/>
          </value>
        </instructions>
      </thenBlocks>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
    </blocks>
    <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
  </procs>
  <stateVars assignable="true" defs="#//@procs.10/@blocks.1/@thenBlocks.2/@instructions.9/@target #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.12/@target #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.16/@target #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.20/@target #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.14/@target #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.17/@target #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.32/@target #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.35/@target #//@actions.0/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.1/@target"
      lineNumber="6" name="PMV" uses="#//@procs.10/@blocks.1/@thenBlocks.2/@instructions.1/@source #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.4/@source #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.15/@source #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.19/@source #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.6/@source #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.9/@source #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.24/@source #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.27/@source #//@actions.2/@body/@blocks.1/@blocks.0/@blocks.1/@blocks.0/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeList">
      <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="2">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
      </sizeExpr>
      <type xsi:type="net.sf.orcc.ir:TypeList">
        <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="2">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
        </sizeExpr>
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="2">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeUint"/>
        </type>
      </type>
    </type>
  </stateVars>
  <stateVars assignable="true" defs="#//@procs.9/@blocks.3/@thenBlocks.0/@instructions.3/@target #//@procs.9/@blocks.11/@thenBlocks.0/@instructions.3/@target"
      lineNumber="7" name="dmvector">
    <type xsi:type="net.sf.orcc.ir:TypeList">
      <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="2">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
      </sizeExpr>
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </type>
  </stateVars>
  <stateVars assignable="true" defs="#//@procs.10/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.4/@target #//@procs.10/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.8/@target #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.4/@target #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.22/@target #//@actions.0/@body/@blocks.1/@blocks.0/@blocks.0/@instructions.1/@target"
      lineNumber="8" name="motion_vertical_field_select" uses="#//@actions.2/@body/@blocks.1/@blocks.0/@blocks.0/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeList">
      <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="2">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
      </sizeExpr>
      <type xsi:type="net.sf.orcc.ir:TypeList">
        <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="2">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
        </sizeExpr>
        <type xsi:type="net.sf.orcc.ir:TypeUint"/>
      </type>
    </type>
  </stateVars>
  <stateVars assignable="true" lineNumber="9" name="s" uses="#//@procs.10/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.1/@source #//@procs.10/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.5/@source #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.0/@source #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.3/@source #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.7/@source #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.10/@source #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.13/@source #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.14/@source #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.17/@source #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.18/@source #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.1/@source #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.5/@source #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.8/@source #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.12/@source #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.15/@source #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.19/@source #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.23/@source #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.26/@source #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.30/@source #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.33/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="0">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeUint"/>
  </stateVars>
  <stateVars assignable="true" lineNumber="10" name="motion_vector_count" uses="#//@procs.10/@blocks.0/@instructions.0/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="1">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeUint"/>
  </stateVars>
  <stateVars assignable="true" lineNumber="11" name="mv_format" uses="#//@procs.10/@blocks.1/@thenBlocks.0/@instructions.0/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="0">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeUint"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@procs.9/@blocks.2/@instructions.4/@target"
      lineNumber="12" name="h_r_size" uses="#//@procs.9/@blocks.0/@instructions.4/@source #//@procs.9/@blocks.1/@thenBlocks.0/@instructions.0/@source #//@procs.9/@blocks.2/@instructions.0/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="200">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="8"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeUint"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@procs.9/@blocks.8/@instructions.4/@target"
      lineNumber="13" name="v_r_size" uses="#//@procs.9/@blocks.4/@instructions.4/@source #//@procs.9/@blocks.5/@thenBlocks.0/@instructions.0/@source #//@procs.9/@blocks.8/@instructions.0/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="200">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="8"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeUint"/>
  </stateVars>
  <stateVars assignable="true" lineNumber="14" name="dmv" uses="#//@procs.9/@blocks.2/@instructions.5/@source #//@procs.9/@blocks.10/@instructions.0/@source #//@procs.10/@blocks.1/@thenBlocks.0/@instructions.2/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="0">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeUint"/>
  </stateVars>
  <stateVars assignable="true" lineNumber="15" name="mvscale" uses="#//@procs.9/@blocks.6/@instructions.0/@source #//@procs.9/@blocks.8/@instructions.5/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="1">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeUint"/>
  </stateVars>
  <stateVars assignable="true" lineNumber="16" name="System_Stream_Flag" uses="#//@procs.2/@blocks.0/@instructions.5/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="0">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeUint"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@procs.1/@blocks.2/@blocks.0/@instructions.1/@target #//@procs.2/@blocks.3/@thenBlocks.3/@blocks.0/@instructions.1/@target #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.2/@target #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.5/@target #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.8/@target #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.11/@target"
      lineNumber="17" name="ld_Rdbfr" uses="#//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@blocks.0/@instructions.2/@source #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.2/@instructions.2/@source">
    <type xsi:type="net.sf.orcc.ir:TypeList">
      <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="2048">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="12"/>
      </sizeExpr>
      <type xsi:type="net.sf.orcc.ir:TypeUint"/>
    </type>
  </stateVars>
  <stateVars assignable="true" defs="#//@procs.2/@blocks.0/@instructions.4/@target #//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@blocks.0/@instructions.6/@target #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.2/@instructions.6/@target #//@procs.4/@blocks.0/@instructions.1/@target"
      lineNumber="18" name="ld_Rdptr" uses="#//@procs.3/@blocks.1/@thenBlocks.0/@instructions.0/@source #//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@blocks.0/@instructions.1/@source #//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@blocks.0/@instructions.5/@source #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.0/@instructions.0/@source #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.2/@instructions.1/@source #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.2/@instructions.5/@source #//@procs.4/@blocks.0/@instructions.2/@source">
    <type xsi:type="net.sf.orcc.ir:TypeUint"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@procs.2/@blocks.1/@thenBlocks.0/@instructions.1/@target #//@procs.4/@blocks.0/@instructions.3/@target"
      lineNumber="19" name="ld_Rdmax" uses="#//@procs.2/@blocks.1/@thenBlocks.0/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeUint"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@procs.3/@blocks.0/@instructions.1/@target #//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@blocks.0/@instructions.4/@target #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.2/@instructions.4/@target #//@procs.4/@blocks.0/@instructions.4/@target"
      lineNumber="20" name="ld_Bfr" uses="#//@procs.0/@blocks.0/@instructions.0/@source #//@procs.3/@blocks.0/@instructions.0/@source #//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@blocks.0/@instructions.0/@source #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.2/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeUint"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@procs.3/@blocks.0/@instructions.3/@target #//@procs.3/@blocks.1/@thenBlocks.2/@instructions.1/@target #//@procs.4/@blocks.0/@instructions.0/@target"
      lineNumber="21" name="ld_Incnt" uses="#//@procs.3/@blocks.0/@instructions.2/@source #//@procs.3/@blocks.0/@instructions.4/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@procs.3/@blocks.0/@instructions.5/@target #//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@blocks.0/@instructions.8/@target #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.2/@instructions.8/@target"
      lineNumber="22" name="Incnt" uses="#//@procs.3/@blocks.0/@instructions.6/@source #//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.0/@source #//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@blocks.0/@instructions.3/@source #//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@blocks.0/@instructions.7/@source #//@procs.3/@blocks.1/@thenBlocks.1/@thenBlocks.1/@blocks.1/@instructions.0/@source #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.0/@source #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.2/@instructions.3/@source #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.2/@instructions.7/@source #//@procs.3/@blocks.1/@thenBlocks.1/@elseBlocks.1/@blocks.3/@instructions.0/@source #//@procs.3/@blocks.1/@thenBlocks.2/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@procs.1/@blocks.0/@instructions.0/@target #//@procs.1/@blocks.2/@blocks.0/@instructions.5/@target"
      lineNumber="23" name="n_tmp" uses="#//@procs.1/@blocks.1/@instructions.0/@source #//@procs.1/@blocks.2/@blocks.0/@instructions.4/@source #//@procs.1/@blocks.2/@blocks.1/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@procs.2/@blocks.0/@instructions.3/@target #//@procs.2/@blocks.3/@thenBlocks.1/@thenBlocks.0/@instructions.0/@target #//@procs.2/@blocks.3/@thenBlocks.3/@blocks.0/@instructions.3/@target #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.13/@target"
      lineNumber="24" name="Buffer_Level" uses="#//@procs.2/@blocks.2/@instructions.0/@source #//@procs.2/@blocks.3/@thenBlocks.0/@instructions.0/@source #//@procs.2/@blocks.3/@thenBlocks.2/@instructions.0/@source #//@procs.2/@blocks.3/@thenBlocks.3/@blocks.0/@instructions.0/@source #//@procs.2/@blocks.3/@thenBlocks.3/@blocks.0/@instructions.2/@source #//@procs.2/@blocks.3/@thenBlocks.3/@blocks.1/@instructions.0/@source #//@procs.2/@blocks.3/@thenBlocks.4/@instructions.0/@source #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.0/@source #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.3/@source #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.6/@source #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.9/@source #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.0/@instructions.12/@source #//@procs.2/@blocks.3/@thenBlocks.5/@blocks.1/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@procs.6/@blocks.1/@elseBlocks.0/@instructions.1/@target #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.1/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.1/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.1/@target"
      lineNumber="25" name="code" uses="#//@procs.6/@blocks.1/@elseBlocks.0/@instructions.2/@source #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.0/@source #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.2/@source #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.1/@source #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.1/@source #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.0/@source #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.0/@source #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.2/@source #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.1/@source #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.1/@source #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.0/@source #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.0/@source #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.2/@source #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.1/@source #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.1/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@procs.7/@blocks.0/@instructions.1/@target"
      lineNumber="26" name="lim" uses="#//@procs.7/@blocks.3/@thenBlocks.0/@instructions.5/@source #//@procs.7/@blocks.3/@thenBlocks.1/@thenBlocks.0/@instructions.1/@source #//@procs.7/@blocks.3/@thenBlocks.1/@thenBlocks.0/@instructions.2/@source #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.0/@instructions.5/@source #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.1/@source #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.2/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@procs.7/@blocks.1/@thenBlocks.0/@instructions.1/@target #//@procs.7/@blocks.1/@elseBlocks.0/@instructions.1/@target #//@procs.7/@blocks.3/@thenBlocks.0/@instructions.3/@target #//@procs.7/@blocks.3/@thenBlocks.1/@thenBlocks.0/@instructions.3/@target #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.0/@instructions.3/@target #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.3/@target"
      lineNumber="27" name="vec" uses="#//@procs.7/@blocks.3/@thenBlocks.0/@instructions.0/@source #//@procs.7/@blocks.3/@thenBlocks.0/@instructions.4/@source #//@procs.7/@blocks.3/@thenBlocks.1/@thenBlocks.0/@instructions.0/@source #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.0/@instructions.0/@source #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.0/@instructions.4/@source #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.0/@source #//@procs.7/@blocks.5/@thenBlocks.0/@instructions.0/@source #//@procs.7/@blocks.5/@elseBlocks.0/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@procs.7/@blocks.5/@thenBlocks.0/@instructions.1/@target #//@procs.7/@blocks.5/@elseBlocks.0/@instructions.1/@target #//@procs.9/@blocks.7/@thenBlocks.0/@instructions.1/@target #//@procs.9/@blocks.9/@thenBlocks.0/@instructions.1/@target #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.2/@target #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.5/@target #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.7/@target #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.10/@target #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.25/@target #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.28/@target"
      lineNumber="28" name="pmv_tmp" uses="#//@procs.7/@blocks.1/@thenBlocks.0/@instructions.0/@source #//@procs.7/@blocks.1/@elseBlocks.0/@instructions.0/@source #//@procs.9/@blocks.7/@thenBlocks.0/@instructions.0/@source #//@procs.9/@blocks.9/@thenBlocks.0/@instructions.0/@source #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.8/@source #//@procs.10/@blocks.1/@thenBlocks.2/@instructions.11/@source #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.13/@source #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.16/@source #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.31/@source #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.34/@source">
    <type xsi:type="net.sf.orcc.ir:TypeList">
      <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="2">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
      </sizeExpr>
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </type>
  </stateVars>
  <stateVars assignable="true" defs="#//@procs.9/@blocks.0/@instructions.3/@target #//@procs.9/@blocks.4/@instructions.3/@target"
      lineNumber="29" name="motion_code" uses="#//@procs.7/@blocks.2/@instructions.0/@source #//@procs.7/@blocks.3/@thenBlocks.0/@instructions.1/@source #//@procs.7/@blocks.3/@elseBlocks.0/@instructions.0/@source #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.0/@instructions.1/@source #//@procs.9/@blocks.0/@instructions.5/@source #//@procs.9/@blocks.4/@instructions.5/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@procs.9/@blocks.1/@thenBlocks.0/@instructions.4/@target #//@procs.9/@blocks.1/@elseBlocks.0/@instructions.0/@target #//@procs.9/@blocks.5/@thenBlocks.0/@instructions.4/@target #//@procs.9/@blocks.5/@elseBlocks.0/@instructions.0/@target"
      lineNumber="30" name="motion_residual" uses="#//@procs.7/@blocks.3/@thenBlocks.0/@instructions.2/@source #//@procs.7/@blocks.3/@elseBlocks.1/@thenBlocks.0/@instructions.2/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars assignable="true" lineNumber="31" name="full_pel_vector" uses="#//@procs.7/@blocks.0/@instructions.2/@source #//@procs.7/@blocks.4/@instructions.0/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@procs.1/@blocks.3/@instructions.1/@target #//@procs.5/@blocks.0/@instructions.2/@target #//@procs.6/@blocks.1/@thenBlocks.0/@instructions.1/@target #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.3/@target #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.3/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.3/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.3/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.1/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.3/@target #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.3/@target #//@procs.7/@blocks.6/@instructions.1/@target #//@procs.8/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.1/@target #//@procs.8/@blocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.1/@target #//@procs.8/@blocks.1/@elseBlocks.0/@instructions.1/@target"
      lineNumber="32" name="ret" uses="#//@procs.2/@blocks.0/@instructions.2/@source #//@procs.6/@blocks.0/@instructions.2/@source #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.7/@source #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.7/@source #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.7/@source #//@procs.8/@blocks.0/@instructions.2/@source #//@procs.8/@blocks.1/@thenBlocks.0/@instructions.2/@source #//@procs.9/@blocks.0/@instructions.2/@source #//@procs.9/@blocks.1/@thenBlocks.0/@instructions.3/@source #//@procs.9/@blocks.2/@instructions.3/@source #//@procs.9/@blocks.3/@thenBlocks.0/@instructions.2/@source #//@procs.9/@blocks.4/@instructions.2/@source #//@procs.9/@blocks.5/@thenBlocks.0/@instructions.3/@source #//@procs.9/@blocks.8/@instructions.3/@source #//@procs.9/@blocks.11/@thenBlocks.0/@instructions.2/@source #//@procs.10/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.3/@source #//@procs.10/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.7/@source #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.3/@source #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.21/@source">
    <type xsi:type="net.sf.orcc.ir:TypeList">
      <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="5">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
      </sizeExpr>
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </type>
  </stateVars>
  <stateVars lineNumber="33" name="read_ret" uses="#//@procs.1/@blocks.3/@instructions.0/@source #//@procs.2/@blocks.0/@instructions.1/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="0">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars lineNumber="34" name="gb_ret" uses="#//@procs.5/@blocks.0/@instructions.0/@source #//@procs.6/@blocks.0/@instructions.1/@source #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.6/@source #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.6/@source #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.6/@source #//@procs.8/@blocks.0/@instructions.1/@source #//@procs.8/@blocks.1/@thenBlocks.0/@instructions.1/@source #//@procs.9/@blocks.1/@thenBlocks.0/@instructions.2/@source #//@procs.9/@blocks.5/@thenBlocks.0/@instructions.2/@source #//@procs.10/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.2/@source #//@procs.10/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.6/@source #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.2/@source #//@procs.10/@blocks.1/@elseBlocks.0/@instructions.20/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="1">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars lineNumber="35" name="gmc_ret" uses="#//@procs.6/@blocks.1/@thenBlocks.0/@instructions.0/@source #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.0/@source #//@procs.6/@blocks.1/@elseBlocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.0/@source #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.0/@source #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.0/@source #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.0/@source #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@thenBlocks.0/@instructions.0/@source #//@procs.6/@blocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.1/@elseBlocks.0/@instructions.0/@source #//@procs.9/@blocks.0/@instructions.1/@source #//@procs.9/@blocks.4/@instructions.1/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="2">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars lineNumber="36" name="dmv_ret_r_size" uses="#//@procs.7/@blocks.6/@instructions.0/@source #//@procs.9/@blocks.2/@instructions.2/@source #//@procs.9/@blocks.8/@instructions.2/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="3">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars lineNumber="37" name="get_dmv_ret" uses="#//@procs.8/@blocks.1/@thenBlocks.1/@thenBlocks.0/@instructions.0/@source #//@procs.8/@blocks.1/@thenBlocks.1/@elseBlocks.0/@instructions.0/@source #//@procs.8/@blocks.1/@elseBlocks.0/@instructions.0/@source #//@procs.9/@blocks.3/@thenBlocks.0/@instructions.1/@source #//@procs.9/@blocks.11/@thenBlocks.0/@instructions.1/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="4">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="3"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
</net.sf.orcc.df:Actor>
